/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/static/js/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./node_modules/monaco-editor/esm/vs/language/css/css.worker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/monaco-editor/esm/vs/base/common/arrays.js":
/*!*****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/arrays.js ***!
  \*****************************************************************/
/*! exports provided: tail, tail2, equals, binarySearch, findFirstInSorted, mergeSort, groupBy, coalesce, isFalsyOrEmpty, isNonEmptyArray, distinct, distinctES6, firstIndex, first, flatten, range, arrayInsert, pushToStart, pushToEnd, asArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tail\", function() { return tail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tail2\", function() { return tail2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"binarySearch\", function() { return binarySearch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findFirstInSorted\", function() { return findFirstInSorted; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeSort\", function() { return mergeSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"groupBy\", function() { return groupBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coalesce\", function() { return coalesce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFalsyOrEmpty\", function() { return isFalsyOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonEmptyArray\", function() { return isNonEmptyArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distinct\", function() { return distinct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distinctES6\", function() { return distinctES6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstIndex\", function() { return firstIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return first; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"range\", function() { return range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"arrayInsert\", function() { return arrayInsert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pushToStart\", function() { return pushToStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pushToEnd\", function() { return pushToEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asArray\", function() { return asArray; });\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nfunction tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nfunction tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nfunction findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nfunction mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nfunction groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nfunction coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nfunction distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nfunction distinctES6(array) {\n    var seen = new Set();\n    return array.filter(function (element) {\n        if (seen.has(element)) {\n            return false;\n        }\n        seen.add(element);\n        return true;\n    });\n}\nfunction firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = undefined; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nfunction flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nfunction range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nfunction arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nfunction pushToStart(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nfunction pushToEnd(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nfunction asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/arrays.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/cancellation.js":
/*!***********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/cancellation.js ***!
  \***********************************************************************/
/*! exports provided: CancellationToken, CancellationTokenSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CancellationToken\", function() { return CancellationToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CancellationTokenSource\", function() { return CancellationTokenSource; });\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event.js */ \"./node_modules/monaco-editor/esm/vs/base/common/event.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nvar CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: _event_js__WEBPACK_IMPORTED_MODULE_0__[\"Event\"].None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new _event_js__WEBPACK_IMPORTED_MODULE_0__[\"Emitter\"]();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vY2FuY2VsbGF0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2UvY29tbW9uL2NhbmNlbGxhdGlvbi5qcz8yNTA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRW1pdHRlciwgRXZlbnQgfSBmcm9tICcuL2V2ZW50LmpzJztcbnZhciBzaG9ydGN1dEV2ZW50ID0gT2JqZWN0LmZyZWV6ZShmdW5jdGlvbiAoY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB2YXIgaGFuZGxlID0gc2V0VGltZW91dChjYWxsYmFjay5iaW5kKGNvbnRleHQpLCAwKTtcbiAgICByZXR1cm4geyBkaXNwb3NlOiBmdW5jdGlvbiAoKSB7IGNsZWFyVGltZW91dChoYW5kbGUpOyB9IH07XG59KTtcbmV4cG9ydCB2YXIgQ2FuY2VsbGF0aW9uVG9rZW47XG4oZnVuY3Rpb24gKENhbmNlbGxhdGlvblRva2VuKSB7XG4gICAgZnVuY3Rpb24gaXNDYW5jZWxsYXRpb25Ub2tlbih0aGluZykge1xuICAgICAgICBpZiAodGhpbmcgPT09IENhbmNlbGxhdGlvblRva2VuLk5vbmUgfHwgdGhpbmcgPT09IENhbmNlbGxhdGlvblRva2VuLkNhbmNlbGxlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaW5nIGluc3RhbmNlb2YgTXV0YWJsZVRva2VuKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaW5nIHx8IHR5cGVvZiB0aGluZyAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHlwZW9mIHRoaW5nLmlzQ2FuY2VsbGF0aW9uUmVxdWVzdGVkID09PSAnYm9vbGVhbidcbiAgICAgICAgICAgICYmIHR5cGVvZiB0aGluZy5vbkNhbmNlbGxhdGlvblJlcXVlc3RlZCA9PT0gJ2Z1bmN0aW9uJztcbiAgICB9XG4gICAgQ2FuY2VsbGF0aW9uVG9rZW4uaXNDYW5jZWxsYXRpb25Ub2tlbiA9IGlzQ2FuY2VsbGF0aW9uVG9rZW47XG4gICAgQ2FuY2VsbGF0aW9uVG9rZW4uTm9uZSA9IE9iamVjdC5mcmVlemUoe1xuICAgICAgICBpc0NhbmNlbGxhdGlvblJlcXVlc3RlZDogZmFsc2UsXG4gICAgICAgIG9uQ2FuY2VsbGF0aW9uUmVxdWVzdGVkOiBFdmVudC5Ob25lXG4gICAgfSk7XG4gICAgQ2FuY2VsbGF0aW9uVG9rZW4uQ2FuY2VsbGVkID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICAgIGlzQ2FuY2VsbGF0aW9uUmVxdWVzdGVkOiB0cnVlLFxuICAgICAgICBvbkNhbmNlbGxhdGlvblJlcXVlc3RlZDogc2hvcnRjdXRFdmVudFxuICAgIH0pO1xufSkoQ2FuY2VsbGF0aW9uVG9rZW4gfHwgKENhbmNlbGxhdGlvblRva2VuID0ge30pKTtcbnZhciBNdXRhYmxlVG9rZW4gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTXV0YWJsZVRva2VuKCkge1xuICAgICAgICB0aGlzLl9pc0NhbmNlbGxlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9lbWl0dGVyID0gbnVsbDtcbiAgICB9XG4gICAgTXV0YWJsZVRva2VuLnByb3RvdHlwZS5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5faXNDYW5jZWxsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2lzQ2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9lbWl0dGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZW1pdHRlci5maXJlKHVuZGVmaW5lZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNdXRhYmxlVG9rZW4ucHJvdG90eXBlLCBcImlzQ2FuY2VsbGF0aW9uUmVxdWVzdGVkXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faXNDYW5jZWxsZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNdXRhYmxlVG9rZW4ucHJvdG90eXBlLCBcIm9uQ2FuY2VsbGF0aW9uUmVxdWVzdGVkXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5faXNDYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2hvcnRjdXRFdmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy5fZW1pdHRlcikge1xuICAgICAgICAgICAgICAgIHRoaXMuX2VtaXR0ZXIgPSBuZXcgRW1pdHRlcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2VtaXR0ZXIuZXZlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE11dGFibGVUb2tlbi5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2VtaXR0ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX2VtaXR0ZXIuZGlzcG9zZSgpO1xuICAgICAgICAgICAgdGhpcy5fZW1pdHRlciA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBNdXRhYmxlVG9rZW47XG59KCkpO1xudmFyIENhbmNlbGxhdGlvblRva2VuU291cmNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENhbmNlbGxhdGlvblRva2VuU291cmNlKHBhcmVudCkge1xuICAgICAgICB0aGlzLl90b2tlbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5fcGFyZW50TGlzdGVuZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuX3BhcmVudExpc3RlbmVyID0gcGFyZW50ICYmIHBhcmVudC5vbkNhbmNlbGxhdGlvblJlcXVlc3RlZCh0aGlzLmNhbmNlbCwgdGhpcyk7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDYW5jZWxsYXRpb25Ub2tlblNvdXJjZS5wcm90b3R5cGUsIFwidG9rZW5cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5fdG9rZW4pIHtcbiAgICAgICAgICAgICAgICAvLyBiZSBsYXp5IGFuZCBjcmVhdGUgdGhlIHRva2VuIG9ubHkgd2hlblxuICAgICAgICAgICAgICAgIC8vIGFjdHVhbGx5IG5lZWRlZFxuICAgICAgICAgICAgICAgIHRoaXMuX3Rva2VuID0gbmV3IE11dGFibGVUb2tlbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Rva2VuO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBDYW5jZWxsYXRpb25Ub2tlblNvdXJjZS5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3Rva2VuKSB7XG4gICAgICAgICAgICAvLyBzYXZlIGFuIG9iamVjdCBieSByZXR1cm5pbmcgdGhlIGRlZmF1bHRcbiAgICAgICAgICAgIC8vIGNhbmNlbGxlZCB0b2tlbiB3aGVuIGNhbmNlbGxhdGlvbiBoYXBwZW5zXG4gICAgICAgICAgICAvLyBiZWZvcmUgc29tZW9uZSBhc2tzIGZvciB0aGUgdG9rZW5cbiAgICAgICAgICAgIHRoaXMuX3Rva2VuID0gQ2FuY2VsbGF0aW9uVG9rZW4uQ2FuY2VsbGVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX3Rva2VuIGluc3RhbmNlb2YgTXV0YWJsZVRva2VuKSB7XG4gICAgICAgICAgICAvLyBhY3R1YWxseSBjYW5jZWxcbiAgICAgICAgICAgIHRoaXMuX3Rva2VuLmNhbmNlbCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDYW5jZWxsYXRpb25Ub2tlblNvdXJjZS5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3BhcmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgICB0aGlzLl9wYXJlbnRMaXN0ZW5lci5kaXNwb3NlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl90b2tlbikge1xuICAgICAgICAgICAgLy8gZW5zdXJlIHRvIGluaXRpYWxpemUgd2l0aCBhbiBlbXB0eSB0b2tlbiBpZiB3ZSBoYWQgbm9uZVxuICAgICAgICAgICAgdGhpcy5fdG9rZW4gPSBDYW5jZWxsYXRpb25Ub2tlbi5Ob25lO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX3Rva2VuIGluc3RhbmNlb2YgTXV0YWJsZVRva2VuKSB7XG4gICAgICAgICAgICAvLyBhY3R1YWxseSBkaXNwb3NlXG4gICAgICAgICAgICB0aGlzLl90b2tlbi5kaXNwb3NlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBDYW5jZWxsYXRpb25Ub2tlblNvdXJjZTtcbn0oKSk7XG5leHBvcnQgeyBDYW5jZWxsYXRpb25Ub2tlblNvdXJjZSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js":
/*!********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js ***!
  \********************************************************************/
/*! exports provided: stringDiff, Debug, MyArray, LcsDiff */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stringDiff\", function() { return stringDiff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Debug\", function() { return Debug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MyArray\", function() { return MyArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LcsDiff\", function() { return LcsDiff; });\n/* harmony import */ var _diffChange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diffChange.js */ \"./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nfunction stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\n\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new _diffChange_js__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js ***!
  \**************************************************************************/
/*! exports provided: DiffChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffChange\", function() { return DiffChange; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vZGlmZi9kaWZmQ2hhbmdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2UvY29tbW9uL2RpZmYvZGlmZkNoYW5nZS5qcz8xNWYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBSZXByZXNlbnRzIGluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byBzZXF1ZW5jZXMuXG4gKi9cbnZhciBEaWZmQ2hhbmdlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYSBuZXcgRGlmZkNoYW5nZSB3aXRoIHRoZSBnaXZlbiBzZXF1ZW5jZSBpbmZvcm1hdGlvblxuICAgICAqIGFuZCBjb250ZW50LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIERpZmZDaGFuZ2Uob3JpZ2luYWxTdGFydCwgb3JpZ2luYWxMZW5ndGgsIG1vZGlmaWVkU3RhcnQsIG1vZGlmaWVkTGVuZ3RoKSB7XG4gICAgICAgIC8vRGVidWcuQXNzZXJ0KG9yaWdpbmFsTGVuZ3RoID4gMCB8fCBtb2RpZmllZExlbmd0aCA+IDAsIFwib3JpZ2luYWxMZW5ndGggYW5kIG1vZGlmaWVkTGVuZ3RoIGNhbm5vdCBib3RoIGJlIDw9IDBcIik7XG4gICAgICAgIHRoaXMub3JpZ2luYWxTdGFydCA9IG9yaWdpbmFsU3RhcnQ7XG4gICAgICAgIHRoaXMub3JpZ2luYWxMZW5ndGggPSBvcmlnaW5hbExlbmd0aDtcbiAgICAgICAgdGhpcy5tb2RpZmllZFN0YXJ0ID0gbW9kaWZpZWRTdGFydDtcbiAgICAgICAgdGhpcy5tb2RpZmllZExlbmd0aCA9IG1vZGlmaWVkTGVuZ3RoO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZW5kIHBvaW50IChleGNsdXNpdmUpIG9mIHRoZSBjaGFuZ2UgaW4gdGhlIG9yaWdpbmFsIHNlcXVlbmNlLlxuICAgICAqL1xuICAgIERpZmZDaGFuZ2UucHJvdG90eXBlLmdldE9yaWdpbmFsRW5kID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vcmlnaW5hbFN0YXJ0ICsgdGhpcy5vcmlnaW5hbExlbmd0aDtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRoZSBlbmQgcG9pbnQgKGV4Y2x1c2l2ZSkgb2YgdGhlIGNoYW5nZSBpbiB0aGUgbW9kaWZpZWQgc2VxdWVuY2UuXG4gICAgICovXG4gICAgRGlmZkNoYW5nZS5wcm90b3R5cGUuZ2V0TW9kaWZpZWRFbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vZGlmaWVkU3RhcnQgKyB0aGlzLm1vZGlmaWVkTGVuZ3RoO1xuICAgIH07XG4gICAgcmV0dXJuIERpZmZDaGFuZ2U7XG59KCkpO1xuZXhwb3J0IHsgRGlmZkNoYW5nZSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/errors.js":
/*!*****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/errors.js ***!
  \*****************************************************************/
/*! exports provided: ErrorHandler, errorHandler, onUnexpectedError, onUnexpectedExternalError, transformErrorForSerialization, isPromiseCanceledError, canceled, illegalArgument, illegalState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrorHandler\", function() { return ErrorHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"errorHandler\", function() { return errorHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onUnexpectedError\", function() { return onUnexpectedError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onUnexpectedExternalError\", function() { return onUnexpectedExternalError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformErrorForSerialization\", function() { return transformErrorForSerialization; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPromiseCanceledError\", function() { return isPromiseCanceledError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canceled\", function() { return canceled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"illegalArgument\", function() { return illegalArgument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"illegalState\", function() { return illegalState; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\n\nvar errorHandler = new ErrorHandler();\nfunction onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nfunction isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nfunction canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vZXJyb3JzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2UvY29tbW9uL2Vycm9ycy5qcz9mZGNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLy8gQXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jeSBvbiBFdmVudEVtaXR0ZXIgYnkgaW1wbGVtZW50aW5nIGEgc3Vic2V0IG9mIHRoZSBpbnRlcmZhY2UuXG52YXIgRXJyb3JIYW5kbGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEVycm9ySGFuZGxlcigpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMgPSBbXTtcbiAgICAgICAgdGhpcy51bmV4cGVjdGVkRXJyb3JIYW5kbGVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChlLnN0YWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2UgKyAnXFxuXFxuJyArIGUuc3RhY2spO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIEVycm9ySGFuZGxlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICBsaXN0ZW5lcihlKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBFcnJvckhhbmRsZXIucHJvdG90eXBlLm9uVW5leHBlY3RlZEVycm9yID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdGhpcy51bmV4cGVjdGVkRXJyb3JIYW5kbGVyKGUpO1xuICAgICAgICB0aGlzLmVtaXQoZSk7XG4gICAgfTtcbiAgICAvLyBGb3IgZXh0ZXJuYWwgZXJyb3JzLCB3ZSBkb24ndCB3YW50IHRoZSBsaXN0ZW5lcnMgdG8gYmUgY2FsbGVkXG4gICAgRXJyb3JIYW5kbGVyLnByb3RvdHlwZS5vblVuZXhwZWN0ZWRFeHRlcm5hbEVycm9yID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdGhpcy51bmV4cGVjdGVkRXJyb3JIYW5kbGVyKGUpO1xuICAgIH07XG4gICAgcmV0dXJuIEVycm9ySGFuZGxlcjtcbn0oKSk7XG5leHBvcnQgeyBFcnJvckhhbmRsZXIgfTtcbmV4cG9ydCB2YXIgZXJyb3JIYW5kbGVyID0gbmV3IEVycm9ySGFuZGxlcigpO1xuZXhwb3J0IGZ1bmN0aW9uIG9uVW5leHBlY3RlZEVycm9yKGUpIHtcbiAgICAvLyBpZ25vcmUgZXJyb3JzIGZyb20gY2FuY2VsbGVkIHByb21pc2VzXG4gICAgaWYgKCFpc1Byb21pc2VDYW5jZWxlZEVycm9yKGUpKSB7XG4gICAgICAgIGVycm9ySGFuZGxlci5vblVuZXhwZWN0ZWRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvblVuZXhwZWN0ZWRFeHRlcm5hbEVycm9yKGUpIHtcbiAgICAvLyBpZ25vcmUgZXJyb3JzIGZyb20gY2FuY2VsbGVkIHByb21pc2VzXG4gICAgaWYgKCFpc1Byb21pc2VDYW5jZWxlZEVycm9yKGUpKSB7XG4gICAgICAgIGVycm9ySGFuZGxlci5vblVuZXhwZWN0ZWRFeHRlcm5hbEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUVycm9yRm9yU2VyaWFsaXphdGlvbihlcnJvcikge1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHZhciBuYW1lXzEgPSBlcnJvci5uYW1lLCBtZXNzYWdlID0gZXJyb3IubWVzc2FnZTtcbiAgICAgICAgdmFyIHN0YWNrID0gZXJyb3Iuc3RhY2t0cmFjZSB8fCBlcnJvci5zdGFjaztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICRpc0Vycm9yOiB0cnVlLFxuICAgICAgICAgICAgbmFtZTogbmFtZV8xLFxuICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgICAgICAgIHN0YWNrOiBzdGFja1xuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyByZXR1cm4gYXMgaXNcbiAgICByZXR1cm4gZXJyb3I7XG59XG52YXIgY2FuY2VsZWROYW1lID0gJ0NhbmNlbGVkJztcbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBlcnJvciBpcyBhIHByb21pc2UgaW4gY2FuY2VsZWQgc3RhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvbWlzZUNhbmNlbGVkRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiBlcnJvci5uYW1lID09PSBjYW5jZWxlZE5hbWUgJiYgZXJyb3IubWVzc2FnZSA9PT0gY2FuY2VsZWROYW1lO1xufVxuLyoqXG4gKiBSZXR1cm5zIGFuIGVycm9yIHRoYXQgc2lnbmFscyBjYW5jZWxsYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjYW5jZWxlZCgpIHtcbiAgICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IoY2FuY2VsZWROYW1lKTtcbiAgICBlcnJvci5uYW1lID0gZXJyb3IubWVzc2FnZTtcbiAgICByZXR1cm4gZXJyb3I7XG59XG5leHBvcnQgZnVuY3Rpb24gaWxsZWdhbEFyZ3VtZW50KG5hbWUpIHtcbiAgICBpZiAobmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSWxsZWdhbCBhcmd1bWVudDogXCIgKyBuYW1lKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ0lsbGVnYWwgYXJndW1lbnQnKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaWxsZWdhbFN0YXRlKG5hbWUpIHtcbiAgICBpZiAobmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSWxsZWdhbCBzdGF0ZTogXCIgKyBuYW1lKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ0lsbGVnYWwgc3RhdGUnKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/errors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/event.js":
/*!****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/event.js ***!
  \****************************************************************/
/*! exports provided: Event, Emitter, PauseableEmitter, EventMultiplexer, EventBufferer, Relay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Event\", function() { return Event; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Emitter\", function() { return Emitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PauseableEmitter\", function() { return PauseableEmitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventMultiplexer\", function() { return EventMultiplexer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventBufferer\", function() { return EventBufferer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Relay\", function() { return Relay; });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/monaco-editor/esm/vs/base/common/errors.js\");\n/* harmony import */ var _functional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functional.js */ \"./node_modules/monaco-editor/esm/vs/base/common/functional.js\");\n/* harmony import */ var _lifecycle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lifecycle.js */ \"./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js\");\n/* harmony import */ var _linkedList_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linkedList.js */ \"./node_modules/monaco-editor/esm/vs/base/common/linkedList.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return Object(_lifecycle_js__WEBPACK_IMPORTED_MODULE_2__[\"combinedDisposable\"])(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new _linkedList_js__WEBPACK_IMPORTED_MODULE_3__[\"LinkedList\"]();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new _linkedList_js__WEBPACK_IMPORTED_MODULE_3__[\"LinkedList\"]();\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.size > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    Object(_errors_js__WEBPACK_IMPORTED_MODULE_0__[\"onUnexpectedError\"])(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners.clear();\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.clear();\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\n\nvar PauseableEmitter = /** @class */ (function (_super) {\n    __extends(PauseableEmitter, _super);\n    function PauseableEmitter(options) {\n        var _this = _super.call(this, options) || this;\n        _this._isPaused = 0;\n        _this._eventQueue = new _linkedList_js__WEBPACK_IMPORTED_MODULE_3__[\"LinkedList\"]();\n        _this._mergeFn = options && options.merge;\n        return _this;\n    }\n    PauseableEmitter.prototype.pause = function () {\n        this._isPaused++;\n    };\n    PauseableEmitter.prototype.resume = function () {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                var events = this._eventQueue.toArray();\n                this._eventQueue.clear();\n                _super.prototype.fire.call(this, this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    _super.prototype.fire.call(this, this._eventQueue.shift());\n                }\n            }\n        }\n    };\n    PauseableEmitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                _super.prototype.fire.call(this, event);\n            }\n        }\n    };\n    return PauseableEmitter;\n}(Emitter));\n\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return Object(_lifecycle_js__WEBPACK_IMPORTED_MODULE_2__[\"toDisposable\"])(Object(_functional_js__WEBPACK_IMPORTED_MODULE_1__[\"once\"])(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = _lifecycle_js__WEBPACK_IMPORTED_MODULE_2__[\"Disposable\"].None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/event.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/functional.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/functional.js ***!
  \*********************************************************************/
/*! exports provided: once */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return once; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vZnVuY3Rpb25hbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNlL2NvbW1vbi9mdW5jdGlvbmFsLmpzPzBiZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gb25jZShmbikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgdmFyIGRpZENhbGwgPSBmYWxzZTtcbiAgICB2YXIgcmVzdWx0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChkaWRDYWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGRpZENhbGwgPSB0cnVlO1xuICAgICAgICByZXN1bHQgPSBmbi5hcHBseShfdGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/functional.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/iterator.js ***!
  \*******************************************************************/
/*! exports provided: FIN, Iterator, getSequenceIterator, ArrayIterator, ArrayNavigator, MappedIterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FIN\", function() { return FIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iterator\", function() { return Iterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSequenceIterator\", function() { return getSequenceIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrayIterator\", function() { return ArrayIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrayNavigator\", function() { return ArrayNavigator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MappedIterator\", function() { return MappedIterator; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar FIN = { done: true, value: undefined };\nvar Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nfunction getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\n\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\n\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js ***!
  \*******************************************************************/
/*! exports provided: KeyCodeUtils, KeyChord, createKeybinding, createSimpleKeybinding, SimpleKeybinding, ChordKeybinding, ResolvedKeybindingPart, ResolvedKeybinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyCodeUtils\", function() { return KeyCodeUtils; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyChord\", function() { return KeyChord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createKeybinding\", function() { return createKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSimpleKeybinding\", function() { return createSimpleKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleKeybinding\", function() { return SimpleKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChordKeybinding\", function() { return ChordKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolvedKeybindingPart\", function() { return ResolvedKeybindingPart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolvedKeybinding\", function() { return ResolvedKeybinding; });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/monaco-editor/esm/vs/base/common/errors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nvar KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nfunction KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nfunction createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nfunction createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\n\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw Object(_errors_js__WEBPACK_IMPORTED_MODULE_0__[\"illegalArgument\"])(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\n\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24va2V5Q29kZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24va2V5Q29kZXMuanM/ZmU0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IGlsbGVnYWxBcmd1bWVudCB9IGZyb20gJy4vZXJyb3JzLmpzJztcbnZhciBLZXlDb2RlU3RyTWFwID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEtleUNvZGVTdHJNYXAoKSB7XG4gICAgICAgIHRoaXMuX2tleUNvZGVUb1N0ciA9IFtdO1xuICAgICAgICB0aGlzLl9zdHJUb0tleUNvZGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIH1cbiAgICBLZXlDb2RlU3RyTWFwLnByb3RvdHlwZS5kZWZpbmUgPSBmdW5jdGlvbiAoa2V5Q29kZSwgc3RyKSB7XG4gICAgICAgIHRoaXMuX2tleUNvZGVUb1N0cltrZXlDb2RlXSA9IHN0cjtcbiAgICAgICAgdGhpcy5fc3RyVG9LZXlDb2RlW3N0ci50b0xvd2VyQ2FzZSgpXSA9IGtleUNvZGU7XG4gICAgfTtcbiAgICBLZXlDb2RlU3RyTWFwLnByb3RvdHlwZS5rZXlDb2RlVG9TdHIgPSBmdW5jdGlvbiAoa2V5Q29kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fa2V5Q29kZVRvU3RyW2tleUNvZGVdO1xuICAgIH07XG4gICAgS2V5Q29kZVN0ck1hcC5wcm90b3R5cGUuc3RyVG9LZXlDb2RlID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RyVG9LZXlDb2RlW3N0ci50b0xvd2VyQ2FzZSgpXSB8fCAwIC8qIFVua25vd24gKi87XG4gICAgfTtcbiAgICByZXR1cm4gS2V5Q29kZVN0ck1hcDtcbn0oKSk7XG52YXIgdWlNYXAgPSBuZXcgS2V5Q29kZVN0ck1hcCgpO1xudmFyIHVzZXJTZXR0aW5nc1VTTWFwID0gbmV3IEtleUNvZGVTdHJNYXAoKTtcbnZhciB1c2VyU2V0dGluZ3NHZW5lcmFsTWFwID0gbmV3IEtleUNvZGVTdHJNYXAoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gZGVmaW5lKGtleUNvZGUsIHVpTGFiZWwsIHVzVXNlclNldHRpbmdzTGFiZWwsIGdlbmVyYWxVc2VyU2V0dGluZ3NMYWJlbCkge1xuICAgICAgICBpZiAodXNVc2VyU2V0dGluZ3NMYWJlbCA9PT0gdm9pZCAwKSB7IHVzVXNlclNldHRpbmdzTGFiZWwgPSB1aUxhYmVsOyB9XG4gICAgICAgIGlmIChnZW5lcmFsVXNlclNldHRpbmdzTGFiZWwgPT09IHZvaWQgMCkgeyBnZW5lcmFsVXNlclNldHRpbmdzTGFiZWwgPSB1c1VzZXJTZXR0aW5nc0xhYmVsOyB9XG4gICAgICAgIHVpTWFwLmRlZmluZShrZXlDb2RlLCB1aUxhYmVsKTtcbiAgICAgICAgdXNlclNldHRpbmdzVVNNYXAuZGVmaW5lKGtleUNvZGUsIHVzVXNlclNldHRpbmdzTGFiZWwpO1xuICAgICAgICB1c2VyU2V0dGluZ3NHZW5lcmFsTWFwLmRlZmluZShrZXlDb2RlLCBnZW5lcmFsVXNlclNldHRpbmdzTGFiZWwpO1xuICAgIH1cbiAgICBkZWZpbmUoMCAvKiBVbmtub3duICovLCAndW5rbm93bicpO1xuICAgIGRlZmluZSgxIC8qIEJhY2tzcGFjZSAqLywgJ0JhY2tzcGFjZScpO1xuICAgIGRlZmluZSgyIC8qIFRhYiAqLywgJ1RhYicpO1xuICAgIGRlZmluZSgzIC8qIEVudGVyICovLCAnRW50ZXInKTtcbiAgICBkZWZpbmUoNCAvKiBTaGlmdCAqLywgJ1NoaWZ0Jyk7XG4gICAgZGVmaW5lKDUgLyogQ3RybCAqLywgJ0N0cmwnKTtcbiAgICBkZWZpbmUoNiAvKiBBbHQgKi8sICdBbHQnKTtcbiAgICBkZWZpbmUoNyAvKiBQYXVzZUJyZWFrICovLCAnUGF1c2VCcmVhaycpO1xuICAgIGRlZmluZSg4IC8qIENhcHNMb2NrICovLCAnQ2Fwc0xvY2snKTtcbiAgICBkZWZpbmUoOSAvKiBFc2NhcGUgKi8sICdFc2NhcGUnKTtcbiAgICBkZWZpbmUoMTAgLyogU3BhY2UgKi8sICdTcGFjZScpO1xuICAgIGRlZmluZSgxMSAvKiBQYWdlVXAgKi8sICdQYWdlVXAnKTtcbiAgICBkZWZpbmUoMTIgLyogUGFnZURvd24gKi8sICdQYWdlRG93bicpO1xuICAgIGRlZmluZSgxMyAvKiBFbmQgKi8sICdFbmQnKTtcbiAgICBkZWZpbmUoMTQgLyogSG9tZSAqLywgJ0hvbWUnKTtcbiAgICBkZWZpbmUoMTUgLyogTGVmdEFycm93ICovLCAnTGVmdEFycm93JywgJ0xlZnQnKTtcbiAgICBkZWZpbmUoMTYgLyogVXBBcnJvdyAqLywgJ1VwQXJyb3cnLCAnVXAnKTtcbiAgICBkZWZpbmUoMTcgLyogUmlnaHRBcnJvdyAqLywgJ1JpZ2h0QXJyb3cnLCAnUmlnaHQnKTtcbiAgICBkZWZpbmUoMTggLyogRG93bkFycm93ICovLCAnRG93bkFycm93JywgJ0Rvd24nKTtcbiAgICBkZWZpbmUoMTkgLyogSW5zZXJ0ICovLCAnSW5zZXJ0Jyk7XG4gICAgZGVmaW5lKDIwIC8qIERlbGV0ZSAqLywgJ0RlbGV0ZScpO1xuICAgIGRlZmluZSgyMSAvKiBLRVlfMCAqLywgJzAnKTtcbiAgICBkZWZpbmUoMjIgLyogS0VZXzEgKi8sICcxJyk7XG4gICAgZGVmaW5lKDIzIC8qIEtFWV8yICovLCAnMicpO1xuICAgIGRlZmluZSgyNCAvKiBLRVlfMyAqLywgJzMnKTtcbiAgICBkZWZpbmUoMjUgLyogS0VZXzQgKi8sICc0Jyk7XG4gICAgZGVmaW5lKDI2IC8qIEtFWV81ICovLCAnNScpO1xuICAgIGRlZmluZSgyNyAvKiBLRVlfNiAqLywgJzYnKTtcbiAgICBkZWZpbmUoMjggLyogS0VZXzcgKi8sICc3Jyk7XG4gICAgZGVmaW5lKDI5IC8qIEtFWV84ICovLCAnOCcpO1xuICAgIGRlZmluZSgzMCAvKiBLRVlfOSAqLywgJzknKTtcbiAgICBkZWZpbmUoMzEgLyogS0VZX0EgKi8sICdBJyk7XG4gICAgZGVmaW5lKDMyIC8qIEtFWV9CICovLCAnQicpO1xuICAgIGRlZmluZSgzMyAvKiBLRVlfQyAqLywgJ0MnKTtcbiAgICBkZWZpbmUoMzQgLyogS0VZX0QgKi8sICdEJyk7XG4gICAgZGVmaW5lKDM1IC8qIEtFWV9FICovLCAnRScpO1xuICAgIGRlZmluZSgzNiAvKiBLRVlfRiAqLywgJ0YnKTtcbiAgICBkZWZpbmUoMzcgLyogS0VZX0cgKi8sICdHJyk7XG4gICAgZGVmaW5lKDM4IC8qIEtFWV9IICovLCAnSCcpO1xuICAgIGRlZmluZSgzOSAvKiBLRVlfSSAqLywgJ0knKTtcbiAgICBkZWZpbmUoNDAgLyogS0VZX0ogKi8sICdKJyk7XG4gICAgZGVmaW5lKDQxIC8qIEtFWV9LICovLCAnSycpO1xuICAgIGRlZmluZSg0MiAvKiBLRVlfTCAqLywgJ0wnKTtcbiAgICBkZWZpbmUoNDMgLyogS0VZX00gKi8sICdNJyk7XG4gICAgZGVmaW5lKDQ0IC8qIEtFWV9OICovLCAnTicpO1xuICAgIGRlZmluZSg0NSAvKiBLRVlfTyAqLywgJ08nKTtcbiAgICBkZWZpbmUoNDYgLyogS0VZX1AgKi8sICdQJyk7XG4gICAgZGVmaW5lKDQ3IC8qIEtFWV9RICovLCAnUScpO1xuICAgIGRlZmluZSg0OCAvKiBLRVlfUiAqLywgJ1InKTtcbiAgICBkZWZpbmUoNDkgLyogS0VZX1MgKi8sICdTJyk7XG4gICAgZGVmaW5lKDUwIC8qIEtFWV9UICovLCAnVCcpO1xuICAgIGRlZmluZSg1MSAvKiBLRVlfVSAqLywgJ1UnKTtcbiAgICBkZWZpbmUoNTIgLyogS0VZX1YgKi8sICdWJyk7XG4gICAgZGVmaW5lKDUzIC8qIEtFWV9XICovLCAnVycpO1xuICAgIGRlZmluZSg1NCAvKiBLRVlfWCAqLywgJ1gnKTtcbiAgICBkZWZpbmUoNTUgLyogS0VZX1kgKi8sICdZJyk7XG4gICAgZGVmaW5lKDU2IC8qIEtFWV9aICovLCAnWicpO1xuICAgIGRlZmluZSg1NyAvKiBNZXRhICovLCAnTWV0YScpO1xuICAgIGRlZmluZSg1OCAvKiBDb250ZXh0TWVudSAqLywgJ0NvbnRleHRNZW51Jyk7XG4gICAgZGVmaW5lKDU5IC8qIEYxICovLCAnRjEnKTtcbiAgICBkZWZpbmUoNjAgLyogRjIgKi8sICdGMicpO1xuICAgIGRlZmluZSg2MSAvKiBGMyAqLywgJ0YzJyk7XG4gICAgZGVmaW5lKDYyIC8qIEY0ICovLCAnRjQnKTtcbiAgICBkZWZpbmUoNjMgLyogRjUgKi8sICdGNScpO1xuICAgIGRlZmluZSg2NCAvKiBGNiAqLywgJ0Y2Jyk7XG4gICAgZGVmaW5lKDY1IC8qIEY3ICovLCAnRjcnKTtcbiAgICBkZWZpbmUoNjYgLyogRjggKi8sICdGOCcpO1xuICAgIGRlZmluZSg2NyAvKiBGOSAqLywgJ0Y5Jyk7XG4gICAgZGVmaW5lKDY4IC8qIEYxMCAqLywgJ0YxMCcpO1xuICAgIGRlZmluZSg2OSAvKiBGMTEgKi8sICdGMTEnKTtcbiAgICBkZWZpbmUoNzAgLyogRjEyICovLCAnRjEyJyk7XG4gICAgZGVmaW5lKDcxIC8qIEYxMyAqLywgJ0YxMycpO1xuICAgIGRlZmluZSg3MiAvKiBGMTQgKi8sICdGMTQnKTtcbiAgICBkZWZpbmUoNzMgLyogRjE1ICovLCAnRjE1Jyk7XG4gICAgZGVmaW5lKDc0IC8qIEYxNiAqLywgJ0YxNicpO1xuICAgIGRlZmluZSg3NSAvKiBGMTcgKi8sICdGMTcnKTtcbiAgICBkZWZpbmUoNzYgLyogRjE4ICovLCAnRjE4Jyk7XG4gICAgZGVmaW5lKDc3IC8qIEYxOSAqLywgJ0YxOScpO1xuICAgIGRlZmluZSg3OCAvKiBOdW1Mb2NrICovLCAnTnVtTG9jaycpO1xuICAgIGRlZmluZSg3OSAvKiBTY3JvbGxMb2NrICovLCAnU2Nyb2xsTG9jaycpO1xuICAgIGRlZmluZSg4MCAvKiBVU19TRU1JQ09MT04gKi8sICc7JywgJzsnLCAnT0VNXzEnKTtcbiAgICBkZWZpbmUoODEgLyogVVNfRVFVQUwgKi8sICc9JywgJz0nLCAnT0VNX1BMVVMnKTtcbiAgICBkZWZpbmUoODIgLyogVVNfQ09NTUEgKi8sICcsJywgJywnLCAnT0VNX0NPTU1BJyk7XG4gICAgZGVmaW5lKDgzIC8qIFVTX01JTlVTICovLCAnLScsICctJywgJ09FTV9NSU5VUycpO1xuICAgIGRlZmluZSg4NCAvKiBVU19ET1QgKi8sICcuJywgJy4nLCAnT0VNX1BFUklPRCcpO1xuICAgIGRlZmluZSg4NSAvKiBVU19TTEFTSCAqLywgJy8nLCAnLycsICdPRU1fMicpO1xuICAgIGRlZmluZSg4NiAvKiBVU19CQUNLVElDSyAqLywgJ2AnLCAnYCcsICdPRU1fMycpO1xuICAgIGRlZmluZSgxMTAgLyogQUJOVF9DMSAqLywgJ0FCTlRfQzEnKTtcbiAgICBkZWZpbmUoMTExIC8qIEFCTlRfQzIgKi8sICdBQk5UX0MyJyk7XG4gICAgZGVmaW5lKDg3IC8qIFVTX09QRU5fU1FVQVJFX0JSQUNLRVQgKi8sICdbJywgJ1snLCAnT0VNXzQnKTtcbiAgICBkZWZpbmUoODggLyogVVNfQkFDS1NMQVNIICovLCAnXFxcXCcsICdcXFxcJywgJ09FTV81Jyk7XG4gICAgZGVmaW5lKDg5IC8qIFVTX0NMT1NFX1NRVUFSRV9CUkFDS0VUICovLCAnXScsICddJywgJ09FTV82Jyk7XG4gICAgZGVmaW5lKDkwIC8qIFVTX1FVT1RFICovLCAnXFwnJywgJ1xcJycsICdPRU1fNycpO1xuICAgIGRlZmluZSg5MSAvKiBPRU1fOCAqLywgJ09FTV84Jyk7XG4gICAgZGVmaW5lKDkyIC8qIE9FTV8xMDIgKi8sICdPRU1fMTAyJyk7XG4gICAgZGVmaW5lKDkzIC8qIE5VTVBBRF8wICovLCAnTnVtUGFkMCcpO1xuICAgIGRlZmluZSg5NCAvKiBOVU1QQURfMSAqLywgJ051bVBhZDEnKTtcbiAgICBkZWZpbmUoOTUgLyogTlVNUEFEXzIgKi8sICdOdW1QYWQyJyk7XG4gICAgZGVmaW5lKDk2IC8qIE5VTVBBRF8zICovLCAnTnVtUGFkMycpO1xuICAgIGRlZmluZSg5NyAvKiBOVU1QQURfNCAqLywgJ051bVBhZDQnKTtcbiAgICBkZWZpbmUoOTggLyogTlVNUEFEXzUgKi8sICdOdW1QYWQ1Jyk7XG4gICAgZGVmaW5lKDk5IC8qIE5VTVBBRF82ICovLCAnTnVtUGFkNicpO1xuICAgIGRlZmluZSgxMDAgLyogTlVNUEFEXzcgKi8sICdOdW1QYWQ3Jyk7XG4gICAgZGVmaW5lKDEwMSAvKiBOVU1QQURfOCAqLywgJ051bVBhZDgnKTtcbiAgICBkZWZpbmUoMTAyIC8qIE5VTVBBRF85ICovLCAnTnVtUGFkOScpO1xuICAgIGRlZmluZSgxMDMgLyogTlVNUEFEX01VTFRJUExZICovLCAnTnVtUGFkX011bHRpcGx5Jyk7XG4gICAgZGVmaW5lKDEwNCAvKiBOVU1QQURfQUREICovLCAnTnVtUGFkX0FkZCcpO1xuICAgIGRlZmluZSgxMDUgLyogTlVNUEFEX1NFUEFSQVRPUiAqLywgJ051bVBhZF9TZXBhcmF0b3InKTtcbiAgICBkZWZpbmUoMTA2IC8qIE5VTVBBRF9TVUJUUkFDVCAqLywgJ051bVBhZF9TdWJ0cmFjdCcpO1xuICAgIGRlZmluZSgxMDcgLyogTlVNUEFEX0RFQ0lNQUwgKi8sICdOdW1QYWRfRGVjaW1hbCcpO1xuICAgIGRlZmluZSgxMDggLyogTlVNUEFEX0RJVklERSAqLywgJ051bVBhZF9EaXZpZGUnKTtcbn0pKCk7XG5leHBvcnQgdmFyIEtleUNvZGVVdGlscztcbihmdW5jdGlvbiAoS2V5Q29kZVV0aWxzKSB7XG4gICAgZnVuY3Rpb24gdG9TdHJpbmcoa2V5Q29kZSkge1xuICAgICAgICByZXR1cm4gdWlNYXAua2V5Q29kZVRvU3RyKGtleUNvZGUpO1xuICAgIH1cbiAgICBLZXlDb2RlVXRpbHMudG9TdHJpbmcgPSB0b1N0cmluZztcbiAgICBmdW5jdGlvbiBmcm9tU3RyaW5nKGtleSkge1xuICAgICAgICByZXR1cm4gdWlNYXAuc3RyVG9LZXlDb2RlKGtleSk7XG4gICAgfVxuICAgIEtleUNvZGVVdGlscy5mcm9tU3RyaW5nID0gZnJvbVN0cmluZztcbiAgICBmdW5jdGlvbiB0b1VzZXJTZXR0aW5nc1VTKGtleUNvZGUpIHtcbiAgICAgICAgcmV0dXJuIHVzZXJTZXR0aW5nc1VTTWFwLmtleUNvZGVUb1N0cihrZXlDb2RlKTtcbiAgICB9XG4gICAgS2V5Q29kZVV0aWxzLnRvVXNlclNldHRpbmdzVVMgPSB0b1VzZXJTZXR0aW5nc1VTO1xuICAgIGZ1bmN0aW9uIHRvVXNlclNldHRpbmdzR2VuZXJhbChrZXlDb2RlKSB7XG4gICAgICAgIHJldHVybiB1c2VyU2V0dGluZ3NHZW5lcmFsTWFwLmtleUNvZGVUb1N0cihrZXlDb2RlKTtcbiAgICB9XG4gICAgS2V5Q29kZVV0aWxzLnRvVXNlclNldHRpbmdzR2VuZXJhbCA9IHRvVXNlclNldHRpbmdzR2VuZXJhbDtcbiAgICBmdW5jdGlvbiBmcm9tVXNlclNldHRpbmdzKGtleSkge1xuICAgICAgICByZXR1cm4gdXNlclNldHRpbmdzVVNNYXAuc3RyVG9LZXlDb2RlKGtleSkgfHwgdXNlclNldHRpbmdzR2VuZXJhbE1hcC5zdHJUb0tleUNvZGUoa2V5KTtcbiAgICB9XG4gICAgS2V5Q29kZVV0aWxzLmZyb21Vc2VyU2V0dGluZ3MgPSBmcm9tVXNlclNldHRpbmdzO1xufSkoS2V5Q29kZVV0aWxzIHx8IChLZXlDb2RlVXRpbHMgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIEtleUNob3JkKGZpcnN0UGFydCwgc2Vjb25kUGFydCkge1xuICAgIHZhciBjaG9yZFBhcnQgPSAoKHNlY29uZFBhcnQgJiAweDAwMDBGRkZGKSA8PCAxNikgPj4+IDA7XG4gICAgcmV0dXJuIChmaXJzdFBhcnQgfCBjaG9yZFBhcnQpID4+PiAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUtleWJpbmRpbmcoa2V5YmluZGluZywgT1MpIHtcbiAgICBpZiAoa2V5YmluZGluZyA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdmFyIGZpcnN0UGFydCA9IChrZXliaW5kaW5nICYgMHgwMDAwRkZGRikgPj4+IDA7XG4gICAgdmFyIGNob3JkUGFydCA9IChrZXliaW5kaW5nICYgMHhGRkZGMDAwMCkgPj4+IDE2O1xuICAgIGlmIChjaG9yZFBhcnQgIT09IDApIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDaG9yZEtleWJpbmRpbmcoW1xuICAgICAgICAgICAgY3JlYXRlU2ltcGxlS2V5YmluZGluZyhmaXJzdFBhcnQsIE9TKSxcbiAgICAgICAgICAgIGNyZWF0ZVNpbXBsZUtleWJpbmRpbmcoY2hvcmRQYXJ0LCBPUylcbiAgICAgICAgXSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgQ2hvcmRLZXliaW5kaW5nKFtjcmVhdGVTaW1wbGVLZXliaW5kaW5nKGZpcnN0UGFydCwgT1MpXSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2ltcGxlS2V5YmluZGluZyhrZXliaW5kaW5nLCBPUykge1xuICAgIHZhciBjdHJsQ21kID0gKGtleWJpbmRpbmcgJiAyMDQ4IC8qIEN0cmxDbWQgKi8gPyB0cnVlIDogZmFsc2UpO1xuICAgIHZhciB3aW5DdHJsID0gKGtleWJpbmRpbmcgJiAyNTYgLyogV2luQ3RybCAqLyA/IHRydWUgOiBmYWxzZSk7XG4gICAgdmFyIGN0cmxLZXkgPSAoT1MgPT09IDIgLyogTWFjaW50b3NoICovID8gd2luQ3RybCA6IGN0cmxDbWQpO1xuICAgIHZhciBzaGlmdEtleSA9IChrZXliaW5kaW5nICYgMTAyNCAvKiBTaGlmdCAqLyA/IHRydWUgOiBmYWxzZSk7XG4gICAgdmFyIGFsdEtleSA9IChrZXliaW5kaW5nICYgNTEyIC8qIEFsdCAqLyA/IHRydWUgOiBmYWxzZSk7XG4gICAgdmFyIG1ldGFLZXkgPSAoT1MgPT09IDIgLyogTWFjaW50b3NoICovID8gY3RybENtZCA6IHdpbkN0cmwpO1xuICAgIHZhciBrZXlDb2RlID0gKGtleWJpbmRpbmcgJiAyNTUgLyogS2V5Q29kZSAqLyk7XG4gICAgcmV0dXJuIG5ldyBTaW1wbGVLZXliaW5kaW5nKGN0cmxLZXksIHNoaWZ0S2V5LCBhbHRLZXksIG1ldGFLZXksIGtleUNvZGUpO1xufVxudmFyIFNpbXBsZUtleWJpbmRpbmcgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2ltcGxlS2V5YmluZGluZyhjdHJsS2V5LCBzaGlmdEtleSwgYWx0S2V5LCBtZXRhS2V5LCBrZXlDb2RlKSB7XG4gICAgICAgIHRoaXMuY3RybEtleSA9IGN0cmxLZXk7XG4gICAgICAgIHRoaXMuc2hpZnRLZXkgPSBzaGlmdEtleTtcbiAgICAgICAgdGhpcy5hbHRLZXkgPSBhbHRLZXk7XG4gICAgICAgIHRoaXMubWV0YUtleSA9IG1ldGFLZXk7XG4gICAgICAgIHRoaXMua2V5Q29kZSA9IGtleUNvZGU7XG4gICAgfVxuICAgIFNpbXBsZUtleWJpbmRpbmcucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgICAgICByZXR1cm4gKHRoaXMuY3RybEtleSA9PT0gb3RoZXIuY3RybEtleVxuICAgICAgICAgICAgJiYgdGhpcy5zaGlmdEtleSA9PT0gb3RoZXIuc2hpZnRLZXlcbiAgICAgICAgICAgICYmIHRoaXMuYWx0S2V5ID09PSBvdGhlci5hbHRLZXlcbiAgICAgICAgICAgICYmIHRoaXMubWV0YUtleSA9PT0gb3RoZXIubWV0YUtleVxuICAgICAgICAgICAgJiYgdGhpcy5rZXlDb2RlID09PSBvdGhlci5rZXlDb2RlKTtcbiAgICB9O1xuICAgIFNpbXBsZUtleWJpbmRpbmcucHJvdG90eXBlLmlzTW9kaWZpZXJLZXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5rZXlDb2RlID09PSAwIC8qIFVua25vd24gKi9cbiAgICAgICAgICAgIHx8IHRoaXMua2V5Q29kZSA9PT0gNSAvKiBDdHJsICovXG4gICAgICAgICAgICB8fCB0aGlzLmtleUNvZGUgPT09IDU3IC8qIE1ldGEgKi9cbiAgICAgICAgICAgIHx8IHRoaXMua2V5Q29kZSA9PT0gNiAvKiBBbHQgKi9cbiAgICAgICAgICAgIHx8IHRoaXMua2V5Q29kZSA9PT0gNCAvKiBTaGlmdCAqLyk7XG4gICAgfTtcbiAgICBTaW1wbGVLZXliaW5kaW5nLnByb3RvdHlwZS50b0Nob3JkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IENob3JkS2V5YmluZGluZyhbdGhpc10pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogRG9lcyB0aGlzIGtleWJpbmRpbmcgcmVmZXIgdG8gdGhlIGtleSBjb2RlIG9mIGEgbW9kaWZpZXIgYW5kIGl0IGFsc28gaGFzIHRoZSBtb2RpZmllciBmbGFnP1xuICAgICAqL1xuICAgIFNpbXBsZUtleWJpbmRpbmcucHJvdG90eXBlLmlzRHVwbGljYXRlTW9kaWZpZXJDYXNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gKCh0aGlzLmN0cmxLZXkgJiYgdGhpcy5rZXlDb2RlID09PSA1IC8qIEN0cmwgKi8pXG4gICAgICAgICAgICB8fCAodGhpcy5zaGlmdEtleSAmJiB0aGlzLmtleUNvZGUgPT09IDQgLyogU2hpZnQgKi8pXG4gICAgICAgICAgICB8fCAodGhpcy5hbHRLZXkgJiYgdGhpcy5rZXlDb2RlID09PSA2IC8qIEFsdCAqLylcbiAgICAgICAgICAgIHx8ICh0aGlzLm1ldGFLZXkgJiYgdGhpcy5rZXlDb2RlID09PSA1NyAvKiBNZXRhICovKSk7XG4gICAgfTtcbiAgICByZXR1cm4gU2ltcGxlS2V5YmluZGluZztcbn0oKSk7XG5leHBvcnQgeyBTaW1wbGVLZXliaW5kaW5nIH07XG52YXIgQ2hvcmRLZXliaW5kaW5nID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENob3JkS2V5YmluZGluZyhwYXJ0cykge1xuICAgICAgICBpZiAocGFydHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBpbGxlZ2FsQXJndW1lbnQoXCJwYXJ0c1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcnRzID0gcGFydHM7XG4gICAgfVxuICAgIENob3JkS2V5YmluZGluZy5wcm90b3R5cGUuZXF1YWxzID0gZnVuY3Rpb24gKG90aGVyKSB7XG4gICAgICAgIGlmIChvdGhlciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBhcnRzLmxlbmd0aCAhPT0gb3RoZXIucGFydHMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMucGFydHNbaV0uZXF1YWxzKG90aGVyLnBhcnRzW2ldKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICAgIHJldHVybiBDaG9yZEtleWJpbmRpbmc7XG59KCkpO1xuZXhwb3J0IHsgQ2hvcmRLZXliaW5kaW5nIH07XG52YXIgUmVzb2x2ZWRLZXliaW5kaW5nUGFydCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXNvbHZlZEtleWJpbmRpbmdQYXJ0KGN0cmxLZXksIHNoaWZ0S2V5LCBhbHRLZXksIG1ldGFLZXksIGtiTGFiZWwsIGtiQXJpYUxhYmVsKSB7XG4gICAgICAgIHRoaXMuY3RybEtleSA9IGN0cmxLZXk7XG4gICAgICAgIHRoaXMuc2hpZnRLZXkgPSBzaGlmdEtleTtcbiAgICAgICAgdGhpcy5hbHRLZXkgPSBhbHRLZXk7XG4gICAgICAgIHRoaXMubWV0YUtleSA9IG1ldGFLZXk7XG4gICAgICAgIHRoaXMua2V5TGFiZWwgPSBrYkxhYmVsO1xuICAgICAgICB0aGlzLmtleUFyaWFMYWJlbCA9IGtiQXJpYUxhYmVsO1xuICAgIH1cbiAgICByZXR1cm4gUmVzb2x2ZWRLZXliaW5kaW5nUGFydDtcbn0oKSk7XG5leHBvcnQgeyBSZXNvbHZlZEtleWJpbmRpbmdQYXJ0IH07XG4vKipcbiAqIEEgcmVzb2x2ZWQga2V5YmluZGluZy4gQ2FuIGJlIGEgc2ltcGxlIGtleWJpbmRpbmcgb3IgYSBjaG9yZCBrZXliaW5kaW5nLlxuICovXG52YXIgUmVzb2x2ZWRLZXliaW5kaW5nID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc29sdmVkS2V5YmluZGluZygpIHtcbiAgICB9XG4gICAgcmV0dXJuIFJlc29sdmVkS2V5YmluZGluZztcbn0oKSk7XG5leHBvcnQgeyBSZXNvbHZlZEtleWJpbmRpbmcgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js":
/*!********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js ***!
  \********************************************************************/
/*! exports provided: isDisposable, dispose, combinedDisposable, toDisposable, Disposable, ImmortalReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDisposable\", function() { return isDisposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dispose\", function() { return dispose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"combinedDisposable\", function() { return combinedDisposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toDisposable\", function() { return toDisposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Disposable\", function() { return Disposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImmortalReference\", function() { return ImmortalReference; });\nfunction isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nfunction dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nfunction combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nfunction toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\n\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vbGlmZWN5Y2xlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2UvY29tbW9uL2xpZmVjeWNsZS5qcz9hNjY2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0Rpc3Bvc2FibGUodGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nLmRpc3Bvc2UgPT09ICdmdW5jdGlvbidcbiAgICAgICAgJiYgdGhpbmcuZGlzcG9zZS5sZW5ndGggPT09IDA7XG59XG5leHBvcnQgZnVuY3Rpb24gZGlzcG9zZShmaXJzdCkge1xuICAgIHZhciByZXN0ID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgcmVzdFtfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZmlyc3QpKSB7XG4gICAgICAgIGZpcnN0LmZvckVhY2goZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQgJiYgZC5kaXNwb3NlKCk7IH0pO1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGVsc2UgaWYgKHJlc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGlmIChmaXJzdCkge1xuICAgICAgICAgICAgZmlyc3QuZGlzcG9zZSgpO1xuICAgICAgICAgICAgcmV0dXJuIGZpcnN0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkaXNwb3NlKGZpcnN0KTtcbiAgICAgICAgZGlzcG9zZShyZXN0KTtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21iaW5lZERpc3Bvc2FibGUoZGlzcG9zYWJsZXMpIHtcbiAgICByZXR1cm4geyBkaXNwb3NlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwb3NlKGRpc3Bvc2FibGVzKTsgfSB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvRGlzcG9zYWJsZShmbikge1xuICAgIHJldHVybiB7IGRpc3Bvc2U6IGZ1bmN0aW9uICgpIHsgZm4oKTsgfSB9O1xufVxudmFyIERpc3Bvc2FibGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGlzcG9zYWJsZSgpIHtcbiAgICAgICAgdGhpcy5fdG9EaXNwb3NlID0gW107XG4gICAgICAgIHRoaXMuX2xpZmVjeWNsZV9kaXNwb3NhYmxlX2lzRGlzcG9zZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgRGlzcG9zYWJsZS5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fbGlmZWN5Y2xlX2Rpc3Bvc2FibGVfaXNEaXNwb3NlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX3RvRGlzcG9zZSA9IGRpc3Bvc2UodGhpcy5fdG9EaXNwb3NlKTtcbiAgICB9O1xuICAgIERpc3Bvc2FibGUucHJvdG90eXBlLl9yZWdpc3RlciA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIGlmICh0aGlzLl9saWZlY3ljbGVfZGlzcG9zYWJsZV9pc0Rpc3Bvc2VkKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1JlZ2lzdGVyaW5nIGRpc3Bvc2FibGUgb24gb2JqZWN0IHRoYXQgaGFzIGFscmVhZHkgYmVlbiBkaXNwb3NlZC4nKTtcbiAgICAgICAgICAgIHQuZGlzcG9zZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fdG9EaXNwb3NlLnB1c2godCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICBEaXNwb3NhYmxlLk5vbmUgPSBPYmplY3QuZnJlZXplKHsgZGlzcG9zZTogZnVuY3Rpb24gKCkgeyB9IH0pO1xuICAgIHJldHVybiBEaXNwb3NhYmxlO1xufSgpKTtcbmV4cG9ydCB7IERpc3Bvc2FibGUgfTtcbnZhciBJbW1vcnRhbFJlZmVyZW5jZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBJbW1vcnRhbFJlZmVyZW5jZShvYmplY3QpIHtcbiAgICAgICAgdGhpcy5vYmplY3QgPSBvYmplY3Q7XG4gICAgfVxuICAgIEltbW9ydGFsUmVmZXJlbmNlLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIHJldHVybiBJbW1vcnRhbFJlZmVyZW5jZTtcbn0oKSk7XG5leHBvcnQgeyBJbW1vcnRhbFJlZmVyZW5jZSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/linkedList.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/linkedList.js ***!
  \*********************************************************************/
/*! exports provided: LinkedList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinkedList\", function() { return LinkedList; });\n/* harmony import */ var _iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterator.js */ \"./node_modules/monaco-editor/esm/vs/base/common/iterator.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n    Node.Undefined = new Node(undefined);\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return this._first === Node.Undefined;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        var didRemove = false;\n        return function () {\n            if (!didRemove) {\n                didRemove = true;\n                _this._remove(newNode);\n            }\n        };\n    };\n    LinkedList.prototype.shift = function () {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            var anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (node === Node.Undefined) {\n                    return _iterator_js__WEBPACK_IMPORTED_MODULE_0__[\"FIN\"];\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node !== Node.Undefined; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vbGlua2VkTGlzdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNlL2NvbW1vbi9saW5rZWRMaXN0LmpzP2RiODgiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBGSU4gfSBmcm9tICcuL2l0ZXJhdG9yLmpzJztcbnZhciBOb2RlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE5vZGUoZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLm5leHQgPSBOb2RlLlVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5wcmV2ID0gTm9kZS5VbmRlZmluZWQ7XG4gICAgfVxuICAgIE5vZGUuVW5kZWZpbmVkID0gbmV3IE5vZGUodW5kZWZpbmVkKTtcbiAgICByZXR1cm4gTm9kZTtcbn0oKSk7XG52YXIgTGlua2VkTGlzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBMaW5rZWRMaXN0KCkge1xuICAgICAgICB0aGlzLl9maXJzdCA9IE5vZGUuVW5kZWZpbmVkO1xuICAgICAgICB0aGlzLl9sYXN0ID0gTm9kZS5VbmRlZmluZWQ7XG4gICAgICAgIHRoaXMuX3NpemUgPSAwO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTGlua2VkTGlzdC5wcm90b3R5cGUsIFwic2l6ZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmlzRW1wdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9maXJzdCA9PT0gTm9kZS5VbmRlZmluZWQ7XG4gICAgfTtcbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fZmlyc3QgPSBOb2RlLlVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5fbGFzdCA9IE5vZGUuVW5kZWZpbmVkO1xuICAgICAgICB0aGlzLl9zaXplID0gMDtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLnVuc2hpZnQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faW5zZXJ0KGVsZW1lbnQsIGZhbHNlKTtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faW5zZXJ0KGVsZW1lbnQsIHRydWUpO1xuICAgIH07XG4gICAgTGlua2VkTGlzdC5wcm90b3R5cGUuX2luc2VydCA9IGZ1bmN0aW9uIChlbGVtZW50LCBhdFRoZUVuZCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgbmV3Tm9kZSA9IG5ldyBOb2RlKGVsZW1lbnQpO1xuICAgICAgICBpZiAodGhpcy5fZmlyc3QgPT09IE5vZGUuVW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLl9maXJzdCA9IG5ld05vZGU7XG4gICAgICAgICAgICB0aGlzLl9sYXN0ID0gbmV3Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChhdFRoZUVuZCkge1xuICAgICAgICAgICAgLy8gcHVzaFxuICAgICAgICAgICAgdmFyIG9sZExhc3QgPSB0aGlzLl9sYXN0O1xuICAgICAgICAgICAgdGhpcy5fbGFzdCA9IG5ld05vZGU7XG4gICAgICAgICAgICBuZXdOb2RlLnByZXYgPSBvbGRMYXN0O1xuICAgICAgICAgICAgb2xkTGFzdC5uZXh0ID0gbmV3Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIHVuc2hpZnRcbiAgICAgICAgICAgIHZhciBvbGRGaXJzdCA9IHRoaXMuX2ZpcnN0O1xuICAgICAgICAgICAgdGhpcy5fZmlyc3QgPSBuZXdOb2RlO1xuICAgICAgICAgICAgbmV3Tm9kZS5uZXh0ID0gb2xkRmlyc3Q7XG4gICAgICAgICAgICBvbGRGaXJzdC5wcmV2ID0gbmV3Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zaXplICs9IDE7XG4gICAgICAgIHZhciBkaWRSZW1vdmUgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghZGlkUmVtb3ZlKSB7XG4gICAgICAgICAgICAgICAgZGlkUmVtb3ZlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBfdGhpcy5fcmVtb3ZlKG5ld05vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG4gICAgTGlua2VkTGlzdC5wcm90b3R5cGUuc2hpZnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl9maXJzdCA9PT0gTm9kZS5VbmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgcmVzID0gdGhpcy5fZmlyc3QuZWxlbWVudDtcbiAgICAgICAgICAgIHRoaXMuX3JlbW92ZSh0aGlzLl9maXJzdCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5fcmVtb3ZlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUucHJldiAhPT0gTm9kZS5VbmRlZmluZWQgJiYgbm9kZS5uZXh0ICE9PSBOb2RlLlVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gbWlkZGxlXG4gICAgICAgICAgICB2YXIgYW5jaG9yID0gbm9kZS5wcmV2O1xuICAgICAgICAgICAgYW5jaG9yLm5leHQgPSBub2RlLm5leHQ7XG4gICAgICAgICAgICBub2RlLm5leHQucHJldiA9IGFuY2hvcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChub2RlLnByZXYgPT09IE5vZGUuVW5kZWZpbmVkICYmIG5vZGUubmV4dCA9PT0gTm9kZS5VbmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIG9ubHkgbm9kZVxuICAgICAgICAgICAgdGhpcy5fZmlyc3QgPSBOb2RlLlVuZGVmaW5lZDtcbiAgICAgICAgICAgIHRoaXMuX2xhc3QgPSBOb2RlLlVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChub2RlLm5leHQgPT09IE5vZGUuVW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBsYXN0XG4gICAgICAgICAgICB0aGlzLl9sYXN0ID0gdGhpcy5fbGFzdC5wcmV2O1xuICAgICAgICAgICAgdGhpcy5fbGFzdC5uZXh0ID0gTm9kZS5VbmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobm9kZS5wcmV2ID09PSBOb2RlLlVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gZmlyc3RcbiAgICAgICAgICAgIHRoaXMuX2ZpcnN0ID0gdGhpcy5fZmlyc3QubmV4dDtcbiAgICAgICAgICAgIHRoaXMuX2ZpcnN0LnByZXYgPSBOb2RlLlVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICAvLyBkb25lXG4gICAgICAgIHRoaXMuX3NpemUgLT0gMTtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLml0ZXJhdG9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZWxlbWVudDtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLl9maXJzdDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAobm9kZSA9PT0gTm9kZS5VbmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZJTjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSB7IGRvbmU6IGZhbHNlLCB2YWx1ZTogbm9kZS5lbGVtZW50IH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnZhbHVlID0gbm9kZS5lbGVtZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0O1xuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG4gICAgTGlua2VkTGlzdC5wcm90b3R5cGUudG9BcnJheSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICBmb3IgKHZhciBub2RlID0gdGhpcy5fZmlyc3Q7IG5vZGUgIT09IE5vZGUuVW5kZWZpbmVkOyBub2RlID0gbm9kZS5uZXh0KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChub2RlLmVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICByZXR1cm4gTGlua2VkTGlzdDtcbn0oKSk7XG5leHBvcnQgeyBMaW5rZWRMaXN0IH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/platform.js":
/*!*******************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/platform.js ***!
  \*******************************************************************/
/*! exports provided: isWindows, isMacintosh, isLinux, isNative, isWeb, globals, setImmediate, OS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process, global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWindows\", function() { return isWindows; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMacintosh\", function() { return isMacintosh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLinux\", function() { return isLinux; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNative\", function() { return isNative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWeb\", function() { return isWeb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"globals\", function() { return globals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setImmediate\", function() { return setImmediate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OS\", function() { return OS; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nvar isWindows = _isWindows;\nvar isMacintosh = _isMacintosh;\nvar isLinux = _isLinux;\nvar isNative = _isNative;\nvar isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nvar globals = _globals;\nvar _setImmediate = null;\nfunction setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nvar OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vcGxhdGZvcm0uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vcGxhdGZvcm0uanM/MzBkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnZhciBMQU5HVUFHRV9ERUZBVUxUID0gJ2VuJztcbnZhciBfaXNXaW5kb3dzID0gZmFsc2U7XG52YXIgX2lzTWFjaW50b3NoID0gZmFsc2U7XG52YXIgX2lzTGludXggPSBmYWxzZTtcbnZhciBfaXNOYXRpdmUgPSBmYWxzZTtcbnZhciBfaXNXZWIgPSBmYWxzZTtcbnZhciBfbG9jYWxlID0gdW5kZWZpbmVkO1xudmFyIF9sYW5ndWFnZSA9IExBTkdVQUdFX0RFRkFVTFQ7XG52YXIgX3RyYW5zbGF0aW9uc0NvbmZpZ0ZpbGUgPSB1bmRlZmluZWQ7XG52YXIgaXNFbGVjdHJvblJlbmRlcmVyID0gKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24gIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJyk7XG4vLyBPUyBkZXRlY3Rpb25cbmlmICh0eXBlb2YgbmF2aWdhdG9yID09PSAnb2JqZWN0JyAmJiAhaXNFbGVjdHJvblJlbmRlcmVyKSB7XG4gICAgdmFyIHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gICAgX2lzV2luZG93cyA9IHVzZXJBZ2VudC5pbmRleE9mKCdXaW5kb3dzJykgPj0gMDtcbiAgICBfaXNNYWNpbnRvc2ggPSB1c2VyQWdlbnQuaW5kZXhPZignTWFjaW50b3NoJykgPj0gMDtcbiAgICBfaXNMaW51eCA9IHVzZXJBZ2VudC5pbmRleE9mKCdMaW51eCcpID49IDA7XG4gICAgX2lzV2ViID0gdHJ1ZTtcbiAgICBfbG9jYWxlID0gbmF2aWdhdG9yLmxhbmd1YWdlO1xuICAgIF9sYW5ndWFnZSA9IF9sb2NhbGU7XG59XG5lbHNlIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcpIHtcbiAgICBfaXNXaW5kb3dzID0gKHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMicpO1xuICAgIF9pc01hY2ludG9zaCA9IChwcm9jZXNzLnBsYXRmb3JtID09PSAnZGFyd2luJyk7XG4gICAgX2lzTGludXggPSAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ2xpbnV4Jyk7XG4gICAgX2xvY2FsZSA9IExBTkdVQUdFX0RFRkFVTFQ7XG4gICAgX2xhbmd1YWdlID0gTEFOR1VBR0VfREVGQVVMVDtcbiAgICB2YXIgcmF3TmxzQ29uZmlnID0gcHJvY2Vzcy5lbnZbJ1ZTQ09ERV9OTFNfQ09ORklHJ107XG4gICAgaWYgKHJhd05sc0NvbmZpZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIG5sc0NvbmZpZyA9IEpTT04ucGFyc2UocmF3TmxzQ29uZmlnKTtcbiAgICAgICAgICAgIHZhciByZXNvbHZlZCA9IG5sc0NvbmZpZy5hdmFpbGFibGVMYW5ndWFnZXNbJyonXTtcbiAgICAgICAgICAgIF9sb2NhbGUgPSBubHNDb25maWcubG9jYWxlO1xuICAgICAgICAgICAgLy8gVlNDb2RlJ3MgZGVmYXVsdCBsYW5ndWFnZSBpcyAnZW4nXG4gICAgICAgICAgICBfbGFuZ3VhZ2UgPSByZXNvbHZlZCA/IHJlc29sdmVkIDogTEFOR1VBR0VfREVGQVVMVDtcbiAgICAgICAgICAgIF90cmFuc2xhdGlvbnNDb25maWdGaWxlID0gbmxzQ29uZmlnLl90cmFuc2xhdGlvbnNDb25maWdGaWxlO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX2lzTmF0aXZlID0gdHJ1ZTtcbn1cbnZhciBfcGxhdGZvcm0gPSAwIC8qIFdlYiAqLztcbmlmIChfaXNOYXRpdmUpIHtcbiAgICBpZiAoX2lzTWFjaW50b3NoKSB7XG4gICAgICAgIF9wbGF0Zm9ybSA9IDEgLyogTWFjICovO1xuICAgIH1cbiAgICBlbHNlIGlmIChfaXNXaW5kb3dzKSB7XG4gICAgICAgIF9wbGF0Zm9ybSA9IDMgLyogV2luZG93cyAqLztcbiAgICB9XG4gICAgZWxzZSBpZiAoX2lzTGludXgpIHtcbiAgICAgICAgX3BsYXRmb3JtID0gMiAvKiBMaW51eCAqLztcbiAgICB9XG59XG5leHBvcnQgdmFyIGlzV2luZG93cyA9IF9pc1dpbmRvd3M7XG5leHBvcnQgdmFyIGlzTWFjaW50b3NoID0gX2lzTWFjaW50b3NoO1xuZXhwb3J0IHZhciBpc0xpbnV4ID0gX2lzTGludXg7XG5leHBvcnQgdmFyIGlzTmF0aXZlID0gX2lzTmF0aXZlO1xuZXhwb3J0IHZhciBpc1dlYiA9IF9pc1dlYjtcbnZhciBfZ2xvYmFscyA9ICh0eXBlb2Ygc2VsZiA9PT0gJ29iamVjdCcgPyBzZWxmIDogdHlwZW9mIGdsb2JhbCA9PT0gJ29iamVjdCcgPyBnbG9iYWwgOiB7fSk7XG5leHBvcnQgdmFyIGdsb2JhbHMgPSBfZ2xvYmFscztcbnZhciBfc2V0SW1tZWRpYXRlID0gbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbiAgICBpZiAoX3NldEltbWVkaWF0ZSA9PT0gbnVsbCkge1xuICAgICAgICBpZiAoZ2xvYmFscy5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgICAgIF9zZXRJbW1lZGlhdGUgPSBnbG9iYWxzLnNldEltbWVkaWF0ZS5iaW5kKGdsb2JhbHMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2Vzcy5uZXh0VGljayA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgX3NldEltbWVkaWF0ZSA9IHByb2Nlc3MubmV4dFRpY2suYmluZChwcm9jZXNzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIF9zZXRJbW1lZGlhdGUgPSBnbG9iYWxzLnNldFRpbWVvdXQuYmluZChnbG9iYWxzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gX3NldEltbWVkaWF0ZShjYWxsYmFjayk7XG59XG5leHBvcnQgdmFyIE9TID0gKF9pc01hY2ludG9zaCA/IDIgLyogTWFjaW50b3NoICovIDogKF9pc1dpbmRvd3MgPyAxIC8qIFdpbmRvd3MgKi8gOiAzIC8qIExpbnV4ICovKSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/platform.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/strings.js":
/*!******************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/strings.js ***!
  \******************************************************************/
/*! exports provided: empty, isFalsyOrWhitespace, pad, format, escape, escapeRegExpCharacters, trim, ltrim, rtrim, convertSimple2RegExpPattern, startsWith, endsWith, createRegExp, regExpLeadsToEndlessLoop, regExpFlags, firstNonWhitespaceIndex, getLeadingWhitespace, lastNonWhitespaceIndex, compare, isLowerAsciiLetter, isUpperAsciiLetter, equalsIgnoreCase, startsWithIgnoreCase, commonPrefixLength, commonSuffixLength, isHighSurrogate, isLowSurrogate, containsRTL, containsEmoji, isBasicASCII, containsFullWidthCharacter, isFullWidthCharacter, UTF8_BOM_CHARACTER, startsWithUTF8BOM, safeBtoa, repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return empty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFalsyOrWhitespace\", function() { return isFalsyOrWhitespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pad\", function() { return pad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"format\", function() { return format; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escape\", function() { return escape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escapeRegExpCharacters\", function() { return escapeRegExpCharacters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trim\", function() { return trim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ltrim\", function() { return ltrim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rtrim\", function() { return rtrim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertSimple2RegExpPattern\", function() { return convertSimple2RegExpPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRegExp\", function() { return createRegExp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regExpLeadsToEndlessLoop\", function() { return regExpLeadsToEndlessLoop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regExpFlags\", function() { return regExpFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstNonWhitespaceIndex\", function() { return firstNonWhitespaceIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLeadingWhitespace\", function() { return getLeadingWhitespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastNonWhitespaceIndex\", function() { return lastNonWhitespaceIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return compare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLowerAsciiLetter\", function() { return isLowerAsciiLetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUpperAsciiLetter\", function() { return isUpperAsciiLetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equalsIgnoreCase\", function() { return equalsIgnoreCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWithIgnoreCase\", function() { return startsWithIgnoreCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commonPrefixLength\", function() { return commonPrefixLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commonSuffixLength\", function() { return commonSuffixLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHighSurrogate\", function() { return isHighSurrogate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLowSurrogate\", function() { return isLowSurrogate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsRTL\", function() { return containsRTL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsEmoji\", function() { return containsEmoji; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBasicASCII\", function() { return isBasicASCII; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsFullWidthCharacter\", function() { return containsFullWidthCharacter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFullWidthCharacter\", function() { return isFullWidthCharacter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UTF8_BOM_CHARACTER\", function() { return UTF8_BOM_CHARACTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWithUTF8BOM\", function() { return startsWithUTF8BOM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"safeBtoa\", function() { return safeBtoa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeat\", function() { return repeat; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nvar empty = '';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nfunction pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nfunction format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nfunction trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nfunction createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nfunction firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nfunction getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nfunction lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nfunction equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nfunction commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nfunction commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nfunction containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nfunction containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nfunction containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nvar UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nfunction startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nfunction safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/strings.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/types.js ***!
  \****************************************************************/
/*! exports provided: isArray, isString, isObject, isNumber, isBoolean, isUndefined, isUndefinedOrNull, isEmptyObject, isFunction, validateConstraints, validateConstraint, getAllPropertyNames, withNullAsUndefined, withUndefinedAsNull */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return isBoolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefinedOrNull\", function() { return isUndefinedOrNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmptyObject\", function() { return isEmptyObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateConstraints\", function() { return validateConstraints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateConstraint\", function() { return validateConstraint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAllPropertyNames\", function() { return getAllPropertyNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withNullAsUndefined\", function() { return withNullAsUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withUndefinedAsNull\", function() { return withUndefinedAsNull; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nfunction isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nfunction isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nfunction isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nfunction isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nfunction isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nfunction isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nfunction isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nfunction isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nfunction validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\nfunction getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nfunction withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\n/**\n * Converts undefined to null, passes all other values through.\n */\nfunction withUndefinedAsNull(x) {\n    return typeof x === 'undefined' ? null : x;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vdHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vdHlwZXMuanM/ZWY4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnZhciBfdHlwZW9mID0ge1xuICAgIG51bWJlcjogJ251bWJlcicsXG4gICAgc3RyaW5nOiAnc3RyaW5nJyxcbiAgICB1bmRlZmluZWQ6ICd1bmRlZmluZWQnLFxuICAgIG9iamVjdDogJ29iamVjdCcsXG4gICAgZnVuY3Rpb246ICdmdW5jdGlvbidcbn07XG4vKipcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyBhIEphdmFTY3JpcHQgQXJyYXkgb3Igbm90LlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheShhcnJheSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KSB7XG4gICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KGFycmF5KTtcbiAgICB9XG4gICAgaWYgKGFycmF5ICYmIHR5cGVvZiAoYXJyYXkubGVuZ3RoKSA9PT0gX3R5cGVvZi5udW1iZXIgJiYgYXJyYXkuY29uc3RydWN0b3IgPT09IEFycmF5KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyBhIEphdmFTY3JpcHQgU3RyaW5nIG9yIG5vdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHN0cikge1xuICAgIGlmICh0eXBlb2YgKHN0cikgPT09IF90eXBlb2Yuc3RyaW5nIHx8IHN0ciBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKlxuICogQHJldHVybnMgd2hldGhlciB0aGUgcHJvdmlkZWQgcGFyYW1ldGVyIGlzIG9mIHR5cGUgYG9iamVjdGAgYnV0ICoqbm90KipcbiAqXHRgbnVsbGAsIGFuIGBhcnJheWAsIGEgYHJlZ2V4cGAsIG5vciBhIGBkYXRlYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KG9iaikge1xuICAgIC8vIFRoZSBtZXRob2QgY2FuJ3QgZG8gYSB0eXBlIGNhc3Qgc2luY2UgdGhlcmUgYXJlIHR5cGUgKGxpa2Ugc3RyaW5ncykgd2hpY2hcbiAgICAvLyBhcmUgc3ViY2xhc3NlcyBvZiBhbnkgcHV0IG5vdCBwb3NpdHZlbHkgbWF0Y2hlZCBieSB0aGUgZnVuY3Rpb24uIEhlbmNlIHR5cGVcbiAgICAvLyBuYXJyb3dpbmcgcmVzdWx0cyBpbiB3cm9uZyByZXN1bHRzLlxuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBfdHlwZW9mLm9iamVjdFxuICAgICAgICAmJiBvYmogIT09IG51bGxcbiAgICAgICAgJiYgIUFycmF5LmlzQXJyYXkob2JqKVxuICAgICAgICAmJiAhKG9iaiBpbnN0YW5jZW9mIFJlZ0V4cClcbiAgICAgICAgJiYgIShvYmogaW5zdGFuY2VvZiBEYXRlKTtcbn1cbi8qKlxuICogSW4gKipjb250cmFzdCoqIHRvIGp1c3QgY2hlY2tpbmcgYHR5cGVvZmAgdGhpcyB3aWxsIHJldHVybiBgZmFsc2VgIGZvciBgTmFOYC5cbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyBhIEphdmFTY3JpcHQgTnVtYmVyIG9yIG5vdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyKG9iaikge1xuICAgIGlmICgodHlwZW9mIChvYmopID09PSBfdHlwZW9mLm51bWJlciB8fCBvYmogaW5zdGFuY2VvZiBOdW1iZXIpICYmICFpc05hTihvYmopKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyBhIEphdmFTY3JpcHQgQm9vbGVhbiBvciBub3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Jvb2xlYW4ob2JqKSB7XG4gICAgcmV0dXJuIG9iaiA9PT0gdHJ1ZSB8fCBvYmogPT09IGZhbHNlO1xufVxuLyoqXG4gKiBAcmV0dXJucyB3aGV0aGVyIHRoZSBwcm92aWRlZCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNVbmRlZmluZWQob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiAob2JqKSA9PT0gX3R5cGVvZi51bmRlZmluZWQ7XG59XG4vKipcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyB1bmRlZmluZWQgb3IgbnVsbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVW5kZWZpbmVkT3JOdWxsKG9iaikge1xuICAgIHJldHVybiBpc1VuZGVmaW5lZChvYmopIHx8IG9iaiA9PT0gbnVsbDtcbn1cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG4vKipcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyBhbiBlbXB0eSBKYXZhU2NyaXB0IE9iamVjdCBvciBub3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0VtcHR5T2JqZWN0KG9iaikge1xuICAgIGlmICghaXNPYmplY3Qob2JqKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vKipcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHByb3ZpZGVkIHBhcmFtZXRlciBpcyBhIEphdmFTY3JpcHQgRnVuY3Rpb24gb3Igbm90LlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNGdW5jdGlvbihvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gX3R5cGVvZi5mdW5jdGlvbjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUNvbnN0cmFpbnRzKGFyZ3MsIGNvbnN0cmFpbnRzKSB7XG4gICAgdmFyIGxlbiA9IE1hdGgubWluKGFyZ3MubGVuZ3RoLCBjb25zdHJhaW50cy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgdmFsaWRhdGVDb25zdHJhaW50KGFyZ3NbaV0sIGNvbnN0cmFpbnRzW2ldKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVDb25zdHJhaW50KGFyZywgY29uc3RyYWludCkge1xuICAgIGlmIChpc1N0cmluZyhjb25zdHJhaW50KSkge1xuICAgICAgICBpZiAodHlwZW9mIGFyZyAhPT0gY29uc3RyYWludCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYXJndW1lbnQgZG9lcyBub3QgbWF0Y2ggY29uc3RyYWludDogdHlwZW9mIFwiICsgY29uc3RyYWludCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaXNGdW5jdGlvbihjb25zdHJhaW50KSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKGFyZyBpbnN0YW5jZW9mIGNvbnN0cmFpbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICAvLyBpZ25vcmVcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzVW5kZWZpbmVkT3JOdWxsKGFyZykgJiYgYXJnLmNvbnN0cnVjdG9yID09PSBjb25zdHJhaW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbnN0cmFpbnQubGVuZ3RoID09PSAxICYmIGNvbnN0cmFpbnQuY2FsbCh1bmRlZmluZWQsIGFyZykgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhcmd1bWVudCBkb2VzIG5vdCBtYXRjaCBvbmUgb2YgdGhlc2UgY29uc3RyYWludHM6IGFyZyBpbnN0YW5jZW9mIGNvbnN0cmFpbnQsIGFyZy5jb25zdHJ1Y3RvciA9PT0gY29uc3RyYWludCwgbm9yIGNvbnN0cmFpbnQoYXJnKSA9PT0gdHJ1ZVwiKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsUHJvcGVydHlOYW1lcyhvYmopIHtcbiAgICB2YXIgcmVzID0gW107XG4gICAgdmFyIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7XG4gICAgd2hpbGUgKE9iamVjdC5wcm90b3R5cGUgIT09IHByb3RvKSB7XG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvdG8pKTtcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBudWxsIHRvIHVuZGVmaW5lZCwgcGFzc2VzIGFsbCBvdGhlciB2YWx1ZXMgdGhyb3VnaC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhOdWxsQXNVbmRlZmluZWQoeCkge1xuICAgIHJldHVybiB4ID09PSBudWxsID8gdW5kZWZpbmVkIDogeDtcbn1cbi8qKlxuICogQ29udmVydHMgdW5kZWZpbmVkIHRvIG51bGwsIHBhc3NlcyBhbGwgb3RoZXIgdmFsdWVzIHRocm91Z2guXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoVW5kZWZpbmVkQXNOdWxsKHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHggPT09ICd1bmRlZmluZWQnID8gbnVsbCA6IHg7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/types.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/uri.js":
/*!**************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/uri.js ***!
  \**************************************************************/
/*! exports provided: URI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URI\", function() { return URI; });\n/* harmony import */ var _platform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform.js */ \"./node_modules/monaco-editor/esm/vs/base/common/platform.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\n\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (_strict || _throwOnMissingSchema) {\n        return scheme || _empty;\n    }\n    if (!scheme) {\n        console.trace('BAD uri lacks scheme, falling back to file-scheme.');\n        scheme = 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (_platform_js__WEBPACK_IMPORTED_MODULE_0__[\"isWindows\"]) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\n\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (_platform_js__WEBPACK_IMPORTED_MODULE_0__[\"isWindows\"]) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/uri.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js":
/*!******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js ***!
  \******************************************************************************/
/*! exports provided: logOnceWebWorkerWarning, SimpleWorkerClient, SimpleWorkerServer, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logOnceWebWorkerWarning\", function() { return logOnceWebWorkerWarning; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleWorkerClient\", function() { return SimpleWorkerClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleWorkerServer\", function() { return SimpleWorkerServer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/monaco-editor/esm/vs/base/common/errors.js\");\n/* harmony import */ var _lifecycle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lifecycle.js */ \"./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js\");\n/* harmony import */ var _platform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../platform.js */ \"./node_modules/monaco-editor/esm/vs/base/common/platform.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"./node_modules/monaco-editor/esm/vs/base/common/types.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!_platform_js__WEBPACK_IMPORTED_MODULE_2__[\"isWeb\"]) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = Object(_errors_js__WEBPACK_IMPORTED_MODULE_0__[\"transformErrorForSerialization\"])(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: Object(_errors_js__WEBPACK_IMPORTED_MODULE_0__[\"transformErrorForSerialization\"])(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(_lifecycle_js__WEBPACK_IMPORTED_MODULE_1__[\"Disposable\"]));\n\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = Object(_types_js__WEBPACK_IMPORTED_MODULE_3__[\"getAllPropertyNames\"])(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = Object(_types_js__WEBPACK_IMPORTED_MODULE_3__[\"getAllPropertyNames\"])(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\n\n/**\n * Called on the worker side\n */\nfunction create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js ***!
  \*************************************************************************************/
/*! exports provided: CharacterClassifier, CharacterSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterClassifier\", function() { return CharacterClassifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterSet\", function() { return CharacterSet; });\n/* harmony import */ var _uint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uint.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = Object(_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint8\"])(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = Object(_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint8\"])(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\n\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9jb3JlL2NoYXJhY3RlckNsYXNzaWZpZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9jb3JlL2NoYXJhY3RlckNsYXNzaWZpZXIuanM/MzE3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IHRvVWludDggfSBmcm9tICcuL3VpbnQuanMnO1xuLyoqXG4gKiBBIGZhc3QgY2hhcmFjdGVyIGNsYXNzaWZpZXIgdGhhdCB1c2VzIGEgY29tcGFjdCBhcnJheSBmb3IgQVNDSUkgdmFsdWVzLlxuICovXG52YXIgQ2hhcmFjdGVyQ2xhc3NpZmllciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDaGFyYWN0ZXJDbGFzc2lmaWVyKF9kZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgdmFyIGRlZmF1bHRWYWx1ZSA9IHRvVWludDgoX2RlZmF1bHRWYWx1ZSk7XG4gICAgICAgIHRoaXMuX2RlZmF1bHRWYWx1ZSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgdGhpcy5fYXNjaWlNYXAgPSBDaGFyYWN0ZXJDbGFzc2lmaWVyLl9jcmVhdGVBc2NpaU1hcChkZWZhdWx0VmFsdWUpO1xuICAgICAgICB0aGlzLl9tYXAgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIENoYXJhY3RlckNsYXNzaWZpZXIuX2NyZWF0ZUFzY2lpTWFwID0gZnVuY3Rpb24gKGRlZmF1bHRWYWx1ZSkge1xuICAgICAgICB2YXIgYXNjaWlNYXAgPSBuZXcgVWludDhBcnJheSgyNTYpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgaSsrKSB7XG4gICAgICAgICAgICBhc2NpaU1hcFtpXSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXNjaWlNYXA7XG4gICAgfTtcbiAgICBDaGFyYWN0ZXJDbGFzc2lmaWVyLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoY2hhckNvZGUsIF92YWx1ZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSB0b1VpbnQ4KF92YWx1ZSk7XG4gICAgICAgIGlmIChjaGFyQ29kZSA+PSAwICYmIGNoYXJDb2RlIDwgMjU2KSB7XG4gICAgICAgICAgICB0aGlzLl9hc2NpaU1hcFtjaGFyQ29kZV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX21hcC5zZXQoY2hhckNvZGUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2hhcmFjdGVyQ2xhc3NpZmllci5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGNoYXJDb2RlKSB7XG4gICAgICAgIGlmIChjaGFyQ29kZSA+PSAwICYmIGNoYXJDb2RlIDwgMjU2KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXNjaWlNYXBbY2hhckNvZGVdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuICh0aGlzLl9tYXAuZ2V0KGNoYXJDb2RlKSB8fCB0aGlzLl9kZWZhdWx0VmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQ2hhcmFjdGVyQ2xhc3NpZmllcjtcbn0oKSk7XG5leHBvcnQgeyBDaGFyYWN0ZXJDbGFzc2lmaWVyIH07XG52YXIgQ2hhcmFjdGVyU2V0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENoYXJhY3RlclNldCgpIHtcbiAgICAgICAgdGhpcy5fYWN0dWFsID0gbmV3IENoYXJhY3RlckNsYXNzaWZpZXIoMCAvKiBGYWxzZSAqLyk7XG4gICAgfVxuICAgIENoYXJhY3RlclNldC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGNoYXJDb2RlKSB7XG4gICAgICAgIHRoaXMuX2FjdHVhbC5zZXQoY2hhckNvZGUsIDEgLyogVHJ1ZSAqLyk7XG4gICAgfTtcbiAgICBDaGFyYWN0ZXJTZXQucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uIChjaGFyQ29kZSkge1xuICAgICAgICByZXR1cm4gKHRoaXMuX2FjdHVhbC5nZXQoY2hhckNvZGUpID09PSAxIC8qIFRydWUgKi8pO1xuICAgIH07XG4gICAgcmV0dXJuIENoYXJhY3RlclNldDtcbn0oKSk7XG5leHBvcnQgeyBDaGFyYWN0ZXJTZXQgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/core/position.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/core/position.js ***!
  \**************************************************************************/
/*! exports provided: Position */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9jb3JlL3Bvc2l0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2VkaXRvci9jb21tb24vY29yZS9wb3NpdGlvbi5qcz83MDYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBBIHBvc2l0aW9uIGluIHRoZSBlZGl0b3IuXG4gKi9cbnZhciBQb3NpdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQb3NpdGlvbihsaW5lTnVtYmVyLCBjb2x1bW4pIHtcbiAgICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZU51bWJlcjtcbiAgICAgICAgdGhpcy5jb2x1bW4gPSBjb2x1bW47XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBwb3N0aW9uIGZyb20gdGhpcyBwb3NpdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBuZXdMaW5lTnVtYmVyIG5ldyBsaW5lIG51bWJlclxuICAgICAqIEBwYXJhbSBuZXdDb2x1bW4gbmV3IGNvbHVtblxuICAgICAqL1xuICAgIFBvc2l0aW9uLnByb3RvdHlwZS53aXRoID0gZnVuY3Rpb24gKG5ld0xpbmVOdW1iZXIsIG5ld0NvbHVtbikge1xuICAgICAgICBpZiAobmV3TGluZU51bWJlciA9PT0gdm9pZCAwKSB7IG5ld0xpbmVOdW1iZXIgPSB0aGlzLmxpbmVOdW1iZXI7IH1cbiAgICAgICAgaWYgKG5ld0NvbHVtbiA9PT0gdm9pZCAwKSB7IG5ld0NvbHVtbiA9IHRoaXMuY29sdW1uOyB9XG4gICAgICAgIGlmIChuZXdMaW5lTnVtYmVyID09PSB0aGlzLmxpbmVOdW1iZXIgJiYgbmV3Q29sdW1uID09PSB0aGlzLmNvbHVtbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFBvc2l0aW9uKG5ld0xpbmVOdW1iZXIsIG5ld0NvbHVtbik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qKlxuICAgICAqIERlcml2ZSBhIG5ldyBwb3NpdGlvbiBmcm9tIHRoaXMgcG9zaXRpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZGVsdGFMaW5lTnVtYmVyIGxpbmUgbnVtYmVyIGRlbHRhXG4gICAgICogQHBhcmFtIGRlbHRhQ29sdW1uIGNvbHVtbiBkZWx0YVxuICAgICAqL1xuICAgIFBvc2l0aW9uLnByb3RvdHlwZS5kZWx0YSA9IGZ1bmN0aW9uIChkZWx0YUxpbmVOdW1iZXIsIGRlbHRhQ29sdW1uKSB7XG4gICAgICAgIGlmIChkZWx0YUxpbmVOdW1iZXIgPT09IHZvaWQgMCkgeyBkZWx0YUxpbmVOdW1iZXIgPSAwOyB9XG4gICAgICAgIGlmIChkZWx0YUNvbHVtbiA9PT0gdm9pZCAwKSB7IGRlbHRhQ29sdW1uID0gMDsgfVxuICAgICAgICByZXR1cm4gdGhpcy53aXRoKHRoaXMubGluZU51bWJlciArIGRlbHRhTGluZU51bWJlciwgdGhpcy5jb2x1bW4gKyBkZWx0YUNvbHVtbik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUZXN0IGlmIHRoaXMgcG9zaXRpb24gZXF1YWxzIG90aGVyIHBvc2l0aW9uXG4gICAgICovXG4gICAgUG9zaXRpb24ucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgICAgICByZXR1cm4gUG9zaXRpb24uZXF1YWxzKHRoaXMsIG90aGVyKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRlc3QgaWYgcG9zaXRpb24gYGFgIGVxdWFscyBwb3NpdGlvbiBgYmBcbiAgICAgKi9cbiAgICBQb3NpdGlvbi5lcXVhbHMgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoIWEgJiYgIWIpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoISFhICYmXG4gICAgICAgICAgICAhIWIgJiZcbiAgICAgICAgICAgIGEubGluZU51bWJlciA9PT0gYi5saW5lTnVtYmVyICYmXG4gICAgICAgICAgICBhLmNvbHVtbiA9PT0gYi5jb2x1bW4pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogVGVzdCBpZiB0aGlzIHBvc2l0aW9uIGlzIGJlZm9yZSBvdGhlciBwb3NpdGlvbi5cbiAgICAgKiBJZiB0aGUgdHdvIHBvc2l0aW9ucyBhcmUgZXF1YWwsIHRoZSByZXN1bHQgd2lsbCBiZSBmYWxzZS5cbiAgICAgKi9cbiAgICBQb3NpdGlvbi5wcm90b3R5cGUuaXNCZWZvcmUgPSBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICAgICAgcmV0dXJuIFBvc2l0aW9uLmlzQmVmb3JlKHRoaXMsIG90aGVyKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRlc3QgaWYgcG9zaXRpb24gYGFgIGlzIGJlZm9yZSBwb3NpdGlvbiBgYmAuXG4gICAgICogSWYgdGhlIHR3byBwb3NpdGlvbnMgYXJlIGVxdWFsLCB0aGUgcmVzdWx0IHdpbGwgYmUgZmFsc2UuXG4gICAgICovXG4gICAgUG9zaXRpb24uaXNCZWZvcmUgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoYS5saW5lTnVtYmVyIDwgYi5saW5lTnVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYi5saW5lTnVtYmVyIDwgYS5saW5lTnVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGEuY29sdW1uIDwgYi5jb2x1bW47XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUZXN0IGlmIHRoaXMgcG9zaXRpb24gaXMgYmVmb3JlIG90aGVyIHBvc2l0aW9uLlxuICAgICAqIElmIHRoZSB0d28gcG9zaXRpb25zIGFyZSBlcXVhbCwgdGhlIHJlc3VsdCB3aWxsIGJlIHRydWUuXG4gICAgICovXG4gICAgUG9zaXRpb24ucHJvdG90eXBlLmlzQmVmb3JlT3JFcXVhbCA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgICAgICByZXR1cm4gUG9zaXRpb24uaXNCZWZvcmVPckVxdWFsKHRoaXMsIG90aGVyKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRlc3QgaWYgcG9zaXRpb24gYGFgIGlzIGJlZm9yZSBwb3NpdGlvbiBgYmAuXG4gICAgICogSWYgdGhlIHR3byBwb3NpdGlvbnMgYXJlIGVxdWFsLCB0aGUgcmVzdWx0IHdpbGwgYmUgdHJ1ZS5cbiAgICAgKi9cbiAgICBQb3NpdGlvbi5pc0JlZm9yZU9yRXF1YWwgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoYS5saW5lTnVtYmVyIDwgYi5saW5lTnVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYi5saW5lTnVtYmVyIDwgYS5saW5lTnVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGEuY29sdW1uIDw9IGIuY29sdW1uO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQSBmdW5jdGlvbiB0aGF0IGNvbXBhcmVzIHBvc2l0aW9ucywgdXNlZnVsIGZvciBzb3J0aW5nXG4gICAgICovXG4gICAgUG9zaXRpb24uY29tcGFyZSA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIHZhciBhTGluZU51bWJlciA9IGEubGluZU51bWJlciB8IDA7XG4gICAgICAgIHZhciBiTGluZU51bWJlciA9IGIubGluZU51bWJlciB8IDA7XG4gICAgICAgIGlmIChhTGluZU51bWJlciA9PT0gYkxpbmVOdW1iZXIpIHtcbiAgICAgICAgICAgIHZhciBhQ29sdW1uID0gYS5jb2x1bW4gfCAwO1xuICAgICAgICAgICAgdmFyIGJDb2x1bW4gPSBiLmNvbHVtbiB8IDA7XG4gICAgICAgICAgICByZXR1cm4gYUNvbHVtbiAtIGJDb2x1bW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFMaW5lTnVtYmVyIC0gYkxpbmVOdW1iZXI7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDbG9uZSB0aGlzIHBvc2l0aW9uLlxuICAgICAqL1xuICAgIFBvc2l0aW9uLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQb3NpdGlvbih0aGlzLmxpbmVOdW1iZXIsIHRoaXMuY29sdW1uKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENvbnZlcnQgdG8gYSBodW1hbi1yZWFkYWJsZSByZXByZXNlbnRhdGlvbi5cbiAgICAgKi9cbiAgICBQb3NpdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAnKCcgKyB0aGlzLmxpbmVOdW1iZXIgKyAnLCcgKyB0aGlzLmNvbHVtbiArICcpJztcbiAgICB9O1xuICAgIC8vIC0tLVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGBQb3NpdGlvbmAgZnJvbSBhbiBgSVBvc2l0aW9uYC5cbiAgICAgKi9cbiAgICBQb3NpdGlvbi5saWZ0ID0gZnVuY3Rpb24gKHBvcykge1xuICAgICAgICByZXR1cm4gbmV3IFBvc2l0aW9uKHBvcy5saW5lTnVtYmVyLCBwb3MuY29sdW1uKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRlc3QgaWYgYG9iamAgaXMgYW4gYElQb3NpdGlvbmAuXG4gICAgICovXG4gICAgUG9zaXRpb24uaXNJUG9zaXRpb24gPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiAob2JqXG4gICAgICAgICAgICAmJiAodHlwZW9mIG9iai5saW5lTnVtYmVyID09PSAnbnVtYmVyJylcbiAgICAgICAgICAgICYmICh0eXBlb2Ygb2JqLmNvbHVtbiA9PT0gJ251bWJlcicpKTtcbiAgICB9O1xuICAgIHJldHVybiBQb3NpdGlvbjtcbn0oKSk7XG5leHBvcnQgeyBQb3NpdGlvbiB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/core/range.js":
/*!***********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/core/range.js ***!
  \***********************************************************************/
/*! exports provided: Range */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony import */ var _position_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./position.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new _position_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new _position_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js":
/*!***************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js ***!
  \***************************************************************************/
/*! exports provided: Selection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Selection\", function() { return Selection; });\n/* harmony import */ var _position_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./position.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./range.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/range.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new _position_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(_range_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/core/token.js":
/*!***********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/core/token.js ***!
  \***********************************************************************/
/*! exports provided: Token, TokenizationResult, TokenizationResult2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Token\", function() { return Token; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenizationResult\", function() { return TokenizationResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenizationResult2\", function() { return TokenizationResult2; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\n\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\n\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9jb3JlL3Rva2VuLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2VkaXRvci9jb21tb24vY29yZS90b2tlbi5qcz80ZGM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xudmFyIFRva2VuID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRva2VuKG9mZnNldCwgdHlwZSwgbGFuZ3VhZ2UpIHtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBvZmZzZXQgfCAwOyAvLyBAcGVyZlxuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLmxhbmd1YWdlID0gbGFuZ3VhZ2U7XG4gICAgfVxuICAgIFRva2VuLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICcoJyArIHRoaXMub2Zmc2V0ICsgJywgJyArIHRoaXMudHlwZSArICcpJztcbiAgICB9O1xuICAgIHJldHVybiBUb2tlbjtcbn0oKSk7XG5leHBvcnQgeyBUb2tlbiB9O1xudmFyIFRva2VuaXphdGlvblJlc3VsdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUb2tlbml6YXRpb25SZXN1bHQodG9rZW5zLCBlbmRTdGF0ZSkge1xuICAgICAgICB0aGlzLnRva2VucyA9IHRva2VucztcbiAgICAgICAgdGhpcy5lbmRTdGF0ZSA9IGVuZFN0YXRlO1xuICAgIH1cbiAgICByZXR1cm4gVG9rZW5pemF0aW9uUmVzdWx0O1xufSgpKTtcbmV4cG9ydCB7IFRva2VuaXphdGlvblJlc3VsdCB9O1xudmFyIFRva2VuaXphdGlvblJlc3VsdDIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVG9rZW5pemF0aW9uUmVzdWx0Mih0b2tlbnMsIGVuZFN0YXRlKSB7XG4gICAgICAgIHRoaXMudG9rZW5zID0gdG9rZW5zO1xuICAgICAgICB0aGlzLmVuZFN0YXRlID0gZW5kU3RhdGU7XG4gICAgfVxuICAgIHJldHVybiBUb2tlbml6YXRpb25SZXN1bHQyO1xufSgpKTtcbmV4cG9ydCB7IFRva2VuaXphdGlvblJlc3VsdDIgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js ***!
  \**********************************************************************/
/*! exports provided: Uint8Matrix, toUint8, toUint32, toUint32Array */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Uint8Matrix\", function() { return Uint8Matrix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toUint8\", function() { return toUint8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toUint32\", function() { return toUint32; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toUint32Array\", function() { return toUint32Array; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\n\nfunction toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nfunction toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9jb3JlL3VpbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9jb3JlL3VpbnQuanM/NTA3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnZhciBVaW50OE1hdHJpeCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBVaW50OE1hdHJpeChyb3dzLCBjb2xzLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBuZXcgVWludDhBcnJheShyb3dzICogY29scyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByb3dzICogY29sczsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBkYXRhW2ldID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLnJvd3MgPSByb3dzO1xuICAgICAgICB0aGlzLmNvbHMgPSBjb2xzO1xuICAgIH1cbiAgICBVaW50OE1hdHJpeC5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKHJvdywgY29sKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhW3JvdyAqIHRoaXMuY29scyArIGNvbF07XG4gICAgfTtcbiAgICBVaW50OE1hdHJpeC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKHJvdywgY29sLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLl9kYXRhW3JvdyAqIHRoaXMuY29scyArIGNvbF0gPSB2YWx1ZTtcbiAgICB9O1xuICAgIHJldHVybiBVaW50OE1hdHJpeDtcbn0oKSk7XG5leHBvcnQgeyBVaW50OE1hdHJpeCB9O1xuZXhwb3J0IGZ1bmN0aW9uIHRvVWludDgodikge1xuICAgIGlmICh2IDwgMCkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgaWYgKHYgPiAyNTUgLyogTUFYX1VJTlRfOCAqLykge1xuICAgICAgICByZXR1cm4gMjU1IC8qIE1BWF9VSU5UXzggKi87XG4gICAgfVxuICAgIHJldHVybiB2IHwgMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1VpbnQzMih2KSB7XG4gICAgaWYgKHYgPCAwKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBpZiAodiA+IDQyOTQ5NjcyOTUgLyogTUFYX1VJTlRfMzIgKi8pIHtcbiAgICAgICAgcmV0dXJuIDQyOTQ5NjcyOTUgLyogTUFYX1VJTlRfMzIgKi87XG4gICAgfVxuICAgIHJldHVybiB2IHwgMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1VpbnQzMkFycmF5KGFycikge1xuICAgIHZhciBsZW4gPSBhcnIubGVuZ3RoO1xuICAgIHZhciByID0gbmV3IFVpbnQzMkFycmF5KGxlbik7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICByW2ldID0gdG9VaW50MzIoYXJyW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIHI7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js ***!
  \******************************************************************************/
/*! exports provided: DiffComputer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffComputer\", function() { return DiffComputer; });\n/* harmony import */ var _base_common_diff_diff_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../base/common/diff/diff.js */ \"./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js\");\n/* harmony import */ var _base_common_strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../base/common/strings.js */ \"./node_modules/monaco-editor/esm/vs/base/common/strings.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new _base_common_diff_diff_js__WEBPACK_IMPORTED_MODULE_0__[\"LcsDiff\"](originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = _base_common_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"firstNonWhitespaceIndex\"](txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = _base_common_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"lastNonWhitespaceIndex\"](txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js ***!
  \**********************************************************************************/
/*! exports provided: MirrorTextModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MirrorTextModel\", function() { return MirrorTextModel; });\n/* harmony import */ var _core_position_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/position.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _viewModel_prefixSumComputer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../viewModel/prefixSumComputer.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new _core_position_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new _viewModel_prefixSumComputer_js__WEBPACK_IMPORTED_MODULE_1__[\"PrefixSumComputer\"](lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js ***!
  \*****************************************************************************/
/*! exports provided: USUAL_WORD_SEPARATORS, DEFAULT_WORD_REGEXP, ensureValidWordDefinition, getWordAtText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"USUAL_WORD_SEPARATORS\", function() { return USUAL_WORD_SEPARATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_WORD_REGEXP\", function() { return DEFAULT_WORD_REGEXP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ensureValidWordDefinition\", function() { return ensureValidWordDefinition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getWordAtText\", function() { return getWordAtText; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nvar DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9tb2RlbC93b3JkSGVscGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2VkaXRvci9jb21tb24vbW9kZWwvd29yZEhlbHBlci5qcz9kMDkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IHZhciBVU1VBTF9XT1JEX1NFUEFSQVRPUlMgPSAnYH4hQCMkJV4mKigpLT0rW3tdfVxcXFx8OzpcXCdcIiwuPD4vPyc7XG4vKipcbiAqIENyZWF0ZSBhIHdvcmQgZGVmaW5pdGlvbiByZWd1bGFyIGV4cHJlc3Npb24gYmFzZWQgb24gZGVmYXVsdCB3b3JkIHNlcGFyYXRvcnMuXG4gKiBPcHRpb25hbGx5IHByb3ZpZGUgYWxsb3dlZCBzZXBhcmF0b3JzIHRoYXQgc2hvdWxkIGJlIGluY2x1ZGVkIGluIHdvcmRzLlxuICpcbiAqIFRoZSBkZWZhdWx0IHdvdWxkIGxvb2sgbGlrZSB0aGlzOlxuICogLygtP1xcZCpcXC5cXGRcXHcqKXwoW15cXGBcXH5cXCFcXEBcXCNcXCRcXCVcXF5cXCZcXCpcXChcXClcXC1cXD1cXCtcXFtcXHtcXF1cXH1cXFxcXFx8XFw7XFw6XFwnXFxcIlxcLFxcLlxcPFxcPlxcL1xcP1xcc10rKS9nXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVdvcmRSZWdFeHAoYWxsb3dJbldvcmRzKSB7XG4gICAgaWYgKGFsbG93SW5Xb3JkcyA9PT0gdm9pZCAwKSB7IGFsbG93SW5Xb3JkcyA9ICcnOyB9XG4gICAgdmFyIHNvdXJjZSA9ICcoLT9cXFxcZCpcXFxcLlxcXFxkXFxcXHcqKXwoW14nO1xuICAgIGZvciAodmFyIF9pID0gMCwgVVNVQUxfV09SRF9TRVBBUkFUT1JTXzEgPSBVU1VBTF9XT1JEX1NFUEFSQVRPUlM7IF9pIDwgVVNVQUxfV09SRF9TRVBBUkFUT1JTXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBzZXAgPSBVU1VBTF9XT1JEX1NFUEFSQVRPUlNfMVtfaV07XG4gICAgICAgIGlmIChhbGxvd0luV29yZHMuaW5kZXhPZihzZXApID49IDApIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHNvdXJjZSArPSAnXFxcXCcgKyBzZXA7XG4gICAgfVxuICAgIHNvdXJjZSArPSAnXFxcXHNdKyknO1xuICAgIHJldHVybiBuZXcgUmVnRXhwKHNvdXJjZSwgJ2cnKTtcbn1cbi8vIGNhdGNoZXMgbnVtYmVycyAoaW5jbHVkaW5nIGZsb2F0aW5nIG51bWJlcnMpIGluIHRoZSBmaXJzdCBncm91cCwgYW5kIGFscGhhbnVtIGluIHRoZSBzZWNvbmRcbmV4cG9ydCB2YXIgREVGQVVMVF9XT1JEX1JFR0VYUCA9IGNyZWF0ZVdvcmRSZWdFeHAoKTtcbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVWYWxpZFdvcmREZWZpbml0aW9uKHdvcmREZWZpbml0aW9uKSB7XG4gICAgdmFyIHJlc3VsdCA9IERFRkFVTFRfV09SRF9SRUdFWFA7XG4gICAgaWYgKHdvcmREZWZpbml0aW9uICYmICh3b3JkRGVmaW5pdGlvbiBpbnN0YW5jZW9mIFJlZ0V4cCkpIHtcbiAgICAgICAgaWYgKCF3b3JkRGVmaW5pdGlvbi5nbG9iYWwpIHtcbiAgICAgICAgICAgIHZhciBmbGFncyA9ICdnJztcbiAgICAgICAgICAgIGlmICh3b3JkRGVmaW5pdGlvbi5pZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgZmxhZ3MgKz0gJ2knO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHdvcmREZWZpbml0aW9uLm11bHRpbGluZSkge1xuICAgICAgICAgICAgICAgIGZsYWdzICs9ICdtJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh3b3JkRGVmaW5pdGlvbi51bmljb2RlKSB7XG4gICAgICAgICAgICAgICAgZmxhZ3MgKz0gJ3UnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzdWx0ID0gbmV3IFJlZ0V4cCh3b3JkRGVmaW5pdGlvbi5zb3VyY2UsIGZsYWdzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHdvcmREZWZpbml0aW9uO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5sYXN0SW5kZXggPSAwO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBnZXRXb3JkQXRQb3NGYXN0KGNvbHVtbiwgd29yZERlZmluaXRpb24sIHRleHQsIHRleHRPZmZzZXQpIHtcbiAgICAvLyBmaW5kIHdoaXRlc3BhY2UgZW5jbG9zZWQgdGV4dCBhcm91bmQgY29sdW1uIGFuZCBtYXRjaCBmcm9tIHRoZXJlXG4gICAgdmFyIHBvcyA9IGNvbHVtbiAtIDEgLSB0ZXh0T2Zmc2V0O1xuICAgIHZhciBzdGFydCA9IHRleHQubGFzdEluZGV4T2YoJyAnLCBwb3MgLSAxKSArIDE7XG4gICAgd29yZERlZmluaXRpb24ubGFzdEluZGV4ID0gc3RhcnQ7XG4gICAgdmFyIG1hdGNoO1xuICAgIHdoaWxlIChtYXRjaCA9IHdvcmREZWZpbml0aW9uLmV4ZWModGV4dCkpIHtcbiAgICAgICAgdmFyIG1hdGNoSW5kZXggPSBtYXRjaC5pbmRleCB8fCAwO1xuICAgICAgICBpZiAobWF0Y2hJbmRleCA8PSBwb3MgJiYgd29yZERlZmluaXRpb24ubGFzdEluZGV4ID49IHBvcykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB3b3JkOiBtYXRjaFswXSxcbiAgICAgICAgICAgICAgICBzdGFydENvbHVtbjogdGV4dE9mZnNldCArIDEgKyBtYXRjaEluZGV4LFxuICAgICAgICAgICAgICAgIGVuZENvbHVtbjogdGV4dE9mZnNldCArIDEgKyB3b3JkRGVmaW5pdGlvbi5sYXN0SW5kZXhcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBnZXRXb3JkQXRQb3NTbG93KGNvbHVtbiwgd29yZERlZmluaXRpb24sIHRleHQsIHRleHRPZmZzZXQpIHtcbiAgICAvLyBtYXRjaGVzIGFsbCB3b3JkcyBzdGFydGluZyBhdCB0aGUgYmVnaW5uaW5nXG4gICAgLy8gb2YgdGhlIGlucHV0IHVudGlsIGl0IGZpbmRzIGEgbWF0Y2ggdGhhdCBlbmNsb3Nlc1xuICAgIC8vIHRoZSBkZXNpcmVkIGNvbHVtbi4gc2xvdyBidXQgY29ycmVjdFxuICAgIHZhciBwb3MgPSBjb2x1bW4gLSAxIC0gdGV4dE9mZnNldDtcbiAgICB3b3JkRGVmaW5pdGlvbi5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBtYXRjaDtcbiAgICB3aGlsZSAobWF0Y2ggPSB3b3JkRGVmaW5pdGlvbi5leGVjKHRleHQpKSB7XG4gICAgICAgIHZhciBtYXRjaEluZGV4ID0gbWF0Y2guaW5kZXggfHwgMDtcbiAgICAgICAgaWYgKG1hdGNoSW5kZXggPiBwb3MpIHtcbiAgICAgICAgICAgIC8vIHxuVyAtPiBtYXRjaGVkIG9ubHkgYWZ0ZXIgdGhlIHBvc1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAod29yZERlZmluaXRpb24ubGFzdEluZGV4ID49IHBvcykge1xuICAgICAgICAgICAgLy8gV3xXIC0+IG1hdGNoIGVuY2xvc2VzIHBvc1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB3b3JkOiBtYXRjaFswXSxcbiAgICAgICAgICAgICAgICBzdGFydENvbHVtbjogdGV4dE9mZnNldCArIDEgKyBtYXRjaEluZGV4LFxuICAgICAgICAgICAgICAgIGVuZENvbHVtbjogdGV4dE9mZnNldCArIDEgKyB3b3JkRGVmaW5pdGlvbi5sYXN0SW5kZXhcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0V29yZEF0VGV4dChjb2x1bW4sIHdvcmREZWZpbml0aW9uLCB0ZXh0LCB0ZXh0T2Zmc2V0KSB7XG4gICAgLy8gaWYgYHdvcmRzYCBjYW4gY29udGFpbiB3aGl0ZXNwYWNlIGNoYXJhY3RlciB3ZSBoYXZlIHRvIHVzZSB0aGUgc2xvdyB2YXJpYW50XG4gICAgLy8gb3RoZXJ3aXNlIHdlIHVzZSB0aGUgZmFzdCB2YXJpYW50IG9mIGZpbmRpbmcgYSB3b3JkXG4gICAgd29yZERlZmluaXRpb24ubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbWF0Y2ggPSB3b3JkRGVmaW5pdGlvbi5leGVjKHRleHQpO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIHRvZG9Aam9oIHRoZSBgbWF0Y2hgIGNvdWxkIGFscmVhZHkgYmUgdGhlIChmaXJzdCkgd29yZFxuICAgIHZhciByZXQgPSBtYXRjaFswXS5pbmRleE9mKCcgJykgPj0gMFxuICAgICAgICAvLyBkaWQgbWF0Y2ggYSB3b3JkIHdoaWNoIGNvbnRhaW5zIGEgc3BhY2UgY2hhcmFjdGVyIC0+IHVzZSBzbG93IHdvcmQgZmluZFxuICAgICAgICA/IGdldFdvcmRBdFBvc1Nsb3coY29sdW1uLCB3b3JkRGVmaW5pdGlvbiwgdGV4dCwgdGV4dE9mZnNldClcbiAgICAgICAgLy8gc2FuZSB3b3JkIGRlZmluaXRpb24gLT4gdXNlIGZhc3Qgd29yZCBmaW5kXG4gICAgICAgIDogZ2V0V29yZEF0UG9zRmFzdChjb2x1bW4sIHdvcmREZWZpbml0aW9uLCB0ZXh0LCB0ZXh0T2Zmc2V0KTtcbiAgICAvLyBib3RoIChnZXRXb3JkQXRQb3NGYXN0IGFuZCBnZXRXb3JkQXRQb3NTbG93KSBsZWF2ZSB0aGUgd29yZERlZmluaXRpb24tUmVnRXhwXG4gICAgLy8gaW4gYW4gdW5kZWZpbmVkIHN0YXRlIGFuZCB0byBub3QgY29uZnVzZSBvdGhlciB1c2VycyBvZiB0aGUgd29yZERlZmluaXRpb25cbiAgICAvLyB3ZSByZXNldCB0aGUgbGFzdEluZGV4XG4gICAgd29yZERlZmluaXRpb24ubGFzdEluZGV4ID0gMDtcbiAgICByZXR1cm4gcmV0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js ***!
  \*******************************************************************************/
/*! exports provided: StateMachine, LinkComputer, computeLinks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StateMachine\", function() { return StateMachine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinkComputer\", function() { return LinkComputer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"computeLinks\", function() { return computeLinks; });\n/* harmony import */ var _core_characterClassifier_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/characterClassifier.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js\");\n/* harmony import */ var _core_uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/uint.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new _core_uint_js__WEBPACK_IMPORTED_MODULE_1__[\"Uint8Matrix\"](maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new _core_characterClassifier_js__WEBPACK_IMPORTED_MODULE_0__[\"CharacterClassifier\"](0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js ***!
  \*************************************************************************************************/
/*! exports provided: BasicInplaceReplace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasicInplaceReplace\", function() { return BasicInplaceReplace; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9tb2Rlcy9zdXBwb3J0cy9pbnBsYWNlUmVwbGFjZVN1cHBvcnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9tb2Rlcy9zdXBwb3J0cy9pbnBsYWNlUmVwbGFjZVN1cHBvcnQuanM/MmUwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnZhciBCYXNpY0lucGxhY2VSZXBsYWNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJhc2ljSW5wbGFjZVJlcGxhY2UoKSB7XG4gICAgICAgIHRoaXMuX2RlZmF1bHRWYWx1ZVNldCA9IFtcbiAgICAgICAgICAgIFsndHJ1ZScsICdmYWxzZSddLFxuICAgICAgICAgICAgWydUcnVlJywgJ0ZhbHNlJ10sXG4gICAgICAgICAgICBbJ1ByaXZhdGUnLCAnUHVibGljJywgJ0ZyaWVuZCcsICdSZWFkT25seScsICdQYXJ0aWFsJywgJ1Byb3RlY3RlZCcsICdXcml0ZU9ubHknXSxcbiAgICAgICAgICAgIFsncHVibGljJywgJ3Byb3RlY3RlZCcsICdwcml2YXRlJ10sXG4gICAgICAgIF07XG4gICAgfVxuICAgIEJhc2ljSW5wbGFjZVJlcGxhY2UucHJvdG90eXBlLm5hdmlnYXRlVmFsdWVTZXQgPSBmdW5jdGlvbiAocmFuZ2UxLCB0ZXh0MSwgcmFuZ2UyLCB0ZXh0MiwgdXApIHtcbiAgICAgICAgaWYgKHJhbmdlMSAmJiB0ZXh0MSkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuZG9OYXZpZ2F0ZVZhbHVlU2V0KHRleHQxLCB1cCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2U6IHJhbmdlMSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHJlc3VsdFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJhbmdlMiAmJiB0ZXh0Mikge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuZG9OYXZpZ2F0ZVZhbHVlU2V0KHRleHQyLCB1cCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2U6IHJhbmdlMixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHJlc3VsdFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBCYXNpY0lucGxhY2VSZXBsYWNlLnByb3RvdHlwZS5kb05hdmlnYXRlVmFsdWVTZXQgPSBmdW5jdGlvbiAodGV4dCwgdXApIHtcbiAgICAgICAgdmFyIG51bWJlclJlc3VsdCA9IHRoaXMubnVtYmVyUmVwbGFjZSh0ZXh0LCB1cCk7XG4gICAgICAgIGlmIChudW1iZXJSZXN1bHQgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBudW1iZXJSZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudGV4dFJlcGxhY2UodGV4dCwgdXApO1xuICAgIH07XG4gICAgQmFzaWNJbnBsYWNlUmVwbGFjZS5wcm90b3R5cGUubnVtYmVyUmVwbGFjZSA9IGZ1bmN0aW9uICh2YWx1ZSwgdXApIHtcbiAgICAgICAgdmFyIHByZWNpc2lvbiA9IE1hdGgucG93KDEwLCB2YWx1ZS5sZW5ndGggLSAodmFsdWUubGFzdEluZGV4T2YoJy4nKSArIDEpKTtcbiAgICAgICAgdmFyIG4xID0gTnVtYmVyKHZhbHVlKTtcbiAgICAgICAgdmFyIG4yID0gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gICAgICAgIGlmICghaXNOYU4objEpICYmICFpc05hTihuMikgJiYgbjEgPT09IG4yKSB7XG4gICAgICAgICAgICBpZiAobjEgPT09IDAgJiYgIXVwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7IC8vIGRvbid0IGRvIG5lZ2F0aXZlXG4gICAgICAgICAgICAgICAgLy9cdFx0XHR9IGVsc2UgaWYobjEgPT09IDkgJiYgdXApIHtcbiAgICAgICAgICAgICAgICAvL1x0XHRcdFx0cmV0dXJuIG51bGw7IC8vIGRvbid0IGluc2VydCAxMCBpbnRvIGEgbnVtYmVyXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBuMSA9IE1hdGguZmxvb3IobjEgKiBwcmVjaXNpb24pO1xuICAgICAgICAgICAgICAgIG4xICs9IHVwID8gcHJlY2lzaW9uIDogLXByZWNpc2lvbjtcbiAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKG4xIC8gcHJlY2lzaW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIEJhc2ljSW5wbGFjZVJlcGxhY2UucHJvdG90eXBlLnRleHRSZXBsYWNlID0gZnVuY3Rpb24gKHZhbHVlLCB1cCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZVNldHNSZXBsYWNlKHRoaXMuX2RlZmF1bHRWYWx1ZVNldCwgdmFsdWUsIHVwKTtcbiAgICB9O1xuICAgIEJhc2ljSW5wbGFjZVJlcGxhY2UucHJvdG90eXBlLnZhbHVlU2V0c1JlcGxhY2UgPSBmdW5jdGlvbiAodmFsdWVTZXRzLCB2YWx1ZSwgdXApIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IG51bGw7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZVNldHMubGVuZ3RoOyByZXN1bHQgPT09IG51bGwgJiYgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICByZXN1bHQgPSB0aGlzLnZhbHVlU2V0UmVwbGFjZSh2YWx1ZVNldHNbaV0sIHZhbHVlLCB1cCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEJhc2ljSW5wbGFjZVJlcGxhY2UucHJvdG90eXBlLnZhbHVlU2V0UmVwbGFjZSA9IGZ1bmN0aW9uICh2YWx1ZVNldCwgdmFsdWUsIHVwKSB7XG4gICAgICAgIHZhciBpZHggPSB2YWx1ZVNldC5pbmRleE9mKHZhbHVlKTtcbiAgICAgICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgICAgICBpZHggKz0gdXAgPyArMSA6IC0xO1xuICAgICAgICAgICAgaWYgKGlkeCA8IDApIHtcbiAgICAgICAgICAgICAgICBpZHggPSB2YWx1ZVNldC5sZW5ndGggLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWR4ICU9IHZhbHVlU2V0Lmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZVNldFtpZHhdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgQmFzaWNJbnBsYWNlUmVwbGFjZS5JTlNUQU5DRSA9IG5ldyBCYXNpY0lucGxhY2VSZXBsYWNlKCk7XG4gICAgcmV0dXJuIEJhc2ljSW5wbGFjZVJlcGxhY2U7XG59KCkpO1xuZXhwb3J0IHsgQmFzaWNJbnBsYWNlUmVwbGFjZSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js ***!
  \****************************************************************************************/
/*! exports provided: BaseEditorSimpleWorker, EditorSimpleWorkerImpl, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseEditorSimpleWorker\", function() { return BaseEditorSimpleWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EditorSimpleWorkerImpl\", function() { return EditorSimpleWorkerImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _base_common_arrays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../base/common/arrays.js */ \"./node_modules/monaco-editor/esm/vs/base/common/arrays.js\");\n/* harmony import */ var _base_common_diff_diff_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../base/common/diff/diff.js */ \"./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js\");\n/* harmony import */ var _base_common_iterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../base/common/iterator.js */ \"./node_modules/monaco-editor/esm/vs/base/common/iterator.js\");\n/* harmony import */ var _base_common_platform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../base/common/platform.js */ \"./node_modules/monaco-editor/esm/vs/base/common/platform.js\");\n/* harmony import */ var _base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../base/common/uri.js */ \"./node_modules/monaco-editor/esm/vs/base/common/uri.js\");\n/* harmony import */ var _core_position_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/position.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _core_range_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/range.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/range.js\");\n/* harmony import */ var _diff_diffComputer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../diff/diffComputer.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js\");\n/* harmony import */ var _model_mirrorTextModel_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../model/mirrorTextModel.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js\");\n/* harmony import */ var _model_wordHelper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../model/wordHelper.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js\");\n/* harmony import */ var _modes_linkComputer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../modes/linkComputer.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js\");\n/* harmony import */ var _modes_supports_inplaceReplaceSupport_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../modes/supports/inplaceReplaceSupport.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js\");\n/* harmony import */ var _standalone_standaloneBase_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../standalone/standaloneBase.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js\");\n/* harmony import */ var _base_common_types_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../base/common/types.js */ \"./node_modules/monaco-editor/esm/vs/base/common/types.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = Object(_model_wordHelper_js__WEBPACK_IMPORTED_MODULE_9__[\"getWordAtText\"])(position.column, Object(_model_wordHelper_js__WEBPACK_IMPORTED_MODULE_9__[\"ensureValidWordDefinition\"])(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new _core_range_js__WEBPACK_IMPORTED_MODULE_6__[\"Range\"](position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return _base_common_iterator_js__WEBPACK_IMPORTED_MODULE_2__[\"FIN\"];\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!_core_position_js__WEBPACK_IMPORTED_MODULE_5__[\"Position\"].isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(_model_mirrorTextModel_js__WEBPACK_IMPORTED_MODULE_8__[\"MirrorTextModel\"]));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new _diff_diffComputer_js__WEBPACK_IMPORTED_MODULE_7__[\"DiffComputer\"](originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = Object(_base_common_arrays_js__WEBPACK_IMPORTED_MODULE_0__[\"mergeSort\"])(edits, function (a, b) {\n            if (a.range && b.range) {\n                return _core_range_js__WEBPACK_IMPORTED_MODULE_6__[\"Range\"].compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (_core_range_js__WEBPACK_IMPORTED_MODULE_6__[\"Range\"].isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = Object(_base_common_diff_diff_js__WEBPACK_IMPORTED_MODULE_1__[\"stringDiff\"])(original, text, false);\n            var editOffset = model.offsetAt(_core_range_js__WEBPACK_IMPORTED_MODULE_6__[\"Range\"].lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(Object(_modes_linkComputer_js__WEBPACK_IMPORTED_MODULE_10__[\"computeLinks\"])(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var seen = Object.create(null);\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var wordUntil = model.getWordUntilPosition(position, wordDefRegExp);\n        var wordAt = model.getWordAtPosition(position, wordDefRegExp);\n        if (wordAt) {\n            seen[model.getValueInRange(wordAt)] = true;\n        }\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: wordUntil.startColumn, endLineNumber: position.lineNumber, endColumn: wordUntil.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = _modes_supports_inplaceReplaceSupport_js__WEBPACK_IMPORTED_MODULE_11__[\"BasicInplaceReplace\"].INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = Object(_base_common_types_js__WEBPACK_IMPORTED_MODULE_13__[\"getAllPropertyNames\"])(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 100000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\n\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(_base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__[\"URI\"].parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\n\n/**\n * Called on the worker side\n * @internal\n */\nfunction create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    _base_common_platform_js__WEBPACK_IMPORTED_MODULE_3__[\"globals\"].monaco = Object(_standalone_standaloneBase_js__WEBPACK_IMPORTED_MODULE_12__[\"createMonacoBaseAPI\"])();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(setImmediate, global) {/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\t true ? factory() :\n\t\tundefined;\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../../../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js ***!
  \**************************************************************************************/
/*! exports provided: KeyMod, createMonacoBaseAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyMod\", function() { return KeyMod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMonacoBaseAPI\", function() { return createMonacoBaseAPI; });\n/* harmony import */ var _promise_polyfill_polyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promise-polyfill/polyfill.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js\");\n/* harmony import */ var _promise_polyfill_polyfill_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_promise_polyfill_polyfill_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../base/common/cancellation.js */ \"./node_modules/monaco-editor/esm/vs/base/common/cancellation.js\");\n/* harmony import */ var _base_common_event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../base/common/event.js */ \"./node_modules/monaco-editor/esm/vs/base/common/event.js\");\n/* harmony import */ var _base_common_keyCodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../base/common/keyCodes.js */ \"./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js\");\n/* harmony import */ var _base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../base/common/uri.js */ \"./node_modules/monaco-editor/esm/vs/base/common/uri.js\");\n/* harmony import */ var _core_position_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/position.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _core_range_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/range.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/range.js\");\n/* harmony import */ var _core_selection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/selection.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js\");\n/* harmony import */ var _core_token_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/token.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/token.js\");\n/* harmony import */ var _standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./standaloneEnums.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return Object(_base_common_keyCodes_js__WEBPACK_IMPORTED_MODULE_3__[\"KeyChord\"])(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\n\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: _base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__[\"CancellationTokenSource\"],\n        Emitter: _base_common_event_js__WEBPACK_IMPORTED_MODULE_2__[\"Emitter\"],\n        KeyCode: _standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__[\"KeyCode\"],\n        KeyMod: KeyMod,\n        Position: _core_position_js__WEBPACK_IMPORTED_MODULE_5__[\"Position\"],\n        Range: _core_range_js__WEBPACK_IMPORTED_MODULE_6__[\"Range\"],\n        Selection: _core_selection_js__WEBPACK_IMPORTED_MODULE_7__[\"Selection\"],\n        SelectionDirection: _standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__[\"SelectionDirection\"],\n        MarkerSeverity: _standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__[\"MarkerSeverity\"],\n        MarkerTag: _standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__[\"MarkerTag\"],\n        Uri: _base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__[\"URI\"],\n        Token: _core_token_js__WEBPACK_IMPORTED_MODULE_8__[\"Token\"]\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9zdGFuZGFsb25lL3N0YW5kYWxvbmVCYXNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2VkaXRvci9jb21tb24vc3RhbmRhbG9uZS9zdGFuZGFsb25lQmFzZS5qcz82ZWFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0ICcuL3Byb21pc2UtcG9seWZpbGwvcG9seWZpbGwuanMnO1xuaW1wb3J0IHsgQ2FuY2VsbGF0aW9uVG9rZW5Tb3VyY2UgfSBmcm9tICcuLi8uLi8uLi9iYXNlL2NvbW1vbi9jYW5jZWxsYXRpb24uanMnO1xuaW1wb3J0IHsgRW1pdHRlciB9IGZyb20gJy4uLy4uLy4uL2Jhc2UvY29tbW9uL2V2ZW50LmpzJztcbmltcG9ydCB7IEtleUNob3JkIH0gZnJvbSAnLi4vLi4vLi4vYmFzZS9jb21tb24va2V5Q29kZXMuanMnO1xuaW1wb3J0IHsgVVJJIH0gZnJvbSAnLi4vLi4vLi4vYmFzZS9jb21tb24vdXJpLmpzJztcbmltcG9ydCB7IFBvc2l0aW9uIH0gZnJvbSAnLi4vY29yZS9wb3NpdGlvbi5qcyc7XG5pbXBvcnQgeyBSYW5nZSB9IGZyb20gJy4uL2NvcmUvcmFuZ2UuanMnO1xuaW1wb3J0IHsgU2VsZWN0aW9uIH0gZnJvbSAnLi4vY29yZS9zZWxlY3Rpb24uanMnO1xuaW1wb3J0IHsgVG9rZW4gfSBmcm9tICcuLi9jb3JlL3Rva2VuLmpzJztcbmltcG9ydCAqIGFzIHN0YW5kYWxvbmVFbnVtcyBmcm9tICcuL3N0YW5kYWxvbmVFbnVtcy5qcyc7XG52YXIgS2V5TW9kID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEtleU1vZCgpIHtcbiAgICB9XG4gICAgS2V5TW9kLmNob3JkID0gZnVuY3Rpb24gKGZpcnN0UGFydCwgc2Vjb25kUGFydCkge1xuICAgICAgICByZXR1cm4gS2V5Q2hvcmQoZmlyc3RQYXJ0LCBzZWNvbmRQYXJ0KTtcbiAgICB9O1xuICAgIEtleU1vZC5DdHJsQ21kID0gMjA0OCAvKiBDdHJsQ21kICovO1xuICAgIEtleU1vZC5TaGlmdCA9IDEwMjQgLyogU2hpZnQgKi87XG4gICAgS2V5TW9kLkFsdCA9IDUxMiAvKiBBbHQgKi87XG4gICAgS2V5TW9kLldpbkN0cmwgPSAyNTYgLyogV2luQ3RybCAqLztcbiAgICByZXR1cm4gS2V5TW9kO1xufSgpKTtcbmV4cG9ydCB7IEtleU1vZCB9O1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1vbmFjb0Jhc2VBUEkoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZWRpdG9yOiB1bmRlZmluZWQsXG4gICAgICAgIGxhbmd1YWdlczogdW5kZWZpbmVkLFxuICAgICAgICBDYW5jZWxsYXRpb25Ub2tlblNvdXJjZTogQ2FuY2VsbGF0aW9uVG9rZW5Tb3VyY2UsXG4gICAgICAgIEVtaXR0ZXI6IEVtaXR0ZXIsXG4gICAgICAgIEtleUNvZGU6IHN0YW5kYWxvbmVFbnVtcy5LZXlDb2RlLFxuICAgICAgICBLZXlNb2Q6IEtleU1vZCxcbiAgICAgICAgUG9zaXRpb246IFBvc2l0aW9uLFxuICAgICAgICBSYW5nZTogUmFuZ2UsXG4gICAgICAgIFNlbGVjdGlvbjogU2VsZWN0aW9uLFxuICAgICAgICBTZWxlY3Rpb25EaXJlY3Rpb246IHN0YW5kYWxvbmVFbnVtcy5TZWxlY3Rpb25EaXJlY3Rpb24sXG4gICAgICAgIE1hcmtlclNldmVyaXR5OiBzdGFuZGFsb25lRW51bXMuTWFya2VyU2V2ZXJpdHksXG4gICAgICAgIE1hcmtlclRhZzogc3RhbmRhbG9uZUVudW1zLk1hcmtlclRhZyxcbiAgICAgICAgVXJpOiBVUkksXG4gICAgICAgIFRva2VuOiBUb2tlblxuICAgIH07XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js ***!
  \***************************************************************************************/
/*! exports provided: MarkerTag, MarkerSeverity, KeyCode, SelectionDirection, ScrollbarVisibility, OverviewRulerLane, EndOfLinePreference, DefaultEndOfLine, EndOfLineSequence, TrackedRangeStickiness, ScrollType, CursorChangeReason, RenderMinimap, WrappingIndent, TextEditorCursorBlinkingStyle, TextEditorCursorStyle, RenderLineNumbersType, ContentWidgetPositionPreference, OverlayWidgetPositionPreference, MouseTargetType, IndentAction, CompletionItemKind, CompletionItemInsertTextRule, CompletionTriggerKind, SignatureHelpTriggerKind, DocumentHighlightKind, SymbolKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerTag\", function() { return MarkerTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerSeverity\", function() { return MarkerSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyCode\", function() { return KeyCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionDirection\", function() { return SelectionDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollbarVisibility\", function() { return ScrollbarVisibility; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverviewRulerLane\", function() { return OverviewRulerLane; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EndOfLinePreference\", function() { return EndOfLinePreference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultEndOfLine\", function() { return DefaultEndOfLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EndOfLineSequence\", function() { return EndOfLineSequence; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrackedRangeStickiness\", function() { return TrackedRangeStickiness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollType\", function() { return ScrollType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CursorChangeReason\", function() { return CursorChangeReason; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderMinimap\", function() { return RenderMinimap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WrappingIndent\", function() { return WrappingIndent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEditorCursorBlinkingStyle\", function() { return TextEditorCursorBlinkingStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEditorCursorStyle\", function() { return TextEditorCursorStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderLineNumbersType\", function() { return RenderLineNumbersType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentWidgetPositionPreference\", function() { return ContentWidgetPositionPreference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayWidgetPositionPreference\", function() { return OverlayWidgetPositionPreference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MouseTargetType\", function() { return MouseTargetType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IndentAction\", function() { return IndentAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemInsertTextRule\", function() { return CompletionItemInsertTextRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionTriggerKind\", function() { return CompletionTriggerKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureHelpTriggerKind\", function() { return SignatureHelpTriggerKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return DocumentHighlightKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return SymbolKind; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nvar MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nvar MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nvar KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nvar SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nvar ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nvar OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nvar EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nvar DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nvar EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nvar TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nvar ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nvar CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nvar RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nvar WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nvar TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nvar TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nvar RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nvar ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nvar OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nvar MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nvar IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js ***!
  \****************************************************************************************/
/*! exports provided: PrefixSumIndexOfResult, PrefixSumComputer, PrefixSumComputerWithCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrefixSumIndexOfResult\", function() { return PrefixSumIndexOfResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrefixSumComputer\", function() { return PrefixSumComputer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrefixSumComputerWithCache\", function() { return PrefixSumComputerWithCache; });\n/* harmony import */ var _core_uint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/uint.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\n\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = Object(_core_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = Object(_core_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(index);\n        value = Object(_core_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = Object(_core_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(startIndex);\n        cnt = Object(_core_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = Object(_core_uint_js__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\n\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/editor/editor.worker.js":
/*!*******************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/editor.worker.js ***!
  \*******************************************************************/
/*! exports provided: initialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initialize\", function() { return initialize; });\n/* harmony import */ var _base_common_worker_simpleWorker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/common/worker/simpleWorker.js */ \"./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js\");\n/* harmony import */ var _common_services_editorSimpleWorker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/services/editorSimpleWorker.js */ \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar initialized = false;\nfunction initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new _common_services_editorSimpleWorker_js__WEBPACK_IMPORTED_MODULE_1__[\"EditorSimpleWorkerImpl\"](foreignModule);\n    var simpleWorker = new _base_common_worker_simpleWorker_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleWorkerServer\"](function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkaXRvci53b3JrZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2VkaXRvci53b3JrZXIuanM/ZTUwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFNpbXBsZVdvcmtlclNlcnZlciB9IGZyb20gJy4uL2Jhc2UvY29tbW9uL3dvcmtlci9zaW1wbGVXb3JrZXIuanMnO1xuaW1wb3J0IHsgRWRpdG9yU2ltcGxlV29ya2VySW1wbCB9IGZyb20gJy4vY29tbW9uL3NlcnZpY2VzL2VkaXRvclNpbXBsZVdvcmtlci5qcyc7XG52YXIgaW5pdGlhbGl6ZWQgPSBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplKGZvcmVpZ25Nb2R1bGUpIHtcbiAgICBpZiAoaW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbml0aWFsaXplZCA9IHRydWU7XG4gICAgdmFyIGVkaXRvcldvcmtlciA9IG5ldyBFZGl0b3JTaW1wbGVXb3JrZXJJbXBsKGZvcmVpZ25Nb2R1bGUpO1xuICAgIHZhciBzaW1wbGVXb3JrZXIgPSBuZXcgU2ltcGxlV29ya2VyU2VydmVyKGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgc2VsZi5wb3N0TWVzc2FnZShtc2cpO1xuICAgIH0sIGVkaXRvcldvcmtlcik7XG4gICAgc2VsZi5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBzaW1wbGVXb3JrZXIub25tZXNzYWdlKGUuZGF0YSk7XG4gICAgfTtcbn1cbnNlbGYub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAvLyBJZ25vcmUgZmlyc3QgbWVzc2FnZSBpbiB0aGlzIGNhc2UgYW5kIGluaXRpYWxpemUgaWYgbm90IHlldCBpbml0aWFsaXplZFxuICAgIGlmICghaW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgaW5pdGlhbGl6ZShudWxsKTtcbiAgICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js ***!
  \***************************************************************************************************************/
/*! exports provided: Position, Range, Location, LocationLink, Color, ColorInformation, ColorPresentation, FoldingRangeKind, FoldingRange, DiagnosticRelatedInformation, DiagnosticSeverity, Diagnostic, Command, TextEdit, TextDocumentEdit, CreateFile, RenameFile, DeleteFile, WorkspaceEdit, WorkspaceChange, TextDocumentIdentifier, VersionedTextDocumentIdentifier, TextDocumentItem, MarkupKind, MarkupContent, CompletionItemKind, InsertTextFormat, CompletionItem, CompletionList, MarkedString, Hover, ParameterInformation, SignatureInformation, DocumentHighlightKind, DocumentHighlight, SymbolKind, SymbolInformation, DocumentSymbol, CodeActionKind, CodeActionContext, CodeAction, CodeLens, FormattingOptions, DocumentLink, EOL, TextDocument, TextDocumentSaveReason, getCSSLanguageService, getSCSSLanguageService, getLESSLanguageService, SelectionRangeKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCSSLanguageService\", function() { return getCSSLanguageService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSCSSLanguageService\", function() { return getSCSSLanguageService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLESSLanguageService\", function() { return getLESSLanguageService; });\n/* harmony import */ var _parser_cssParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/cssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _services_cssCompletion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/cssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/cssHover.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js\");\n/* harmony import */ var _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/cssNavigation.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js\");\n/* harmony import */ var _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/cssCodeActions.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js\");\n/* harmony import */ var _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/cssValidation.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js\");\n/* harmony import */ var _parser_scssParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parser/scssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js\");\n/* harmony import */ var _services_scssCompletion_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./services/scssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js\");\n/* harmony import */ var _parser_lessParser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parser/lessParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js\");\n/* harmony import */ var _services_lessCompletion_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./services/lessCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js\");\n/* harmony import */ var _services_cssFolding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./services/cssFolding.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _services_cssSelectionRange_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./services/cssSelectionRange.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cssLanguageTypes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_13__[\"Range\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_13__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_13__[\"Position\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SelectionRangeKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_13__[\"SelectionRangeKind\"]; });\n\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"Location\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LocationLink\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"LocationLink\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"Color\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"ColorInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"ColorPresentation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"FoldingRangeKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"FoldingRange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DiagnosticRelatedInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DiagnosticSeverity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"Diagnostic\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"Command\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"TextDocumentEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CreateFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"RenameFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DeleteFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"WorkspaceEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"WorkspaceChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"TextDocumentIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"VersionedTextDocumentIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"TextDocumentItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"MarkupKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"MarkupContent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CompletionItemKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"InsertTextFormat\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CompletionItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CompletionList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"MarkedString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"Hover\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"ParameterInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"SignatureInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DocumentHighlightKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DocumentHighlight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"SymbolKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"SymbolInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DocumentSymbol\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CodeActionKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CodeActionContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CodeAction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"CodeLens\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"FormattingOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"DocumentLink\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"EOL\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"TextDocument\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentSaveReason\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_14__[\"TextDocumentSaveReason\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction createFacade(parser, completion, hover, navigation, codeActions, validation) {\n    return {\n        configure: validation.configure.bind(validation),\n        doValidation: validation.doValidation.bind(validation),\n        parseStylesheet: parser.parseStylesheet.bind(parser),\n        doComplete: completion.doComplete.bind(completion),\n        setCompletionParticipants: completion.setCompletionParticipants.bind(completion),\n        doHover: hover.doHover.bind(hover),\n        findDefinition: navigation.findDefinition.bind(navigation),\n        findReferences: navigation.findReferences.bind(navigation),\n        findDocumentHighlights: navigation.findDocumentHighlights.bind(navigation),\n        findDocumentLinks: navigation.findDocumentLinks.bind(navigation),\n        findDocumentSymbols: navigation.findDocumentSymbols.bind(navigation),\n        doCodeActions: codeActions.doCodeActions.bind(codeActions),\n        doCodeActions2: codeActions.doCodeActions2.bind(codeActions),\n        findColorSymbols: function (d, s) { return navigation.findDocumentColors(d, s).map(function (s) { return s.range; }); },\n        findDocumentColors: navigation.findDocumentColors.bind(navigation),\n        getColorPresentations: navigation.getColorPresentations.bind(navigation),\n        doRename: navigation.doRename.bind(navigation),\n        getFoldingRanges: _services_cssFolding_js__WEBPACK_IMPORTED_MODULE_10__[\"getFoldingRanges\"],\n        getSelectionRanges: _services_cssSelectionRange_js__WEBPACK_IMPORTED_MODULE_12__[\"getSelectionRanges\"]\n    };\n}\nfunction handleCustomData(options) {\n    if (options && options.customDataProviders) {\n        _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_11__[\"cssDataManager\"].addDataProviders(options.customDataProviders);\n    }\n}\nfunction getCSSLanguageService(options) {\n    handleCustomData(options);\n    return createFacade(new _parser_cssParser_js__WEBPACK_IMPORTED_MODULE_0__[\"Parser\"](), new _services_cssCompletion_js__WEBPACK_IMPORTED_MODULE_1__[\"CSSCompletion\"](), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSHover\"](), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSNavigation\"](), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSCodeActions\"](), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSValidation\"]());\n}\nfunction getSCSSLanguageService(options) {\n    handleCustomData(options);\n    return createFacade(new _parser_scssParser_js__WEBPACK_IMPORTED_MODULE_6__[\"SCSSParser\"](), new _services_scssCompletion_js__WEBPACK_IMPORTED_MODULE_7__[\"SCSSCompletion\"](), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSHover\"](), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSNavigation\"](), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSCodeActions\"](), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSValidation\"]());\n}\nfunction getLESSLanguageService(options) {\n    handleCustomData(options);\n    return createFacade(new _parser_lessParser_js__WEBPACK_IMPORTED_MODULE_8__[\"LESSParser\"](), new _services_lessCompletion_js__WEBPACK_IMPORTED_MODULE_9__[\"LESSCompletion\"](), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSHover\"](), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSNavigation\"](), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSCodeActions\"](), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSValidation\"]());\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2Nzc0xhbmd1YWdlU2VydmljZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvY3NzTGFuZ3VhZ2VTZXJ2aWNlLmpzPzE0NTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBQYXJzZXIgfSBmcm9tICcuL3BhcnNlci9jc3NQYXJzZXIuanMnO1xuaW1wb3J0IHsgQ1NTQ29tcGxldGlvbiB9IGZyb20gJy4vc2VydmljZXMvY3NzQ29tcGxldGlvbi5qcyc7XG5pbXBvcnQgeyBDU1NIb3ZlciB9IGZyb20gJy4vc2VydmljZXMvY3NzSG92ZXIuanMnO1xuaW1wb3J0IHsgQ1NTTmF2aWdhdGlvbiB9IGZyb20gJy4vc2VydmljZXMvY3NzTmF2aWdhdGlvbi5qcyc7XG5pbXBvcnQgeyBDU1NDb2RlQWN0aW9ucyB9IGZyb20gJy4vc2VydmljZXMvY3NzQ29kZUFjdGlvbnMuanMnO1xuaW1wb3J0IHsgQ1NTVmFsaWRhdGlvbiB9IGZyb20gJy4vc2VydmljZXMvY3NzVmFsaWRhdGlvbi5qcyc7XG5pbXBvcnQgeyBTQ1NTUGFyc2VyIH0gZnJvbSAnLi9wYXJzZXIvc2Nzc1BhcnNlci5qcyc7XG5pbXBvcnQgeyBTQ1NTQ29tcGxldGlvbiB9IGZyb20gJy4vc2VydmljZXMvc2Nzc0NvbXBsZXRpb24uanMnO1xuaW1wb3J0IHsgTEVTU1BhcnNlciB9IGZyb20gJy4vcGFyc2VyL2xlc3NQYXJzZXIuanMnO1xuaW1wb3J0IHsgTEVTU0NvbXBsZXRpb24gfSBmcm9tICcuL3NlcnZpY2VzL2xlc3NDb21wbGV0aW9uLmpzJztcbmltcG9ydCB7IGdldEZvbGRpbmdSYW5nZXMgfSBmcm9tICcuL3NlcnZpY2VzL2Nzc0ZvbGRpbmcuanMnO1xuaW1wb3J0IHsgY3NzRGF0YU1hbmFnZXIgfSBmcm9tICcuL2xhbmd1YWdlRmFjdHMvZmFjdHMuanMnO1xuaW1wb3J0IHsgZ2V0U2VsZWN0aW9uUmFuZ2VzIH0gZnJvbSAnLi9zZXJ2aWNlcy9jc3NTZWxlY3Rpb25SYW5nZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Nzc0xhbmd1YWdlVHlwZXMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi4vdnNjb2RlLWxhbmd1YWdlc2VydmVyLXR5cGVzL21haW4uanMnO1xuZnVuY3Rpb24gY3JlYXRlRmFjYWRlKHBhcnNlciwgY29tcGxldGlvbiwgaG92ZXIsIG5hdmlnYXRpb24sIGNvZGVBY3Rpb25zLCB2YWxpZGF0aW9uKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29uZmlndXJlOiB2YWxpZGF0aW9uLmNvbmZpZ3VyZS5iaW5kKHZhbGlkYXRpb24pLFxuICAgICAgICBkb1ZhbGlkYXRpb246IHZhbGlkYXRpb24uZG9WYWxpZGF0aW9uLmJpbmQodmFsaWRhdGlvbiksXG4gICAgICAgIHBhcnNlU3R5bGVzaGVldDogcGFyc2VyLnBhcnNlU3R5bGVzaGVldC5iaW5kKHBhcnNlciksXG4gICAgICAgIGRvQ29tcGxldGU6IGNvbXBsZXRpb24uZG9Db21wbGV0ZS5iaW5kKGNvbXBsZXRpb24pLFxuICAgICAgICBzZXRDb21wbGV0aW9uUGFydGljaXBhbnRzOiBjb21wbGV0aW9uLnNldENvbXBsZXRpb25QYXJ0aWNpcGFudHMuYmluZChjb21wbGV0aW9uKSxcbiAgICAgICAgZG9Ib3ZlcjogaG92ZXIuZG9Ib3Zlci5iaW5kKGhvdmVyKSxcbiAgICAgICAgZmluZERlZmluaXRpb246IG5hdmlnYXRpb24uZmluZERlZmluaXRpb24uYmluZChuYXZpZ2F0aW9uKSxcbiAgICAgICAgZmluZFJlZmVyZW5jZXM6IG5hdmlnYXRpb24uZmluZFJlZmVyZW5jZXMuYmluZChuYXZpZ2F0aW9uKSxcbiAgICAgICAgZmluZERvY3VtZW50SGlnaGxpZ2h0czogbmF2aWdhdGlvbi5maW5kRG9jdW1lbnRIaWdobGlnaHRzLmJpbmQobmF2aWdhdGlvbiksXG4gICAgICAgIGZpbmREb2N1bWVudExpbmtzOiBuYXZpZ2F0aW9uLmZpbmREb2N1bWVudExpbmtzLmJpbmQobmF2aWdhdGlvbiksXG4gICAgICAgIGZpbmREb2N1bWVudFN5bWJvbHM6IG5hdmlnYXRpb24uZmluZERvY3VtZW50U3ltYm9scy5iaW5kKG5hdmlnYXRpb24pLFxuICAgICAgICBkb0NvZGVBY3Rpb25zOiBjb2RlQWN0aW9ucy5kb0NvZGVBY3Rpb25zLmJpbmQoY29kZUFjdGlvbnMpLFxuICAgICAgICBkb0NvZGVBY3Rpb25zMjogY29kZUFjdGlvbnMuZG9Db2RlQWN0aW9uczIuYmluZChjb2RlQWN0aW9ucyksXG4gICAgICAgIGZpbmRDb2xvclN5bWJvbHM6IGZ1bmN0aW9uIChkLCBzKSB7IHJldHVybiBuYXZpZ2F0aW9uLmZpbmREb2N1bWVudENvbG9ycyhkLCBzKS5tYXAoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMucmFuZ2U7IH0pOyB9LFxuICAgICAgICBmaW5kRG9jdW1lbnRDb2xvcnM6IG5hdmlnYXRpb24uZmluZERvY3VtZW50Q29sb3JzLmJpbmQobmF2aWdhdGlvbiksXG4gICAgICAgIGdldENvbG9yUHJlc2VudGF0aW9uczogbmF2aWdhdGlvbi5nZXRDb2xvclByZXNlbnRhdGlvbnMuYmluZChuYXZpZ2F0aW9uKSxcbiAgICAgICAgZG9SZW5hbWU6IG5hdmlnYXRpb24uZG9SZW5hbWUuYmluZChuYXZpZ2F0aW9uKSxcbiAgICAgICAgZ2V0Rm9sZGluZ1JhbmdlczogZ2V0Rm9sZGluZ1JhbmdlcyxcbiAgICAgICAgZ2V0U2VsZWN0aW9uUmFuZ2VzOiBnZXRTZWxlY3Rpb25SYW5nZXNcbiAgICB9O1xufVxuZnVuY3Rpb24gaGFuZGxlQ3VzdG9tRGF0YShvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5jdXN0b21EYXRhUHJvdmlkZXJzKSB7XG4gICAgICAgIGNzc0RhdGFNYW5hZ2VyLmFkZERhdGFQcm92aWRlcnMob3B0aW9ucy5jdXN0b21EYXRhUHJvdmlkZXJzKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q1NTTGFuZ3VhZ2VTZXJ2aWNlKG9wdGlvbnMpIHtcbiAgICBoYW5kbGVDdXN0b21EYXRhKG9wdGlvbnMpO1xuICAgIHJldHVybiBjcmVhdGVGYWNhZGUobmV3IFBhcnNlcigpLCBuZXcgQ1NTQ29tcGxldGlvbigpLCBuZXcgQ1NTSG92ZXIoKSwgbmV3IENTU05hdmlnYXRpb24oKSwgbmV3IENTU0NvZGVBY3Rpb25zKCksIG5ldyBDU1NWYWxpZGF0aW9uKCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFNDU1NMYW5ndWFnZVNlcnZpY2Uob3B0aW9ucykge1xuICAgIGhhbmRsZUN1c3RvbURhdGEob3B0aW9ucyk7XG4gICAgcmV0dXJuIGNyZWF0ZUZhY2FkZShuZXcgU0NTU1BhcnNlcigpLCBuZXcgU0NTU0NvbXBsZXRpb24oKSwgbmV3IENTU0hvdmVyKCksIG5ldyBDU1NOYXZpZ2F0aW9uKCksIG5ldyBDU1NDb2RlQWN0aW9ucygpLCBuZXcgQ1NTVmFsaWRhdGlvbigpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRMRVNTTGFuZ3VhZ2VTZXJ2aWNlKG9wdGlvbnMpIHtcbiAgICBoYW5kbGVDdXN0b21EYXRhKG9wdGlvbnMpO1xuICAgIHJldHVybiBjcmVhdGVGYWNhZGUobmV3IExFU1NQYXJzZXIoKSwgbmV3IExFU1NDb21wbGV0aW9uKCksIG5ldyBDU1NIb3ZlcigpLCBuZXcgQ1NTTmF2aWdhdGlvbigpLCBuZXcgQ1NTQ29kZUFjdGlvbnMoKSwgbmV3IENTU1ZhbGlkYXRpb24oKSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js ***!
  \*************************************************************************************************************/
/*! exports provided: Range, TextEdit, Position, SelectionRangeKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionRangeKind\", function() { return SelectionRangeKind; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n// #region Proposed types, remove once added to vscode-languageserver-types\n/**\n * Enum of known selection range kinds\n */\nvar SelectionRangeKind;\n(function (SelectionRangeKind) {\n    /**\n     * Empty Kind.\n     */\n    SelectionRangeKind[\"Empty\"] = \"\";\n    /**\n     * The statment kind, its value is `statement`, possible extensions can be\n     * `statement.if` etc\n     */\n    SelectionRangeKind[\"Statement\"] = \"statement\";\n    /**\n     * The declaration kind, its value is `declaration`, possible extensions can be\n     * `declaration.function`, `declaration.class` etc.\n     */\n    SelectionRangeKind[\"Declaration\"] = \"declaration\";\n})(SelectionRangeKind || (SelectionRangeKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2Nzc0xhbmd1YWdlVHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2Nzc0xhbmd1YWdlVHlwZXMuanM/Y2M1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFJhbmdlLCBUZXh0RWRpdCwgUG9zaXRpb24gfSBmcm9tICcuLi92c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXMvbWFpbi5qcyc7XG5leHBvcnQgeyBSYW5nZSwgVGV4dEVkaXQsIFBvc2l0aW9uIH07XG4vLyAjcmVnaW9uIFByb3Bvc2VkIHR5cGVzLCByZW1vdmUgb25jZSBhZGRlZCB0byB2c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXNcbi8qKlxuICogRW51bSBvZiBrbm93biBzZWxlY3Rpb24gcmFuZ2Uga2luZHNcbiAqL1xuZXhwb3J0IHZhciBTZWxlY3Rpb25SYW5nZUtpbmQ7XG4oZnVuY3Rpb24gKFNlbGVjdGlvblJhbmdlS2luZCkge1xuICAgIC8qKlxuICAgICAqIEVtcHR5IEtpbmQuXG4gICAgICovXG4gICAgU2VsZWN0aW9uUmFuZ2VLaW5kW1wiRW1wdHlcIl0gPSBcIlwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBzdGF0bWVudCBraW5kLCBpdHMgdmFsdWUgaXMgYHN0YXRlbWVudGAsIHBvc3NpYmxlIGV4dGVuc2lvbnMgY2FuIGJlXG4gICAgICogYHN0YXRlbWVudC5pZmAgZXRjXG4gICAgICovXG4gICAgU2VsZWN0aW9uUmFuZ2VLaW5kW1wiU3RhdGVtZW50XCJdID0gXCJzdGF0ZW1lbnRcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgZGVjbGFyYXRpb24ga2luZCwgaXRzIHZhbHVlIGlzIGBkZWNsYXJhdGlvbmAsIHBvc3NpYmxlIGV4dGVuc2lvbnMgY2FuIGJlXG4gICAgICogYGRlY2xhcmF0aW9uLmZ1bmN0aW9uYCwgYGRlY2xhcmF0aW9uLmNsYXNzYCBldGMuXG4gICAgICovXG4gICAgU2VsZWN0aW9uUmFuZ2VLaW5kW1wiRGVjbGFyYXRpb25cIl0gPSBcImRlY2xhcmF0aW9uXCI7XG59KShTZWxlY3Rpb25SYW5nZUtpbmQgfHwgKFNlbGVjdGlvblJhbmdlS2luZCA9IHt9KSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js ***!
  \**********************************************************************************************************/
/*! exports provided: cssData, descriptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssData\", function() { return cssData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"descriptions\", function() { return descriptions; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// file generated from css-schema.xml and https://github.com/mdn/data using build/generate_browserjs.js\nvar cssData = {\n    \"version\": 1,\n    \"properties\": [\n        {\n            name: \"additive-symbols\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"[ <integer> && <symbol> ]#\",\n            \"description\": \"@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor. Needs to be specified if the counter system is 'additive'.\",\n            \"restrictions\": [\n                \"integer\",\n                \"string\",\n                \"image\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"align-content\",\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Lines are packed toward the center of the flex container.\"\n                },\n                {\n                    name: \"flex-end\",\n                    \"description\": \"Lines are packed toward the end of the flex container.\"\n                },\n                {\n                    name: \"flex-start\",\n                    \"description\": \"Lines are packed toward the start of the flex container.\"\n                },\n                {\n                    name: \"space-around\",\n                    \"description\": \"Lines are evenly distributed in the flex container, with half-size spaces on either end.\"\n                },\n                {\n                    name: \"space-between\",\n                    \"description\": \"Lines are evenly distributed in the flex container.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"Lines stretch to take up the remaining space.\"\n                }\n            ],\n            \"syntax\": \"normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>\",\n            \"description\": \"Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"align-items\",\n            values: [\n                {\n                    name: \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    name: \"flex-end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    name: \"flex-start\",\n                    \"description\": \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                }\n            ],\n            \"syntax\": \"normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]\",\n            \"description\": \"Aligns flex items along the cross axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"justify-items\",\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"normal\"\n                },\n                {\n                    name: \"end\"\n                },\n                {\n                    name: \"start\"\n                },\n                {\n                    name: \"flex-end\",\n                    \"description\": \"\\\"Flex items are packed toward the end of the line.\\\"\"\n                },\n                {\n                    name: \"flex-start\",\n                    \"description\": \"\\\"Flex items are packed toward the start of the line.\\\"\"\n                },\n                {\n                    name: \"self-end\"\n                },\n                {\n                    name: \"self-start\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The items are packed flush to each other toward the center of the of the alignment container.\"\n                },\n                {\n                    name: \"left\"\n                },\n                {\n                    name: \"right\"\n                },\n                {\n                    name: \"baseline\"\n                },\n                {\n                    name: \"first baseline\"\n                },\n                {\n                    name: \"last baseline\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                },\n                {\n                    name: \"save\"\n                },\n                {\n                    name: \"unsave\"\n                },\n                {\n                    name: \"legacy\"\n                }\n            ],\n            \"syntax\": \"normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]\",\n            \"description\": \"Defines the default justify-self for all items of the box, giving them the default way of justifying each box along the appropriate axis\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"justify-self\",\n            browsers: [\n                \"E16\",\n                \"FF45\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"normal\"\n                },\n                {\n                    name: \"end\"\n                },\n                {\n                    name: \"start\"\n                },\n                {\n                    name: \"flex-end\",\n                    \"description\": \"\\\"Flex items are packed toward the end of the line.\\\"\"\n                },\n                {\n                    name: \"flex-start\",\n                    \"description\": \"\\\"Flex items are packed toward the start of the line.\\\"\"\n                },\n                {\n                    name: \"self-end\"\n                },\n                {\n                    name: \"self-start\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The items are packed flush to each other toward the center of the of the alignment container.\"\n                },\n                {\n                    name: \"left\"\n                },\n                {\n                    name: \"right\"\n                },\n                {\n                    name: \"baseline\"\n                },\n                {\n                    name: \"first baseline\"\n                },\n                {\n                    name: \"last baseline\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                },\n                {\n                    name: \"save\"\n                },\n                {\n                    name: \"unsave\"\n                }\n            ],\n            \"syntax\": \"auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]\",\n            \"description\": \"Defines the way of justifying a box inside its container along the appropriate axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"align-self\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself.\"\n                },\n                {\n                    name: \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    name: \"flex-end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    name: \"flex-start\",\n                    \"description\": \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                }\n            ],\n            \"syntax\": \"auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\",\n            \"description\": \"Allows the default alignment along the cross axis to be overridden for individual flex items.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"all\",\n            browsers: [\n                \"FF27\",\n                \"S9.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            values: [],\n            \"syntax\": \"initial | inherit | unset | revert\",\n            \"description\": \"Shorthand that resets all properties except 'direction' and 'unicode-bidi'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"alt\",\n            browsers: [\n                \"S9\"\n            ],\n            values: [],\n            \"description\": \"Provides alternative text for assistive technology to replace the generated content of a ::before or ::after element.\",\n            \"restrictions\": [\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"animation\",\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"syntax\": \"<single-animation>#\",\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"timing-function\",\n                \"enum\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"animation-delay\",\n            \"syntax\": \"<time>#\",\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"animation-direction\",\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-direction>#\",\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"animation-duration\",\n            \"syntax\": \"<time>#\",\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"animation-fill-mode\",\n            values: [\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-fill-mode>#\",\n            \"description\": \"Defines what values are applied by the animation outside the time it is executing.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"animation-iteration-count\",\n            values: [\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-iteration-count>#\",\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"animation-name\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"syntax\": \"[ none | <keyframes-name> ]#\",\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"animation-play-state\",\n            values: [\n                {\n                    name: \"paused\"\n                },\n                {\n                    name: \"running\"\n                }\n            ],\n            \"syntax\": \"<single-animation-play-state>#\",\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"animation-timing-function\",\n            \"syntax\": \"<single-timing-function>#\",\n            \"description\": \"Describes how the animation will progress over one cycle of its duration.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"backface-visibility\",\n            values: [\n                {\n                    name: \"hidden\",\n                    \"description\": \"Back side is hidden.\"\n                },\n                {\n                    name: \"visible\",\n                    \"description\": \"Back side is visible.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden\",\n            \"description\": \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"background\",\n            values: [\n                {\n                    name: \"fixed\",\n                    \"description\": \"The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page.\"\n                },\n                {\n                    name: \"local\",\n                    \"description\": \"The background is fixed with regard to the element's contents: if the element has a scrolling mechanism, the background scrolls with the element's contents.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"A value of 'none' counts as an image layer but draws nothing.\"\n                },\n                {\n                    name: \"scroll\",\n                    \"description\": \"The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element's border.)\"\n                }\n            ],\n            \"syntax\": \"[ <bg-layer> , ]* <final-bg-layer>\",\n            \"description\": \"Shorthand property for setting most background properties at the same place in the style sheet.\",\n            \"restrictions\": [\n                \"enum\",\n                \"image\",\n                \"color\",\n                \"position\",\n                \"length\",\n                \"repeat\",\n                \"percentage\",\n                \"box\"\n            ]\n        },\n        {\n            name: \"background-attachment\",\n            values: [\n                {\n                    name: \"fixed\",\n                    \"description\": \"The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page.\"\n                },\n                {\n                    name: \"local\",\n                    \"description\": \"The background is fixed with regard to the element’s contents: if the element has a scrolling mechanism, the background scrolls with the element’s contents.\"\n                },\n                {\n                    name: \"scroll\",\n                    \"description\": \"The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element’s border.)\"\n                }\n            ],\n            \"syntax\": \"<attachment>#\",\n            \"description\": \"Specifies whether the background images are fixed with regard to the viewport ('fixed') or scroll along with the element ('scroll') or its contents ('local').\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"background-blend-mode\",\n            browsers: [\n                \"FF30\",\n                \"S\",\n                \"C35\",\n                \"O22\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"Default attribute which specifies no blending\"\n                },\n                {\n                    name: \"multiply\"\n                },\n                {\n                    name: \"screen\"\n                },\n                {\n                    name: \"overlay\"\n                },\n                {\n                    name: \"darken\"\n                },\n                {\n                    name: \"lighten\"\n                },\n                {\n                    name: \"color-dodge\"\n                },\n                {\n                    name: \"color-burn\"\n                },\n                {\n                    name: \"hard-light\"\n                },\n                {\n                    name: \"soft-light\"\n                },\n                {\n                    name: \"difference\"\n                },\n                {\n                    name: \"exclusion\"\n                },\n                {\n                    name: \"hue\",\n                    browsers: [\n                        \"FF30\",\n                        \"S\",\n                        \"C35\",\n                        \"O22\"\n                    ]\n                },\n                {\n                    name: \"saturation\",\n                    browsers: [\n                        \"FF30\",\n                        \"S\",\n                        \"C35\",\n                        \"O22\"\n                    ]\n                },\n                {\n                    name: \"color\",\n                    browsers: [\n                        \"FF30\",\n                        \"S\",\n                        \"C35\",\n                        \"O22\"\n                    ]\n                },\n                {\n                    name: \"luminosity\",\n                    browsers: [\n                        \"FF30\",\n                        \"S\",\n                        \"C35\",\n                        \"O22\"\n                    ]\n                }\n            ],\n            \"syntax\": \"<blend-mode>#\",\n            \"description\": \"Defines the blending mode of each background layer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"background-clip\",\n            \"syntax\": \"<box>#\",\n            \"description\": \"Determines the background painting area.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"background-color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Sets the background color of an element.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"background-image\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Counts as an image layer but draws nothing.\"\n                }\n            ],\n            \"syntax\": \"<bg-image>#\",\n            \"description\": \"Sets the background image(s) of an element.\",\n            \"restrictions\": [\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"background-origin\",\n            \"syntax\": \"<box>#\",\n            \"description\": \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"background-position\",\n            \"syntax\": \"<bg-position>#\",\n            \"description\": \"Specifies the initial position of the background image(s) (after any resizing) within their corresponding background positioning area.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"background-position-x\",\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Equivalent to '0%' for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Equivalent to '100%' for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"[ center | [ left | right | x-start | x-end ]? <length-percentage>? ]#\",\n            \"description\": \"If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"background-position-y\",\n            values: [\n                {\n                    name: \"bottom\",\n                    \"description\": \"Equivalent to '100%' for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is.\"\n                },\n                {\n                    name: \"top\",\n                    \"description\": \"Equivalent to '0%' for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"[ center | [ top | bottom | y-start | y-end ]? <length-percentage>? ]#\",\n            \"description\": \"If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"background-repeat\",\n            values: [],\n            \"syntax\": \"<repeat-style>#\",\n            \"description\": \"Specifies how background images are tiled after they have been sized and positioned.\",\n            \"restrictions\": [\n                \"repeat\"\n            ]\n        },\n        {\n            name: \"background-size\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                },\n                {\n                    name: \"contain\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                },\n                {\n                    name: \"cover\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                }\n            ],\n            \"syntax\": \"<bg-size>#\",\n            \"description\": \"Specifies the size of the background images.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"behavior\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"IE only. Used to extend behaviors of the browser.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            name: \"block-size\",\n            browsers: [\n                \"FF41\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<'width'>\",\n            \"description\": \"Logical 'width'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"description\": \"Shorthand property for setting border width, style, and color.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-block-end\",\n            browsers: [\n                \"FF41\"\n            ],\n            \"syntax\": \"<'border-width'> || <'border-style'> || <'color'>\",\n            \"description\": \"Logical 'border-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-block-start\",\n            browsers: [\n                \"FF41\"\n            ],\n            \"syntax\": \"<'border-width'> || <'border-style'> || <'color'>\",\n            \"description\": \"Logical 'border-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-block-end-color\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'color'>\",\n            \"description\": \"Logical 'border-bottom-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-block-start-color\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'color'>\",\n            \"description\": \"Logical 'border-top-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-block-end-style\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-style'>\",\n            \"description\": \"Logical 'border-bottom-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-block-start-style\",\n            browsers: [\n                \"FF41\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-style'>\",\n            \"description\": \"Logical 'border-top-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-block-end-width\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-width'>\",\n            \"description\": \"Logical 'border-bottom-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-block-start-width\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-width'>\",\n            \"description\": \"Logical 'border-top-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-bottom\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"description\": \"Shorthand property for setting border width, style and color.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-bottom-color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Sets the color of the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-bottom-left-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"Defines the radii of the bottom left outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border-bottom-right-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"Defines the radii of the bottom right outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border-bottom-style\",\n            \"syntax\": \"<line-style>\",\n            \"description\": \"Sets the style of the bottom border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-bottom-width\",\n            \"syntax\": \"<line-width>\",\n            \"description\": \"Sets the thickness of the bottom border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-collapse\",\n            values: [\n                {\n                    name: \"collapse\",\n                    \"description\": \"Selects the collapsing borders model.\"\n                },\n                {\n                    name: \"separate\",\n                    \"description\": \"Selects the separated borders border model.\"\n                }\n            ],\n            \"syntax\": \"collapse | separate\",\n            \"description\": \"Selects a table's border model.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"border-color\",\n            values: [],\n            \"syntax\": \"<color>{1,4}\",\n            \"description\": \"The color of the border around all four edges of an element.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-image\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Use the border styles.\"\n                },\n                {\n                    name: \"repeat\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    name: \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                },\n                {\n                    name: \"url()\"\n                }\n            ],\n            \"syntax\": \"<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\",\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"url\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"border-image-outset\",\n            \"syntax\": \"[ <length> | <number> ]{1,4}\",\n            \"description\": \"The values specify the amount by which the border image area extends beyond the border box on the top, right, bottom, and left sides respectively. If the fourth value is absent, it is the same as the second. If the third one is also absent, it is the same as the first. If the second one is also absent, it is the same as the first. Numbers represent multiples of the corresponding border-width.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"border-image-repeat\",\n            values: [\n                {\n                    name: \"repeat\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    name: \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                }\n            ],\n            \"syntax\": \"[ stretch | repeat | round | space ]{1,2}\",\n            \"description\": \"Specifies how the images for the sides and the middle part of the border image are scaled and tiled. If the second keyword is absent, it is assumed to be the same as the first.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"border-image-slice\",\n            values: [\n                {\n                    name: \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                }\n            ],\n            \"syntax\": \"<number-percentage>{1,4} && fill?\",\n            \"description\": \"Specifies inward offsets from the top, right, bottom, and left edges of the image, dividing it into nine regions: four corners, four edges and a middle.\",\n            \"restrictions\": [\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border-image-source\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Use the border styles.\"\n                }\n            ],\n            \"syntax\": \"none | <image>\",\n            \"description\": \"Specifies an image to use instead of the border styles given by the 'border-style' properties and as an additional background layer for the element. If the value is 'none' or if the image cannot be displayed, the border styles will be used.\",\n            \"restrictions\": [\n                \"image\"\n            ]\n        },\n        {\n            name: \"border-image-width\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                }\n            ],\n            \"syntax\": \"[ <length-percentage> | <number> | auto ]{1,4}\",\n            \"description\": \"The four values of 'border-image-width' specify offsets that are used to divide the border image area into nine parts. They represent inward distances from the top, right, bottom, and left sides of the area, respectively.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"border-inline-end\",\n            browsers: [\n                \"FF41\"\n            ],\n            \"syntax\": \"<'border-width'> || <'border-style'> || <'color'>\",\n            \"description\": \"Logical 'border-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-inline-start\",\n            browsers: [\n                \"FF41\"\n            ],\n            \"syntax\": \"<'border-width'> || <'border-style'> || <'color'>\",\n            \"description\": \"Logical 'border-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-inline-end-color\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'color'>\",\n            \"description\": \"Logical 'border-right-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-inline-start-color\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'color'>\",\n            \"description\": \"Logical 'border-left-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-inline-end-style\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-style'>\",\n            \"description\": \"Logical 'border-right-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-inline-start-style\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-style'>\",\n            \"description\": \"Logical 'border-left-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-inline-end-width\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-width'>\",\n            \"description\": \"Logical 'border-right-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-inline-start-width\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-width'>\",\n            \"description\": \"Logical 'border-left-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-left\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"description\": \"Shorthand property for setting border width, style and color\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-left-color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Sets the color of the left border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-left-style\",\n            \"syntax\": \"<line-style>\",\n            \"description\": \"Sets the style of the left border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-left-width\",\n            \"syntax\": \"<line-width>\",\n            \"description\": \"Sets the thickness of the left border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-radius\",\n            \"syntax\": \"<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\",\n            \"description\": \"Defines the radii of the outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border-right\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"description\": \"Shorthand property for setting border width, style and color\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-right-color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Sets the color of the right border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-right-style\",\n            \"syntax\": \"<line-style>\",\n            \"description\": \"Sets the style of the right border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-right-width\",\n            \"syntax\": \"<line-width>\",\n            \"description\": \"Sets the thickness of the right border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-spacing\",\n            \"syntax\": \"<length> <length>?\",\n            \"description\": \"The lengths specify the distance that separates adjoining cell borders. If one length is specified, it gives both the horizontal and vertical spacing. If two are specified, the first gives the horizontal spacing and the second the vertical spacing. Lengths may not be negative.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"border-style\",\n            values: [],\n            \"syntax\": \"<line-style>{1,4}\",\n            \"description\": \"The style of the border around edges of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-top\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"description\": \"Shorthand property for setting border width, style and color\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-top-color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Sets the color of the top border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"border-top-left-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"Defines the radii of the top left outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border-top-right-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"Defines the radii of the top right outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"border-top-style\",\n            \"syntax\": \"<line-style>\",\n            \"description\": \"Sets the style of the top border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"border-top-width\",\n            \"syntax\": \"<line-width>\",\n            \"description\": \"Sets the thickness of the top border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"border-width\",\n            values: [],\n            \"syntax\": \"<line-width>{1,4}\",\n            \"description\": \"Shorthand that sets the four 'border-*-width' properties. If it has four values, they set top, right, bottom and left in that order. If left is missing, it is the same as right; if bottom is missing, it is the same as top; if right is missing, it is the same as top.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"bottom\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Specifies how far an absolutely positioned box's bottom margin edge is offset above the bottom edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"box-decoration-break\",\n            browsers: [\n                \"FF32\",\n                \"S6.1\",\n                \"C22\",\n                \"O15\"\n            ],\n            values: [\n                {\n                    name: \"clone\"\n                },\n                {\n                    name: \"slice\"\n                }\n            ],\n            \"syntax\": \"slice | clone\",\n            \"description\": \"Specifies whether individual boxes are treated as broken pieces of one continuous box, or whether each box is individually wrapped with the border and padding.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"box-shadow\",\n            values: [\n                {\n                    name: \"inset\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No shadow.\"\n                }\n            ],\n            \"syntax\": \"none | <shadow>#\",\n            \"description\": \"Attaches one or more drop-shadows to the box. The property is a comma-separated list of shadows, each specified by 2-4 length values, an optional color, and an optional 'inset' keyword. Omitted lengths are 0; omitted colors are a user agent chosen color.\",\n            \"restrictions\": [\n                \"length\",\n                \"color\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"box-sizing\",\n            values: [\n                {\n                    name: \"border-box\"\n                },\n                {\n                    name: \"content-box\"\n                }\n            ],\n            \"syntax\": \"content-box | border-box\",\n            \"description\": \"Specifies the behavior of the 'width' and 'height' properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"break-after\",\n            browsers: [\n                \"E12\",\n                \"S10\",\n                \"C50\",\n                \"IE10\",\n                \"O37\"\n            ],\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the principal box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a break before/after the principal box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the principal box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the principal box.\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"Always force a column break before/after the principal box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"page\",\n                    \"description\": \"Always force a page break before/after the principal box.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\",\n            \"description\": \"Describes the page/column/region break behavior after the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"break-before\",\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the principal box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a break before/after the principal box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the principal box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the principal box.\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"Always force a column break before/after the principal box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"page\",\n                    \"description\": \"Always force a page break before/after the principal box.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\",\n            \"description\": \"Describes the page/column/region break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"break-inside\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Impose no additional breaking constraints within the box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid breaks within the box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break within the box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break within the box.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid | avoid-page | avoid-column | avoid-region\",\n            \"description\": \"Describes the page/column/region break behavior inside the principal box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"caption-side\",\n            values: [\n                {\n                    name: \"bottom\",\n                    \"description\": \"Positions the caption box below the table box.\"\n                },\n                {\n                    name: \"top\",\n                    \"description\": \"Positions the caption box above the table box.\"\n                }\n            ],\n            \"syntax\": \"top | bottom | block-start | block-end | inline-start | inline-end\",\n            \"description\": \"Specifies the position of the caption box with respect to the table box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"caret-color\",\n            browsers: [\n                \"FF53\",\n                \"S11.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent selects an appropriate color for the caret. This is generally currentcolor, but the user agent may choose a different color to ensure good visibility and contrast with the surrounding content, taking into account the value of currentcolor, the background, shadows, and other factors.\"\n                }\n            ],\n            \"syntax\": \"auto | <color>\",\n            \"description\": \"Controls the color of the text insertion indicator.\",\n            \"restrictions\": [\n                \"color\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"clear\",\n            values: [\n                {\n                    name: \"both\",\n                    \"description\": \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating and left-floating boxes that resulted from elements earlier in the source document.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any left-floating boxes that resulted from elements earlier in the source document.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No constraint on the box's position with respect to floats.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating boxes that resulted from elements earlier in the source document.\"\n                }\n            ],\n            \"syntax\": \"none | left | right | both | inline-start | inline-end\",\n            \"description\": \"Indicates which sides of an element's box(es) may not be adjacent to an earlier floating box. The 'clear' property does not consider floats inside the element itself or in other block formatting contexts.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"clip\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The element does not clip.\"\n                },\n                {\n                    name: \"rect()\"\n                }\n            ],\n            \"syntax\": \"<shape> | auto\",\n            \"description\": \"Deprecated. Use the 'clip-path' property when support allows. Defines the visible portion of an element’s box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"clip-path\",\n            browsers: [\n                \"FF3.5\",\n                \"C55\",\n                \"O42\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No clipping path gets created.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"References a <clipPath> element to create a clipping path.\"\n                }\n            ],\n            \"syntax\": \"<clip-source> | [ <basic-shape> || <geometry-box> ] | none\",\n            \"description\": \"Specifies a clipping path where everything inside the path is visible and everything outside is clipped out.\",\n            \"restrictions\": [\n                \"url\",\n                \"shape\",\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"clip-rule\",\n            browsers: [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            values: [\n                {\n                    name: \"evenodd\"\n                },\n                {\n                    name: \"nonzero\"\n                }\n            ],\n            \"description\": \"Indicates the algorithm which is to be used to determine what parts of the canvas are included inside the shape.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Color of an element's text\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"color-interpolation-filters\",\n            browsers: [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Color operations are not required to occur in a particular color space.\"\n                },\n                {\n                    name: \"linearRGB\"\n                },\n                {\n                    name: \"sRGB\"\n                }\n            ],\n            \"description\": \"Specifies the color space for imaging operations performed via filter effects.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"column-count\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Determines the number of columns by the 'column-width' property and the element width.\"\n                }\n            ],\n            \"syntax\": \"<integer> | auto\",\n            \"description\": \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n            \"restrictions\": [\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"column-fill\",\n            browsers: [\n                \"E12\",\n                \"FF52\",\n                \"C\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Fills columns sequentially.\"\n                },\n                {\n                    name: \"balance\"\n                }\n            ],\n            \"syntax\": \"auto | balance | balance-all\",\n            \"description\": \"In continuous media, this property will only be consulted if the length of columns has been constrained. Otherwise, columns will automatically be balanced.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"column-gap\",\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"User agent specific and typically equivalent to 1em.\"\n                }\n            ],\n            \"syntax\": \"normal | <length-percentage>\",\n            \"description\": \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"column-rule\",\n            \"syntax\": \"<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\",\n            \"description\": \"Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"column-rule-color\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Sets the color of the column rule\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"column-rule-style\",\n            \"syntax\": \"<'border-style'>\",\n            \"description\": \"Sets the style of the rule between columns of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"column-rule-width\",\n            \"syntax\": \"<'border-width'>\",\n            \"description\": \"Sets the width of the rule between columns. Negative values are not allowed.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"columns\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<'column-width'> || <'column-count'>\",\n            \"description\": \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n            \"restrictions\": [\n                \"length\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"column-span\",\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The element does not span multiple columns.\"\n                }\n            ],\n            \"syntax\": \"none | all\",\n            \"description\": \"Describes the page/column break behavior after the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"column-width\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<length> | auto\",\n            \"description\": \"Describes the width of columns in multicol elements.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"contain\",\n            browsers: [\n                \"FF\",\n                \"C52\",\n                \"O40\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that the property has no effect.\"\n                },\n                {\n                    name: \"strict\",\n                    \"description\": \"Turns on all forms of containment for the element.\"\n                },\n                {\n                    name: \"content\",\n                    \"description\": \"All containment rules except size are applied to the element.\"\n                },\n                {\n                    name: \"size\"\n                },\n                {\n                    name: \"layout\"\n                },\n                {\n                    name: \"style\",\n                    \"description\": \"Turns on style containment for the element.\"\n                },\n                {\n                    name: \"paint\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"none | strict | content | [ size || layout || style || paint ]\",\n            \"description\": \"Indicates that an element and its contents are, as much as possible, independent of the rest of the document tree.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"content\",\n            values: [\n                {\n                    name: \"attr()\"\n                },\n                {\n                    name: \"counter(name)\"\n                },\n                {\n                    name: \"icon\",\n                    \"description\": \"The (pseudo-)element is replaced in its entirety by the resource referenced by its 'icon' property, and treated as a replaced element.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"On elements, this inhibits the children of the element from being rendered as children of this element, as if the element was empty. On pseudo-elements it causes the pseudo-element to have no content.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"See http://www.w3.org/TR/css3-content/#content for computation rules.\"\n                },\n                {\n                    name: \"url()\"\n                }\n            ],\n            \"syntax\": \"normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?\",\n            \"description\": \"Determines which page-based occurrence of a given element is applied to a counter or string value.\",\n            \"restrictions\": [\n                \"string\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"counter-increment\",\n            browsers: [\n                \"FF1\",\n                \"S3\",\n                \"C2\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"This element does not alter the value of any counters.\"\n                }\n            ],\n            \"syntax\": \"[ <custom-ident> <integer>? ]+ | none\",\n            \"description\": \"Manipulate the value of existing counters.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"counter-reset\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The counter is not modified.\"\n                }\n            ],\n            \"syntax\": \"[ <custom-ident> <integer>? ]+ | none\",\n            \"description\": \"Property accepts one or more names of counters (identifiers), each one optionally followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"cursor\",\n            values: [\n                {\n                    name: \"alias\"\n                },\n                {\n                    name: \"all-scroll\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"The UA determines the cursor to display based on the current context.\"\n                },\n                {\n                    name: \"cell\"\n                },\n                {\n                    name: \"col-resize\"\n                },\n                {\n                    name: \"context-menu\"\n                },\n                {\n                    name: \"copy\"\n                },\n                {\n                    name: \"crosshair\"\n                },\n                {\n                    name: \"default\",\n                    \"description\": \"The platform-dependent default cursor. Often rendered as an arrow.\"\n                },\n                {\n                    name: \"e-resize\"\n                },\n                {\n                    name: \"ew-resize\"\n                },\n                {\n                    name: \"grab\"\n                },\n                {\n                    name: \"grabbing\"\n                },\n                {\n                    name: \"help\"\n                },\n                {\n                    name: \"move\"\n                },\n                {\n                    name: \"-moz-grab\"\n                },\n                {\n                    name: \"-moz-grabbing\"\n                },\n                {\n                    name: \"-moz-zoom-in\"\n                },\n                {\n                    name: \"-moz-zoom-out\"\n                },\n                {\n                    name: \"ne-resize\"\n                },\n                {\n                    name: \"nesw-resize\"\n                },\n                {\n                    name: \"no-drop\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No cursor is rendered for the element.\"\n                },\n                {\n                    name: \"not-allowed\"\n                },\n                {\n                    name: \"n-resize\"\n                },\n                {\n                    name: \"ns-resize\"\n                },\n                {\n                    name: \"nw-resize\"\n                },\n                {\n                    name: \"nwse-resize\"\n                },\n                {\n                    name: \"pointer\"\n                },\n                {\n                    name: \"progress\"\n                },\n                {\n                    name: \"row-resize\"\n                },\n                {\n                    name: \"se-resize\"\n                },\n                {\n                    name: \"s-resize\"\n                },\n                {\n                    name: \"sw-resize\"\n                },\n                {\n                    name: \"text\",\n                    \"description\": \"Indicates text that may be selected. Often rendered as a vertical I-beam.\"\n                },\n                {\n                    name: \"vertical-text\"\n                },\n                {\n                    name: \"wait\"\n                },\n                {\n                    name: \"-webkit-grab\"\n                },\n                {\n                    name: \"-webkit-grabbing\"\n                },\n                {\n                    name: \"-webkit-zoom-in\"\n                },\n                {\n                    name: \"-webkit-zoom-out\"\n                },\n                {\n                    name: \"w-resize\"\n                },\n                {\n                    name: \"zoom-in\"\n                },\n                {\n                    name: \"zoom-out\"\n                }\n            ],\n            \"syntax\": \"[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]\",\n            \"description\": \"Allows control over cursor appearance in an element\",\n            \"restrictions\": [\n                \"url\",\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"direction\",\n            values: [\n                {\n                    name: \"ltr\"\n                },\n                {\n                    name: \"rtl\"\n                }\n            ],\n            \"syntax\": \"ltr | rtl\",\n            \"description\": \"Specifies the inline base direction or directionality of any bidi paragraph, embedding, isolate, or override established by the box. Note: for HTML content use the 'dir' attribute and 'bdo' element rather than this property.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"display\",\n            values: [\n                {\n                    name: \"block\"\n                },\n                {\n                    name: \"contents\",\n                    \"description\": \"The element itself does not generate any boxes, but its children and pseudo-elements still generate boxes as normal.\"\n                },\n                {\n                    name: \"flex\"\n                },\n                {\n                    name: \"flexbox\"\n                },\n                {\n                    name: \"flow-root\"\n                },\n                {\n                    name: \"grid\"\n                },\n                {\n                    name: \"inline\",\n                    \"description\": \"The element generates an inline-level box.\"\n                },\n                {\n                    name: \"inline-block\"\n                },\n                {\n                    name: \"inline-flex\"\n                },\n                {\n                    name: \"inline-flexbox\"\n                },\n                {\n                    name: \"inline-table\"\n                },\n                {\n                    name: \"list-item\"\n                },\n                {\n                    name: \"-moz-box\"\n                },\n                {\n                    name: \"-moz-deck\"\n                },\n                {\n                    name: \"-moz-grid\"\n                },\n                {\n                    name: \"-moz-grid-group\"\n                },\n                {\n                    name: \"-moz-grid-line\"\n                },\n                {\n                    name: \"-moz-groupbox\"\n                },\n                {\n                    name: \"-moz-inline-box\"\n                },\n                {\n                    name: \"-moz-inline-grid\"\n                },\n                {\n                    name: \"-moz-inline-stack\"\n                },\n                {\n                    name: \"-moz-marker\"\n                },\n                {\n                    name: \"-moz-popup\"\n                },\n                {\n                    name: \"-moz-stack\"\n                },\n                {\n                    name: \"-ms-flexbox\"\n                },\n                {\n                    name: \"-ms-grid\"\n                },\n                {\n                    name: \"-ms-inline-flexbox\"\n                },\n                {\n                    name: \"-ms-inline-grid\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The element and its descendants generates no boxes.\"\n                },\n                {\n                    name: \"ruby\",\n                    \"description\": \"The element generates a principal ruby container box, and establishes a ruby formatting context.\"\n                },\n                {\n                    name: \"ruby-base\"\n                },\n                {\n                    name: \"ruby-base-container\"\n                },\n                {\n                    name: \"ruby-text\"\n                },\n                {\n                    name: \"ruby-text-container\"\n                },\n                {\n                    name: \"run-in\"\n                },\n                {\n                    name: \"table\"\n                },\n                {\n                    name: \"table-caption\"\n                },\n                {\n                    name: \"table-cell\"\n                },\n                {\n                    name: \"table-column\"\n                },\n                {\n                    name: \"table-column-group\"\n                },\n                {\n                    name: \"table-footer-group\"\n                },\n                {\n                    name: \"table-header-group\"\n                },\n                {\n                    name: \"table-row\"\n                },\n                {\n                    name: \"table-row-group\"\n                },\n                {\n                    name: \"-webkit-box\"\n                },\n                {\n                    name: \"-webkit-flex\"\n                },\n                {\n                    name: \"-webkit-inline-box\"\n                },\n                {\n                    name: \"-webkit-inline-flex\"\n                }\n            ],\n            \"syntax\": \"[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>\",\n            \"description\": \"In combination with 'float' and 'position', determines the type of box or boxes that are generated for an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"empty-cells\",\n            values: [\n                {\n                    name: \"hide\"\n                },\n                {\n                    name: \"-moz-show-background\"\n                },\n                {\n                    name: \"show\"\n                }\n            ],\n            \"syntax\": \"show | hide\",\n            \"description\": \"In the separated borders model, this property controls the rendering of borders and backgrounds around cells that have no visible content.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"enable-background\",\n            values: [\n                {\n                    name: \"accumulate\"\n                },\n                {\n                    name: \"new\"\n                }\n            ],\n            \"description\": \"Deprecated. Use 'isolation' property instead when support allows. Specifies how the accumulation of the background image is managed.\",\n            \"restrictions\": [\n                \"integer\",\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"fallback\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"<counter-style-name>\",\n            \"description\": \"@counter-style descriptor. Specifies a fallback counter style to be used when the current counter style can’t create a representation for a given counter value.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"fill\",\n            values: [\n                {\n                    name: \"url()\",\n                    \"description\": \"A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No paint is applied in this layer.\"\n                }\n            ],\n            \"description\": \"Paints the interior of the given graphical element.\",\n            \"restrictions\": [\n                \"color\",\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"fill-opacity\",\n            \"description\": \"Specifies the opacity of the painting operation used to paint the interior the current object.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            name: \"fill-rule\",\n            values: [\n                {\n                    name: \"evenodd\"\n                },\n                {\n                    name: \"nonzero\"\n                }\n            ],\n            \"description\": \"Indicates the algorithm (or winding rule) which is to be used to determine what parts of the canvas are included inside the shape.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"filter\",\n            browsers: [\n                \"E12\",\n                \"FF35\",\n                \"S6\",\n                \"C53\",\n                \"O40\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No filter effects are applied.\"\n                },\n                {\n                    name: \"blur()\"\n                },\n                {\n                    name: \"brightness()\"\n                },\n                {\n                    name: \"contrast()\"\n                },\n                {\n                    name: \"drop-shadow()\"\n                },\n                {\n                    name: \"grayscale()\"\n                },\n                {\n                    name: \"hue-rotate()\"\n                },\n                {\n                    name: \"invert()\"\n                },\n                {\n                    name: \"opacity()\"\n                },\n                {\n                    name: \"saturate()\"\n                },\n                {\n                    name: \"sepia()\"\n                },\n                {\n                    name: \"url()\",\n                    browsers: [\n                        \"E12\",\n                        \"FF35\",\n                        \"S6\",\n                        \"C53\",\n                        \"O40\"\n                    ],\n                    \"description\": \"A filter reference to a <filter> element.\"\n                }\n            ],\n            \"syntax\": \"none | <filter-function-list>\",\n            \"description\": \"Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"flex\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                },\n                {\n                    name: \"content\",\n                    \"description\": \"Indicates automatic sizing, based on the flex item’s content.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Expands to '0 0 auto'.\"\n                }\n            ],\n            \"syntax\": \"none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\",\n            \"description\": \"Specifies the components of a flexible length: the flex grow factor and flex shrink factor, and the flex basis.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"flex-basis\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                },\n                {\n                    name: \"content\",\n                    \"description\": \"Indicates automatic sizing, based on the flex item’s content.\"\n                }\n            ],\n            \"syntax\": \"content | <'width'>\",\n            \"description\": \"Sets the flex basis.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"flex-direction\",\n            values: [\n                {\n                    name: \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    name: \"column-reverse\"\n                },\n                {\n                    name: \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    name: \"row-reverse\"\n                }\n            ],\n            \"syntax\": \"row | row-reverse | column | column-reverse\",\n            \"description\": \"Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"flex-flow\",\n            values: [\n                {\n                    name: \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    name: \"column-reverse\"\n                },\n                {\n                    name: \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    name: \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    name: \"row-reverse\"\n                },\n                {\n                    name: \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    name: \"wrap-reverse\"\n                }\n            ],\n            \"syntax\": \"<'flex-direction'> || <'flex-wrap'>\",\n            \"description\": \"Specifies how flexbox items are placed in the flexbox.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"flex-grow\",\n            \"syntax\": \"<number>\",\n            \"description\": \"Sets the flex grow factor. Negative numbers are invalid.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"flex-shrink\",\n            \"syntax\": \"<number>\",\n            \"description\": \"Sets the flex shrink factor. Negative numbers are invalid.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"flex-wrap\",\n            values: [\n                {\n                    name: \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    name: \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    name: \"wrap-reverse\"\n                }\n            ],\n            \"syntax\": \"nowrap | wrap | wrap-reverse\",\n            \"description\": \"Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"float\",\n            values: [\n                {\n                    name: \"inline-end\"\n                },\n                {\n                    name: \"inline-start\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The element generates a block box that is floated to the left. Content flows on the right side of the box, starting at the top (subject to the 'clear' property).\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The box is not floated.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Similar to 'left', except the box is floated to the right, and content flows on the left side of the box, starting at the top.\"\n                }\n            ],\n            \"syntax\": \"left | right | none | inline-start | inline-end\",\n            \"description\": \"Specifies how a box should be floated. It may be set for any element, but only applies to elements that generate boxes that are not absolutely positioned.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"flood-color\",\n            browsers: [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"description\": \"Indicates what color to use to flood the current filter primitive subregion.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"flood-opacity\",\n            browsers: [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"description\": \"Indicates what opacity to use to flood the current filter primitive subregion.\",\n            \"restrictions\": [\n                \"number(0-1)\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"font\",\n            values: [\n                {\n                    name: \"100\"\n                },\n                {\n                    name: \"200\"\n                },\n                {\n                    name: \"300\"\n                },\n                {\n                    name: \"400\"\n                },\n                {\n                    name: \"500\"\n                },\n                {\n                    name: \"600\"\n                },\n                {\n                    name: \"700\"\n                },\n                {\n                    name: \"800\"\n                },\n                {\n                    name: \"900\"\n                },\n                {\n                    name: \"bold\"\n                },\n                {\n                    name: \"bolder\"\n                },\n                {\n                    name: \"caption\"\n                },\n                {\n                    name: \"icon\",\n                    \"description\": \"The font used to label icons.\"\n                },\n                {\n                    name: \"italic\",\n                    \"description\": \"Selects a font that is labeled 'italic', or, if that is not available, one labeled 'oblique'.\"\n                },\n                {\n                    name: \"large\"\n                },\n                {\n                    name: \"larger\"\n                },\n                {\n                    name: \"lighter\"\n                },\n                {\n                    name: \"medium\"\n                },\n                {\n                    name: \"menu\"\n                },\n                {\n                    name: \"message-box\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Specifies a face that is not labeled as a small-caps font.\"\n                },\n                {\n                    name: \"oblique\",\n                    \"description\": \"Selects a font that is labeled 'oblique'.\"\n                },\n                {\n                    name: \"small\"\n                },\n                {\n                    name: \"small-caps\",\n                    \"description\": \"Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font.\"\n                },\n                {\n                    name: \"small-caption\"\n                },\n                {\n                    name: \"smaller\"\n                },\n                {\n                    name: \"status-bar\"\n                },\n                {\n                    name: \"x-large\"\n                },\n                {\n                    name: \"x-small\"\n                },\n                {\n                    name: \"xx-large\"\n                },\n                {\n                    name: \"xx-small\"\n                }\n            ],\n            \"syntax\": \"[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar\",\n            \"description\": \"Shorthand property for setting 'font-style', 'font-variant', 'font-weight', 'font-size', 'line-height', and 'font-family', at the same place in the style sheet. The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts.\",\n            \"restrictions\": [\n                \"font\"\n            ]\n        },\n        {\n            name: \"font-family\",\n            values: [\n                {\n                    name: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\"\n                },\n                {\n                    name: \"Arial, Helvetica, sans-serif\"\n                },\n                {\n                    name: \"Cambria, Cochin, Georgia, Times, 'Times New Roman', serif\"\n                },\n                {\n                    name: \"'Courier New', Courier, monospace\"\n                },\n                {\n                    name: \"cursive\"\n                },\n                {\n                    name: \"fantasy\"\n                },\n                {\n                    name: \"'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\"\n                },\n                {\n                    name: \"Georgia, 'Times New Roman', Times, serif\"\n                },\n                {\n                    name: \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\"\n                },\n                {\n                    name: \"Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif\"\n                },\n                {\n                    name: \"'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\"\n                },\n                {\n                    name: \"monospace\"\n                },\n                {\n                    name: \"sans-serif\"\n                },\n                {\n                    name: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n                },\n                {\n                    name: \"serif\"\n                },\n                {\n                    name: \"'Times New Roman', Times, serif\"\n                },\n                {\n                    name: \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\"\n                },\n                {\n                    name: \"Verdana, Geneva, Tahoma, sans-serif\"\n                }\n            ],\n            \"syntax\": \"<family-name>\",\n            \"description\": \"Specifies a prioritized list of font family names or generic family names. A user agent iterates through the list of family names until it matches an available font that contains a glyph for the character to be rendered.\",\n            \"restrictions\": [\n                \"font\"\n            ]\n        },\n        {\n            name: \"font-feature-settings\",\n            values: [\n                {\n                    name: \"\\\"aalt\\\"\"\n                },\n                {\n                    name: \"\\\"abvf\\\"\"\n                },\n                {\n                    name: \"\\\"abvm\\\"\"\n                },\n                {\n                    name: \"\\\"abvs\\\"\"\n                },\n                {\n                    name: \"\\\"afrc\\\"\"\n                },\n                {\n                    name: \"\\\"akhn\\\"\"\n                },\n                {\n                    name: \"\\\"blwf\\\"\"\n                },\n                {\n                    name: \"\\\"blwm\\\"\"\n                },\n                {\n                    name: \"\\\"blws\\\"\"\n                },\n                {\n                    name: \"\\\"calt\\\"\"\n                },\n                {\n                    name: \"\\\"case\\\"\"\n                },\n                {\n                    name: \"\\\"ccmp\\\"\"\n                },\n                {\n                    name: \"\\\"cfar\\\"\"\n                },\n                {\n                    name: \"\\\"cjct\\\"\"\n                },\n                {\n                    name: \"\\\"clig\\\"\"\n                },\n                {\n                    name: \"\\\"cpct\\\"\"\n                },\n                {\n                    name: \"\\\"cpsp\\\"\"\n                },\n                {\n                    name: \"\\\"cswh\\\"\"\n                },\n                {\n                    name: \"\\\"curs\\\"\"\n                },\n                {\n                    name: \"\\\"c2pc\\\"\"\n                },\n                {\n                    name: \"\\\"c2cs\\\"\",\n                    \"description\": \"Small Capitals From Capitals. Applies only to bicameral scripts.\"\n                },\n                {\n                    name: \"\\\"dist\\\"\"\n                },\n                {\n                    name: \"\\\"dlig\\\"\",\n                    \"description\": \"Discretionary ligatures.\"\n                },\n                {\n                    name: \"\\\"dnom\\\"\"\n                },\n                {\n                    name: \"\\\"dtls\\\"\"\n                },\n                {\n                    name: \"\\\"expt\\\"\"\n                },\n                {\n                    name: \"\\\"falt\\\"\"\n                },\n                {\n                    name: \"\\\"fin2\\\"\"\n                },\n                {\n                    name: \"\\\"fin3\\\"\"\n                },\n                {\n                    name: \"\\\"fina\\\"\"\n                },\n                {\n                    name: \"\\\"flac\\\"\"\n                },\n                {\n                    name: \"\\\"frac\\\"\"\n                },\n                {\n                    name: \"\\\"fwid\\\"\"\n                },\n                {\n                    name: \"\\\"half\\\"\"\n                },\n                {\n                    name: \"\\\"haln\\\"\"\n                },\n                {\n                    name: \"\\\"halt\\\"\"\n                },\n                {\n                    name: \"\\\"hist\\\"\"\n                },\n                {\n                    name: \"\\\"hkna\\\"\"\n                },\n                {\n                    name: \"\\\"hlig\\\"\"\n                },\n                {\n                    name: \"\\\"hngl\\\"\"\n                },\n                {\n                    name: \"\\\"hojo\\\"\"\n                },\n                {\n                    name: \"\\\"hwid\\\"\"\n                },\n                {\n                    name: \"\\\"init\\\"\"\n                },\n                {\n                    name: \"\\\"isol\\\"\"\n                },\n                {\n                    name: \"\\\"ital\\\"\"\n                },\n                {\n                    name: \"\\\"jalt\\\"\"\n                },\n                {\n                    name: \"\\\"jp78\\\"\"\n                },\n                {\n                    name: \"\\\"jp83\\\"\"\n                },\n                {\n                    name: \"\\\"jp90\\\"\"\n                },\n                {\n                    name: \"\\\"jp04\\\"\"\n                },\n                {\n                    name: \"\\\"kern\\\"\",\n                    \"description\": \"Kerning.\"\n                },\n                {\n                    name: \"\\\"lfbd\\\"\"\n                },\n                {\n                    name: \"\\\"liga\\\"\",\n                    \"description\": \"Standard Ligatures.\"\n                },\n                {\n                    name: \"\\\"ljmo\\\"\"\n                },\n                {\n                    name: \"\\\"lnum\\\"\",\n                    \"description\": \"Lining Figures.\"\n                },\n                {\n                    name: \"\\\"locl\\\"\"\n                },\n                {\n                    name: \"\\\"ltra\\\"\"\n                },\n                {\n                    name: \"\\\"ltrm\\\"\"\n                },\n                {\n                    name: \"\\\"mark\\\"\"\n                },\n                {\n                    name: \"\\\"med2\\\"\"\n                },\n                {\n                    name: \"\\\"medi\\\"\"\n                },\n                {\n                    name: \"\\\"mgrk\\\"\"\n                },\n                {\n                    name: \"\\\"mkmk\\\"\"\n                },\n                {\n                    name: \"\\\"nalt\\\"\"\n                },\n                {\n                    name: \"\\\"nlck\\\"\"\n                },\n                {\n                    name: \"\\\"nukt\\\"\"\n                },\n                {\n                    name: \"\\\"numr\\\"\"\n                },\n                {\n                    name: \"\\\"onum\\\"\",\n                    \"description\": \"Oldstyle Figures.\"\n                },\n                {\n                    name: \"\\\"opbd\\\"\"\n                },\n                {\n                    name: \"\\\"ordn\\\"\"\n                },\n                {\n                    name: \"\\\"ornm\\\"\"\n                },\n                {\n                    name: \"\\\"palt\\\"\"\n                },\n                {\n                    name: \"\\\"pcap\\\"\"\n                },\n                {\n                    name: \"\\\"pkna\\\"\"\n                },\n                {\n                    name: \"\\\"pnum\\\"\"\n                },\n                {\n                    name: \"\\\"pref\\\"\"\n                },\n                {\n                    name: \"\\\"pres\\\"\"\n                },\n                {\n                    name: \"\\\"pstf\\\"\"\n                },\n                {\n                    name: \"\\\"psts\\\"\"\n                },\n                {\n                    name: \"\\\"pwid\\\"\"\n                },\n                {\n                    name: \"\\\"qwid\\\"\"\n                },\n                {\n                    name: \"\\\"rand\\\"\"\n                },\n                {\n                    name: \"\\\"rclt\\\"\"\n                },\n                {\n                    name: \"\\\"rlig\\\"\"\n                },\n                {\n                    name: \"\\\"rkrf\\\"\"\n                },\n                {\n                    name: \"\\\"rphf\\\"\"\n                },\n                {\n                    name: \"\\\"rtbd\\\"\"\n                },\n                {\n                    name: \"\\\"rtla\\\"\"\n                },\n                {\n                    name: \"\\\"rtlm\\\"\"\n                },\n                {\n                    name: \"\\\"ruby\\\"\"\n                },\n                {\n                    name: \"\\\"salt\\\"\"\n                },\n                {\n                    name: \"\\\"sinf\\\"\"\n                },\n                {\n                    name: \"\\\"size\\\"\"\n                },\n                {\n                    name: \"\\\"smcp\\\"\",\n                    \"description\": \"Small Capitals. Applies only to bicameral scripts.\"\n                },\n                {\n                    name: \"\\\"smpl\\\"\"\n                },\n                {\n                    name: \"\\\"ssty\\\"\"\n                },\n                {\n                    name: \"\\\"stch\\\"\"\n                },\n                {\n                    name: \"\\\"subs\\\"\"\n                },\n                {\n                    name: \"\\\"sups\\\"\"\n                },\n                {\n                    name: \"\\\"swsh\\\"\",\n                    \"description\": \"Swash. Does not apply to ideographic scripts.\"\n                },\n                {\n                    name: \"\\\"titl\\\"\"\n                },\n                {\n                    name: \"\\\"tjmo\\\"\"\n                },\n                {\n                    name: \"\\\"tnam\\\"\"\n                },\n                {\n                    name: \"\\\"tnum\\\"\",\n                    \"description\": \"Tabular Figures.\"\n                },\n                {\n                    name: \"\\\"trad\\\"\"\n                },\n                {\n                    name: \"\\\"twid\\\"\"\n                },\n                {\n                    name: \"\\\"unic\\\"\"\n                },\n                {\n                    name: \"\\\"valt\\\"\"\n                },\n                {\n                    name: \"\\\"vatu\\\"\"\n                },\n                {\n                    name: \"\\\"vert\\\"\"\n                },\n                {\n                    name: \"\\\"vhal\\\"\"\n                },\n                {\n                    name: \"\\\"vjmo\\\"\"\n                },\n                {\n                    name: \"\\\"vkna\\\"\"\n                },\n                {\n                    name: \"\\\"vkrn\\\"\"\n                },\n                {\n                    name: \"\\\"vpal\\\"\"\n                },\n                {\n                    name: \"\\\"vrt2\\\"\"\n                },\n                {\n                    name: \"\\\"zero\\\"\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"No change in glyph substitution or positioning occurs.\"\n                },\n                {\n                    name: \"off\",\n                    \"description\": \"Disable feature.\"\n                },\n                {\n                    name: \"on\",\n                    \"description\": \"Enable feature.\"\n                }\n            ],\n            \"syntax\": \"normal | <feature-tag-value>#\",\n            \"description\": \"Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n            \"restrictions\": [\n                \"string\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"font-kerning\",\n            browsers: [\n                \"FF32\",\n                \"S7\",\n                \"C32\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Specifies that kerning is applied at the discretion of the user agent.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Specifies that kerning is not applied.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Specifies that kerning is applied.\"\n                }\n            ],\n            \"syntax\": \"auto | normal | none\",\n            \"description\": \"Kerning is the contextual adjustment of inter-glyph spacing. This property controls metric kerning, kerning that utilizes adjustment data contained in the font.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-language-override\",\n            browsers: [\n                \"FF34\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"Implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.\"\n                }\n            ],\n            \"syntax\": \"normal | <string>\",\n            \"description\": \"The value of 'normal' implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            name: \"font-size\",\n            values: [\n                {\n                    name: \"large\"\n                },\n                {\n                    name: \"larger\"\n                },\n                {\n                    name: \"medium\"\n                },\n                {\n                    name: \"small\"\n                },\n                {\n                    name: \"smaller\"\n                },\n                {\n                    name: \"x-large\"\n                },\n                {\n                    name: \"x-small\"\n                },\n                {\n                    name: \"xx-large\"\n                },\n                {\n                    name: \"xx-small\"\n                }\n            ],\n            \"syntax\": \"<absolute-size> | <relative-size> | <length-percentage>\",\n            \"description\": \"Indicates the desired height of glyphs from the font. For scalable fonts, the font-size is a scale factor applied to the EM unit of the font. (Note that certain glyphs may bleed outside their EM box.) For non-scalable fonts, the font-size is converted into absolute units and matched against the declared font-size of the font, using the same absolute coordinate space for both of the matched values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"font-size-adjust\",\n            browsers: [\n                \"FF40\",\n                \"C43\",\n                \"O30\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Do not preserve the font’s x-height.\"\n                }\n            ],\n            \"syntax\": \"none | <number>\",\n            \"description\": \"Preserves the readability of text when font fallback occurs by adjusting the font-size so that the x-height is the same irregardless of the font used.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"font-stretch\",\n            values: [\n                {\n                    name: \"condensed\"\n                },\n                {\n                    name: \"expanded\"\n                },\n                {\n                    name: \"extra-condensed\"\n                },\n                {\n                    name: \"extra-expanded\"\n                },\n                {\n                    name: \"narrower\"\n                },\n                {\n                    name: \"normal\"\n                },\n                {\n                    name: \"semi-condensed\"\n                },\n                {\n                    name: \"semi-expanded\"\n                },\n                {\n                    name: \"ultra-condensed\"\n                },\n                {\n                    name: \"ultra-expanded\"\n                },\n                {\n                    name: \"wider\"\n                }\n            ],\n            \"syntax\": \"<font-stretch-absolute>{1,2}\",\n            \"description\": \"Selects a normal, condensed, or expanded face from a font family.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-style\",\n            values: [\n                {\n                    name: \"italic\",\n                    \"description\": \"Selects a font that is labeled as an 'italic' face, or an 'oblique' face if one is not\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Selects a face that is classified as 'normal'.\"\n                },\n                {\n                    name: \"oblique\",\n                    \"description\": \"Selects a font that is labeled as an 'oblique' face, or an 'italic' face if one is not.\"\n                }\n            ],\n            \"syntax\": \"normal | italic | oblique <angle>{0,2}\",\n            \"description\": \"Allows italic or oblique faces to be selected. Italic forms are generally cursive in nature while oblique faces are typically sloped versions of the regular face.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-synthesis\",\n            browsers: [\n                \"FF34\",\n                \"S9\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Disallow all synthetic faces.\"\n                },\n                {\n                    name: \"style\",\n                    \"description\": \"Allow synthetic italic faces.\"\n                },\n                {\n                    name: \"weight\"\n                }\n            ],\n            \"syntax\": \"none | [ weight || style ]\",\n            \"description\": \"Controls whether user agents are allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant\",\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"Specifies a face that is not labeled as a small-caps font.\"\n                },\n                {\n                    name: \"small-caps\",\n                    \"description\": \"Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font.\"\n                }\n            ],\n            \"syntax\": \"normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]\",\n            \"description\": \"Specifies variant representations of the font\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant-alternates\",\n            browsers: [\n                \"FF34\"\n            ],\n            values: [\n                {\n                    name: \"annotation()\"\n                },\n                {\n                    name: \"character-variant()\"\n                },\n                {\n                    name: \"historical-forms\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    name: \"ornaments()\"\n                },\n                {\n                    name: \"styleset()\"\n                },\n                {\n                    name: \"stylistic()\"\n                },\n                {\n                    name: \"swash()\"\n                }\n            ],\n            \"syntax\": \"normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]\",\n            \"description\": \"For any given character, fonts can provide a variety of alternate glyphs in addition to the default glyph for that character. This property provides control over the selection of these alternate glyphs.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant-caps\",\n            browsers: [\n                \"FF34\",\n                \"C52\",\n                \"O39\"\n            ],\n            values: [\n                {\n                    name: \"all-petite-caps\"\n                },\n                {\n                    name: \"all-small-caps\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    name: \"petite-caps\"\n                },\n                {\n                    name: \"small-caps\",\n                    \"description\": \"Enables display of small capitals. Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters.\"\n                },\n                {\n                    name: \"titling-caps\"\n                },\n                {\n                    name: \"unicase\"\n                }\n            ],\n            \"syntax\": \"normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps\",\n            \"description\": \"Specifies control over capitalized forms.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant-east-asian\",\n            browsers: [\n                \"FF34\",\n                \"C63\",\n                \"O50\"\n            ],\n            values: [\n                {\n                    name: \"full-width\"\n                },\n                {\n                    name: \"jis04\"\n                },\n                {\n                    name: \"jis78\"\n                },\n                {\n                    name: \"jis83\"\n                },\n                {\n                    name: \"jis90\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    name: \"proportional-width\"\n                },\n                {\n                    name: \"ruby\",\n                    \"description\": \"Enables display of ruby variant glyphs.\"\n                },\n                {\n                    name: \"simplified\"\n                },\n                {\n                    name: \"traditional\"\n                }\n            ],\n            \"syntax\": \"normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]\",\n            \"description\": \"Allows control of glyph substitute and positioning in East Asian text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant-ligatures\",\n            browsers: [\n                \"FF34\",\n                \"S9.1\",\n                \"C34\",\n                \"O21\"\n            ],\n            values: [\n                {\n                    name: \"additional-ligatures\"\n                },\n                {\n                    name: \"common-ligatures\"\n                },\n                {\n                    name: \"contextual\",\n                    browsers: [\n                        \"FF34\",\n                        \"S9.1\",\n                        \"C34\",\n                        \"O21\"\n                    ]\n                },\n                {\n                    name: \"discretionary-ligatures\"\n                },\n                {\n                    name: \"historical-ligatures\"\n                },\n                {\n                    name: \"no-additional-ligatures\"\n                },\n                {\n                    name: \"no-common-ligatures\"\n                },\n                {\n                    name: \"no-contextual\",\n                    browsers: [\n                        \"FF34\",\n                        \"S9.1\",\n                        \"C34\",\n                        \"O21\"\n                    ]\n                },\n                {\n                    name: \"no-discretionary-ligatures\"\n                },\n                {\n                    name: \"no-historical-ligatures\"\n                },\n                {\n                    name: \"none\",\n                    browsers: [\n                        \"FF34\",\n                        \"S9.1\",\n                        \"C34\",\n                        \"O21\"\n                    ],\n                    \"description\": \"Disables all ligatures.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Implies that the defaults set by the font are used.\"\n                }\n            ],\n            \"syntax\": \"normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\",\n            \"description\": \"Specifies control over which ligatures are enabled or disabled. A value of ‘normal’ implies that the defaults set by the font are used.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant-numeric\",\n            browsers: [\n                \"FF34\",\n                \"S9.1\",\n                \"C52\",\n                \"O39\"\n            ],\n            values: [\n                {\n                    name: \"diagonal-fractions\"\n                },\n                {\n                    name: \"lining-nums\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    name: \"oldstyle-nums\"\n                },\n                {\n                    name: \"ordinal\"\n                },\n                {\n                    name: \"proportional-nums\"\n                },\n                {\n                    name: \"slashed-zero\"\n                },\n                {\n                    name: \"stacked-fractions\"\n                },\n                {\n                    name: \"tabular-nums\"\n                }\n            ],\n            \"syntax\": \"normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]\",\n            \"description\": \"Specifies control over numerical forms.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-variant-position\",\n            browsers: [\n                \"FF34\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    name: \"sub\",\n                    \"description\": \"Enables display of subscript variants (OpenType feature: subs).\"\n                },\n                {\n                    name: \"super\",\n                    \"description\": \"Enables display of superscript variants (OpenType feature: sups).\"\n                }\n            ],\n            \"syntax\": \"normal | sub | super\",\n            \"description\": \"Specifies the vertical position\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"font-weight\",\n            values: [\n                {\n                    name: \"100\"\n                },\n                {\n                    name: \"200\"\n                },\n                {\n                    name: \"300\"\n                },\n                {\n                    name: \"400\"\n                },\n                {\n                    name: \"500\"\n                },\n                {\n                    name: \"600\"\n                },\n                {\n                    name: \"700\"\n                },\n                {\n                    name: \"800\"\n                },\n                {\n                    name: \"900\"\n                },\n                {\n                    name: \"bold\"\n                },\n                {\n                    name: \"bolder\"\n                },\n                {\n                    name: \"lighter\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Same as 400\"\n                }\n            ],\n            \"syntax\": \"<font-weight-absolute>{1,2}\",\n            \"description\": \"Specifies weight of glyphs in the font, their degree of blackness or stroke thickness.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"glyph-orientation-horizontal\",\n            \"description\": \"Controls glyph orientation when the inline-progression-direction is horizontal.\",\n            \"restrictions\": [\n                \"angle\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"glyph-orientation-vertical\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Sets the orientation based on the fullwidth or non-fullwidth characters and the most common orientation.\"\n                }\n            ],\n            \"description\": \"Controls glyph orientation when the inline-progression-direction is vertical.\",\n            \"restrictions\": [\n                \"angle\",\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-area\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line> [ / <grid-line> ]{0,3}\",\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement. Shorthand for 'grid-row-start', 'grid-column-start', 'grid-row-end', and 'grid-column-end'.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"grid\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n            \"description\": \"The grid CSS property is a shorthand property that sets all of the explicit grid properties ('grid-template-rows', 'grid-template-columns', and 'grid-template-areas'), and all the implicit grid properties ('grid-auto-rows', 'grid-auto-columns', and 'grid-auto-flow'), in a single declaration.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-auto-columns\",\n            values: [\n                {\n                    name: \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"minmax()\"\n                }\n            ],\n            \"syntax\": \"<track-size>+\",\n            \"description\": \"Specifies the size of implicitly created columns.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"grid-auto-flow\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"row\",\n                    \"description\": \"The auto-placement algorithm places items by filling each row in turn, adding new rows as necessary.\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"The auto-placement algorithm places items by filling each column in turn, adding new columns as necessary.\"\n                },\n                {\n                    name: \"dense\"\n                }\n            ],\n            \"syntax\": \"[ row | column ] || dense\",\n            \"description\": \"Controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-auto-rows\",\n            values: [\n                {\n                    name: \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"minmax()\"\n                }\n            ],\n            \"syntax\": \"<track-size>+\",\n            \"description\": \"Specifies the size of implicitly created rows.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"grid-column\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line> [ / <grid-line> ]?\",\n            \"description\": \"Shorthand for 'grid-column-start' and 'grid-column-end'.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-column-end\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-column-gap\",\n            browsers: [\n                \"FF52\",\n                \"C57\",\n                \"S10.1\",\n                \"O44\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<length-percentage>\",\n            \"description\": \"Specifies the gutters between grid columns. Replaced by 'column-gap' property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"grid-column-start\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-gap\",\n            browsers: [\n                \"FF52\",\n                \"C57\",\n                \"S10.1\",\n                \"O44\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n            \"description\": \"Shorthand that specifies the gutters between grid columns and grid rows in one declaration. Replaced by 'gap' property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"grid-row\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line> [ / <grid-line> ]?\",\n            \"description\": \"Shorthand for 'grid-row-start' and 'grid-row-end'.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-row-end\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-row-gap\",\n            browsers: [\n                \"FF52\",\n                \"C57\",\n                \"S10.1\",\n                \"O44\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<length-percentage>\",\n            \"description\": \"Specifies the gutters between grid rows. Replaced by 'row-gap' property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"grid-row-start\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    name: \"span\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-template\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Sets all three properties to their initial values.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"subgrid\",\n                    \"description\": \"Sets 'grid-template-rows' and 'grid-template-columns' to 'subgrid', and 'grid-template-areas' to its initial value.\"\n                },\n                {\n                    name: \"minmax()\"\n                },\n                {\n                    name: \"repeat()\",\n                    \"description\": \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                }\n            ],\n            \"syntax\": \"none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?\",\n            \"description\": \"Shorthand for setting grid-template-columns, grid-template-rows, and grid-template-areas in a single declaration.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-template-areas\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The grid container doesn’t define any named grid areas.\"\n                }\n            ],\n            \"syntax\": \"none | <string>+\",\n            \"description\": \"Specifies named grid areas, which are not associated with any particular grid item, but can be referenced from the grid-placement properties.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            name: \"grid-template-columns\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"There is no explicit grid; any rows/columns will be implicitly generated.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"subgrid\",\n                    \"description\": \"Indicates that the grid will align to its parent grid in that axis.\"\n                },\n                {\n                    name: \"minmax()\"\n                },\n                {\n                    name: \"repeat()\",\n                    \"description\": \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                }\n            ],\n            \"syntax\": \"none | <track-list> | <auto-track-list>\",\n            \"description\": \"specifies, as a space-separated track list, the line names and track sizing functions of the grid.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"grid-template-rows\",\n            browsers: [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"There is no explicit grid; any rows/columns will be implicitly generated.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    name: \"subgrid\",\n                    \"description\": \"Indicates that the grid will align to its parent grid in that axis.\"\n                },\n                {\n                    name: \"minmax()\"\n                },\n                {\n                    name: \"repeat()\",\n                    \"description\": \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                }\n            ],\n            \"syntax\": \"none | <track-list> | <auto-track-list>\",\n            \"description\": \"specifies, as a space-separated track list, the line names and track sizing functions of the grid.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"height\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The height depends on the values of other properties.\"\n                },\n                {\n                    name: \"fit-content\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>{1,2}\",\n            \"description\": \"Specifies the height of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"hyphens\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    name: \"manual\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"syntax\": \"none | manual | auto\",\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"image-orientation\",\n            browsers: [\n                \"FF26\"\n            ],\n            values: [\n                {\n                    name: \"flip\"\n                },\n                {\n                    name: \"from-image\"\n                }\n            ],\n            \"syntax\": \"from-image | <angle> | [ <angle>? flip ]\",\n            \"description\": \"Specifies an orthogonal rotation to be applied to an image before it is laid out.\",\n            \"restrictions\": [\n                \"angle\"\n            ]\n        },\n        {\n            name: \"image-rendering\",\n            browsers: [\n                \"FF3.6\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The image should be scaled with an algorithm that maximizes the appearance of the image.\"\n                },\n                {\n                    name: \"crisp-edges\"\n                },\n                {\n                    name: \"-moz-crisp-edges\",\n                    browsers: [\n                        \"FF3.6\",\n                        \"S\",\n                        \"C\",\n                        \"O\"\n                    ]\n                },\n                {\n                    name: \"optimizeQuality\"\n                },\n                {\n                    name: \"optimizeSpeed\",\n                    \"description\": \"Deprecated.\"\n                },\n                {\n                    name: \"pixelated\"\n                }\n            ],\n            \"syntax\": \"auto | crisp-edges | pixelated\",\n            \"description\": \"Provides a hint to the user-agent about what aspects of an image are most important to preserve when the image is scaled, to aid the user-agent in the choice of an appropriate scaling algorithm.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"ime-mode\",\n            browsers: [\n                \"FF3\",\n                \"IE5\"\n            ],\n            values: [\n                {\n                    name: \"active\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"No change is made to the current input method editor state. This is the default.\"\n                },\n                {\n                    name: \"disabled\"\n                },\n                {\n                    name: \"inactive\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"The IME state should be normal; this value can be used in a user style sheet to override the page setting.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"auto | normal | active | inactive | disabled\",\n            \"description\": \"Controls the state of the input method editor for text fields.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"inline-size\",\n            browsers: [\n                \"FF41\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<'width'>\",\n            \"description\": \"Logical 'height'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"isolation\",\n            browsers: [\n                \"FF36\",\n                \"S\",\n                \"C41\",\n                \"O30\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Elements are not isolated unless an operation is applied that causes the creation of a stacking context.\"\n                },\n                {\n                    name: \"isolate\",\n                    \"description\": \"In CSS will turn the element into a stacking context.\"\n                }\n            ],\n            \"syntax\": \"auto | isolate\",\n            \"description\": \"In CSS setting to 'isolate' will turn the element into a stacking context. In SVG, it defines whether an element is isolated or not.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"justify-content\",\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Flex items are packed toward the center of the line.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"The items are packed flush to each other toward the start edge of the alignment container in the main axis.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"The items are packed flush to each other toward the end edge of the alignment container in the main axis.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The items are packed flush to each other toward the left edge of the alignment container in the main axis.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The items are packed flush to each other toward the right edge of the alignment container in the main axis.\"\n                },\n                {\n                    name: \"safe\"\n                },\n                {\n                    name: \"unsafe\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the combined size of the alignment subjects is less than the size of the alignment container, any auto-sized alignment subjects have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container.\"\n                },\n                {\n                    name: \"space-evenly\"\n                },\n                {\n                    name: \"flex-end\",\n                    \"description\": \"Flex items are packed toward the end of the line.\"\n                },\n                {\n                    name: \"flex-start\",\n                    \"description\": \"Flex items are packed toward the start of the line.\"\n                },\n                {\n                    name: \"space-around\",\n                    \"description\": \"Flex items are evenly distributed in the line, with half-size spaces on either end.\"\n                },\n                {\n                    name: \"space-between\",\n                    \"description\": \"Flex items are evenly distributed in the line.\"\n                },\n                {\n                    name: \"baseline\",\n                    \"description\": \"Specifies participation in first-baseline alignment.\"\n                },\n                {\n                    name: \"first baseline\",\n                    \"description\": \"Specifies participation in first-baseline alignment.\"\n                },\n                {\n                    name: \"last baseline\",\n                    \"description\": \"Specifies participation in last-baseline alignment.\"\n                }\n            ],\n            \"syntax\": \"normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]\",\n            \"description\": \"Aligns flex items along the main axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"kerning\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Indicates that the user agent should adjust inter-glyph spacing based on kerning tables that are included in the font that will be used.\"\n                }\n            ],\n            \"description\": \"Indicates whether the user agent should adjust inter-glyph spacing based on kerning tables that are included in the relevant font or instead disable auto-kerning and set inter-character spacing to a specific length.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"left\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Specifies how far an absolutely positioned box's left margin edge is offset to the right of the left edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"letter-spacing\",\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"The spacing is the normal spacing for the current font. It is typically zero-length.\"\n                }\n            ],\n            \"syntax\": \"normal | <length>\",\n            \"description\": \"Specifies the minimum, maximum, and optimal spacing between grapheme clusters.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"lighting-color\",\n            browsers: [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"description\": \"Defines the color of the light source for filter primitives 'feDiffuseLighting' and 'feSpecularLighting'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"line-break\",\n            browsers: [\n                \"E14\",\n                \"S\",\n                \"C58\",\n                \"IE5.5\",\n                \"O45\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.\"\n                },\n                {\n                    name: \"loose\",\n                    \"description\": \"Breaks text using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Breaks text using the most common set of line-breaking rules.\"\n                },\n                {\n                    name: \"strict\",\n                    \"description\": \"Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'.\"\n                }\n            ],\n            \"syntax\": \"auto | loose | normal | strict\",\n            \"description\": \"Specifies what set of line breaking restrictions are in effect within the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"line-height\",\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"Tells user agents to set the computed value to a 'reasonable' value based on the font size of the element.\"\n                }\n            ],\n            \"syntax\": \"normal | <number> | <length> | <percentage>\",\n            \"description\": \"Determines the block-progression dimension of the text content area of an inline box.\",\n            \"restrictions\": [\n                \"number\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"list-style\",\n            values: [\n                {\n                    name: \"armenian\"\n                },\n                {\n                    name: \"circle\"\n                },\n                {\n                    name: \"decimal\"\n                },\n                {\n                    name: \"decimal-leading-zero\"\n                },\n                {\n                    name: \"disc\"\n                },\n                {\n                    name: \"georgian\"\n                },\n                {\n                    name: \"inside\"\n                },\n                {\n                    name: \"lower-alpha\"\n                },\n                {\n                    name: \"lower-greek\"\n                },\n                {\n                    name: \"lower-latin\"\n                },\n                {\n                    name: \"lower-roman\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"outside\"\n                },\n                {\n                    name: \"square\",\n                    \"description\": \"A filled square.\"\n                },\n                {\n                    name: \"symbols()\"\n                },\n                {\n                    name: \"upper-alpha\"\n                },\n                {\n                    name: \"upper-latin\"\n                },\n                {\n                    name: \"upper-roman\"\n                },\n                {\n                    name: \"url()\"\n                }\n            ],\n            \"syntax\": \"<'list-style-type'> || <'list-style-position'> || <'list-style-image'>\",\n            \"description\": \"Shorthand for setting 'list-style-type', 'list-style-position' and 'list-style-image'\",\n            \"restrictions\": [\n                \"image\",\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"list-style-image\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The default contents of the of the list item’s marker are given by 'list-style-type' instead.\"\n                }\n            ],\n            \"syntax\": \"<url> | none\",\n            \"description\": \"Sets the image that will be used as the list item marker. When the image is available, it will replace the marker set with the 'list-style-type' marker.\",\n            \"restrictions\": [\n                \"image\"\n            ]\n        },\n        {\n            name: \"list-style-position\",\n            values: [\n                {\n                    name: \"inside\"\n                },\n                {\n                    name: \"outside\"\n                }\n            ],\n            \"syntax\": \"inside | outside\",\n            \"description\": \"Specifies the position of the '::marker' pseudo-element's box in the list item.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"list-style-type\",\n            values: [\n                {\n                    name: \"armenian\",\n                    \"description\": \"Traditional uppercase Armenian numbering.\"\n                },\n                {\n                    name: \"circle\"\n                },\n                {\n                    name: \"decimal\",\n                    \"description\": \"Western decimal numbers.\"\n                },\n                {\n                    name: \"decimal-leading-zero\",\n                    \"description\": \"Decimal numbers padded by initial zeros.\"\n                },\n                {\n                    name: \"disc\"\n                },\n                {\n                    name: \"georgian\",\n                    \"description\": \"Traditional Georgian numbering.\"\n                },\n                {\n                    name: \"lower-alpha\",\n                    \"description\": \"Lowercase ASCII letters.\"\n                },\n                {\n                    name: \"lower-greek\",\n                    \"description\": \"Lowercase classical Greek.\"\n                },\n                {\n                    name: \"lower-latin\",\n                    \"description\": \"Lowercase ASCII letters.\"\n                },\n                {\n                    name: \"lower-roman\",\n                    \"description\": \"Lowercase ASCII Roman numerals.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No marker\"\n                },\n                {\n                    name: \"square\",\n                    \"description\": \"A filled square.\"\n                },\n                {\n                    name: \"symbols()\"\n                },\n                {\n                    name: \"upper-alpha\",\n                    \"description\": \"Uppercase ASCII letters.\"\n                },\n                {\n                    name: \"upper-latin\",\n                    \"description\": \"Uppercase ASCII letters.\"\n                },\n                {\n                    name: \"upper-roman\",\n                    \"description\": \"Uppercase ASCII Roman numerals.\"\n                }\n            ],\n            \"syntax\": \"<counter-style> | <string> | none\",\n            \"description\": \"Used to construct the default contents of a list item’s marker\",\n            \"restrictions\": [\n                \"enum\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"margin\",\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"[ <length> | <percentage> | auto ]{1,4}\",\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-block-end\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"description\": \"Logical 'margin-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-block-start\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"description\": \"Logical 'margin-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-bottom\",\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-inline-end\",\n            browsers: [\n                \"FF41\",\n                \"S3\",\n                \"C69\",\n                \"O56\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"description\": \"Logical 'margin-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-inline-start\",\n            browsers: [\n                \"FF41\",\n                \"S3\",\n                \"C69\",\n                \"O56\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"description\": \"Logical 'margin-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-left\",\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-right\",\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"margin-top\",\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"marker\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"description\": \"Specifies the marker symbol that shall be used for all points on the sets the value for all vertices on the given ‘path’ element or basic shape.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            name: \"marker-end\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"description\": \"Specifies the marker that will be drawn at the last vertices of the given markable element.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            name: \"marker-mid\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"description\": \"Specifies the marker that will be drawn at all vertices except the first and last.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            name: \"marker-start\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"description\": \"Specifies the marker that will be drawn at the first vertices of the given markable element.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            name: \"mask-image\",\n            browsers: [\n                \"E16\",\n                \"FF53\",\n                \"S4\",\n                \"C1\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Counts as a transparent black image layer.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"Reference to a <mask element or to a CSS image.\"\n                }\n            ],\n            \"syntax\": \"<mask-reference>#\",\n            \"description\": \"Sets the mask layer image of an element.\",\n            \"restrictions\": [\n                \"url\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"mask-mode\",\n            browsers: [\n                \"FF53\"\n            ],\n            values: [\n                {\n                    name: \"alpha\",\n                    \"description\": \"Alpha values of the mask layer image should be used as the mask values.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Use alpha values if 'mask-image' is an image, luminance if a <mask> element or a CSS image.\"\n                },\n                {\n                    name: \"luminance\",\n                    \"description\": \"Luminance values of the mask layer image should be used as the mask values.\"\n                }\n            ],\n            \"syntax\": \"<masking-mode>#\",\n            \"description\": \"Indicates whether the mask layer image is treated as luminance mask or alpha mask.\",\n            \"restrictions\": [\n                \"url\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"mask-origin\",\n            browsers: [\n                \"FF53\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"syntax\": \"<geometry-box>#\",\n            \"description\": \"Specifies the mask positioning area.\",\n            \"restrictions\": [\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"mask-position\",\n            browsers: [\n                \"E18\",\n                \"FF53\",\n                \"S4\",\n                \"C1\"\n            ],\n            \"syntax\": \"<position>#\",\n            \"description\": \"Specifies how mask layer images are positioned.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"mask-repeat\",\n            browsers: [\n                \"E18\",\n                \"FF53\",\n                \"S4\",\n                \"C1\"\n            ],\n            \"syntax\": \"<repeat-style>#\",\n            \"description\": \"Specifies how mask layer images are tiled after they have been sized and positioned.\",\n            \"restrictions\": [\n                \"repeat\"\n            ]\n        },\n        {\n            name: \"mask-size\",\n            browsers: [\n                \"E17\",\n                \"FF53\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                },\n                {\n                    name: \"contain\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                },\n                {\n                    name: \"cover\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                }\n            ],\n            \"syntax\": \"<bg-size>#\",\n            \"description\": \"Specifies the size of the mask layer images.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"mask-type\",\n            browsers: [\n                \"FF35\",\n                \"C24\"\n            ],\n            values: [\n                {\n                    name: \"alpha\",\n                    \"description\": \"Indicates that the alpha values of the mask should be used.\"\n                },\n                {\n                    name: \"luminance\",\n                    \"description\": \"Indicates that the luminance values of the mask should be used.\"\n                }\n            ],\n            \"syntax\": \"luminance | alpha\",\n            \"description\": \"Defines whether the content of the <mask> element is treated as as luminance mask or alpha mask.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"max-block-size\",\n            browsers: [\n                \"FF41\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No limit on the width of the box.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"<'max-width'>\",\n            \"description\": \"Logical 'max-width'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"max-height\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No limit on the height of the box.\"\n                },\n                {\n                    name: \"fit-content\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"description\": \"Allows authors to constrain content height to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"max-inline-size\",\n            browsers: [\n                \"FF41\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No limit on the height of the box.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"<'max-width'>\",\n            \"description\": \"Logical 'max-height'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"max-width\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No limit on the width of the box.\"\n                },\n                {\n                    name: \"fit-content\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"description\": \"Allows authors to constrain content width to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"min-block-size\",\n            browsers: [\n                \"FF41\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<'min-width'>\",\n            \"description\": \"Logical 'min-width'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"min-height\",\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"fit-content\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"description\": \"Allows authors to constrain content height to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"min-inline-size\",\n            browsers: [\n                \"FF41\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<'min-width'>\",\n            \"description\": \"Logical 'min-height'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"min-width\",\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"fit-content\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"description\": \"Allows authors to constrain content width to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"mix-blend-mode\",\n            browsers: [\n                \"FF32\",\n                \"S8\",\n                \"C41\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"Default attribute which specifies no blending\"\n                },\n                {\n                    name: \"multiply\"\n                },\n                {\n                    name: \"screen\"\n                },\n                {\n                    name: \"overlay\"\n                },\n                {\n                    name: \"darken\"\n                },\n                {\n                    name: \"lighten\"\n                },\n                {\n                    name: \"color-dodge\"\n                },\n                {\n                    name: \"color-burn\"\n                },\n                {\n                    name: \"hard-light\"\n                },\n                {\n                    name: \"soft-light\"\n                },\n                {\n                    name: \"difference\"\n                },\n                {\n                    name: \"exclusion\"\n                },\n                {\n                    name: \"hue\",\n                    browsers: [\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O\"\n                    ]\n                },\n                {\n                    name: \"saturation\",\n                    browsers: [\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O\"\n                    ]\n                },\n                {\n                    name: \"color\",\n                    browsers: [\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O\"\n                    ]\n                },\n                {\n                    name: \"luminosity\",\n                    browsers: [\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O\"\n                    ]\n                }\n            ],\n            \"syntax\": \"<blend-mode>\",\n            \"description\": \"Defines the formula that must be used to mix the colors with the backdrop.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"motion\",\n            browsers: [\n                \"C46\",\n                \"O33\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No motion path gets created.\"\n                },\n                {\n                    name: \"path()\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees.\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting 'motion-path', 'motion-offset' and 'motion-rotation'.\",\n            \"restrictions\": [\n                \"url\",\n                \"length\",\n                \"percentage\",\n                \"angle\",\n                \"shape\",\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"motion-offset\",\n            browsers: [\n                \"C46\",\n                \"O33\"\n            ],\n            \"description\": \"A distance that describes the position along the specified motion path.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"motion-path\",\n            browsers: [\n                \"C46\",\n                \"O33\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No motion path gets created.\"\n                },\n                {\n                    name: \"path()\"\n                }\n            ],\n            \"description\": \"Specifies the motion path the element gets positioned at.\",\n            \"restrictions\": [\n                \"url\",\n                \"shape\",\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"motion-rotation\",\n            browsers: [\n                \"C46\",\n                \"O33\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees.\"\n                }\n            ],\n            \"description\": \"Defines the direction of the element while positioning along the motion path.\",\n            \"restrictions\": [\n                \"angle\"\n            ]\n        },\n        {\n            name: \"-moz-animation\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"enum\",\n                \"timing-function\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"-moz-animation-delay\",\n            browsers: [\n                \"FF9\"\n            ],\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-moz-animation-direction\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-animation-duration\",\n            browsers: [\n                \"FF9\"\n            ],\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-moz-animation-iteration-count\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-animation-name\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-animation-play-state\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"paused\"\n                },\n                {\n                    name: \"running\"\n                }\n            ],\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-animation-timing-function\",\n            browsers: [\n                \"FF9\"\n            ],\n            \"description\": \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"-moz-appearance\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"button\"\n                },\n                {\n                    name: \"button-arrow-down\"\n                },\n                {\n                    name: \"button-arrow-next\"\n                },\n                {\n                    name: \"button-arrow-previous\"\n                },\n                {\n                    name: \"button-arrow-up\"\n                },\n                {\n                    name: \"button-bevel\"\n                },\n                {\n                    name: \"checkbox\"\n                },\n                {\n                    name: \"checkbox-container\"\n                },\n                {\n                    name: \"checkbox-label\"\n                },\n                {\n                    name: \"dialog\"\n                },\n                {\n                    name: \"groupbox\"\n                },\n                {\n                    name: \"listbox\"\n                },\n                {\n                    name: \"menuarrow\"\n                },\n                {\n                    name: \"menuimage\"\n                },\n                {\n                    name: \"menuitem\"\n                },\n                {\n                    name: \"menuitemtext\"\n                },\n                {\n                    name: \"menulist\"\n                },\n                {\n                    name: \"menulist-button\"\n                },\n                {\n                    name: \"menulist-text\"\n                },\n                {\n                    name: \"menulist-textfield\"\n                },\n                {\n                    name: \"menupopup\"\n                },\n                {\n                    name: \"menuradio\"\n                },\n                {\n                    name: \"menuseparator\"\n                },\n                {\n                    name: \"-moz-mac-unified-toolbar\"\n                },\n                {\n                    name: \"-moz-win-borderless-glass\"\n                },\n                {\n                    name: \"-moz-win-browsertabbar-toolbox\"\n                },\n                {\n                    name: \"-moz-win-communications-toolbox\"\n                },\n                {\n                    name: \"-moz-win-glass\"\n                },\n                {\n                    name: \"-moz-win-media-toolbox\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"progressbar\"\n                },\n                {\n                    name: \"progresschunk\"\n                },\n                {\n                    name: \"radio\"\n                },\n                {\n                    name: \"radio-container\"\n                },\n                {\n                    name: \"radio-label\"\n                },\n                {\n                    name: \"radiomenuitem\"\n                },\n                {\n                    name: \"resizer\"\n                },\n                {\n                    name: \"resizerpanel\"\n                },\n                {\n                    name: \"scrollbarbutton-down\"\n                },\n                {\n                    name: \"scrollbarbutton-left\"\n                },\n                {\n                    name: \"scrollbarbutton-right\"\n                },\n                {\n                    name: \"scrollbarbutton-up\"\n                },\n                {\n                    name: \"scrollbar-small\"\n                },\n                {\n                    name: \"scrollbartrack-horizontal\"\n                },\n                {\n                    name: \"scrollbartrack-vertical\"\n                },\n                {\n                    name: \"separator\"\n                },\n                {\n                    name: \"spinner\"\n                },\n                {\n                    name: \"spinner-downbutton\"\n                },\n                {\n                    name: \"spinner-textfield\"\n                },\n                {\n                    name: \"spinner-upbutton\"\n                },\n                {\n                    name: \"statusbar\"\n                },\n                {\n                    name: \"statusbarpanel\"\n                },\n                {\n                    name: \"tab\"\n                },\n                {\n                    name: \"tabpanels\"\n                },\n                {\n                    name: \"tab-scroll-arrow-back\"\n                },\n                {\n                    name: \"tab-scroll-arrow-forward\"\n                },\n                {\n                    name: \"textfield\"\n                },\n                {\n                    name: \"textfield-multiline\"\n                },\n                {\n                    name: \"toolbar\"\n                },\n                {\n                    name: \"toolbox\"\n                },\n                {\n                    name: \"tooltip\"\n                },\n                {\n                    name: \"treeheadercell\"\n                },\n                {\n                    name: \"treeheadersortarrow\"\n                },\n                {\n                    name: \"treeitem\"\n                },\n                {\n                    name: \"treetwistyopen\"\n                },\n                {\n                    name: \"treeview\"\n                },\n                {\n                    name: \"treewisty\"\n                },\n                {\n                    name: \"window\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\",\n            \"description\": \"Used in Gecko (Firefox) to display an element using a platform-native styling based on the operating system's theme.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-backface-visibility\",\n            browsers: [\n                \"FF10\"\n            ],\n            values: [\n                {\n                    name: \"hidden\"\n                },\n                {\n                    name: \"visible\"\n                }\n            ],\n            \"description\": \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-background-clip\",\n            browsers: [\n                \"FF1-3.6\"\n            ],\n            values: [\n                {\n                    name: \"padding\"\n                }\n            ],\n            \"description\": \"Determines the background painting area.\",\n            \"restrictions\": [\n                \"box\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-background-inline-policy\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"bounding-box\"\n                },\n                {\n                    name: \"continuous\"\n                },\n                {\n                    name: \"each-box\"\n                }\n            ],\n            \"description\": \"In Gecko-based applications like Firefox, the -moz-background-inline-policy CSS property specifies how the background image of an inline element is determined when the content of the inline element wraps onto multiple lines. The choice of position has significant effects on repetition.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-background-origin\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"-moz-border-bottom-colors\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"description\": \"Sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-border-image\",\n            browsers: [\n                \"FF3.6\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"repeat\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    name: \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                },\n                {\n                    name: \"url()\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"url\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-border-left-colors\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"description\": \"Sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-border-right-colors\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"description\": \"Sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-border-top-colors\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"description\": \"Ske Firefox, -moz-border-bottom-colors sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-box-align\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"baseline\",\n                    \"description\": \"If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"Any extra space is divided evenly, with half placed above the child and the other half placed after the child.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The height of each child is adjusted to that of the containing block.\"\n                }\n            ],\n            \"description\": \"Specifies how a XUL box aligns its contents across (perpendicular to) the direction of its layout. The effect of this is only visible if there is extra space in the box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-box-direction\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top.\"\n                }\n            ],\n            \"description\": \"Specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-box-flex\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Specifies how a box grows to fill the box that contains it, in the direction of the containing box's layout.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"-moz-box-flexgroup\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Flexible elements can be assigned to flex groups using the 'box-flex-group' property.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-moz-box-ordinal-group\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-moz-box-orient\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"block-axis\"\n                },\n                {\n                    name: \"horizontal\",\n                    \"description\": \"The box displays its children from left to right in a horizontal line.\"\n                },\n                {\n                    name: \"inline-axis\"\n                },\n                {\n                    name: \"vertical\",\n                    \"description\": \"The box displays its children from stacked from top to bottom vertically.\"\n                }\n            ],\n            \"description\": \"In Mozilla applications, -moz-box-orient specifies whether a box lays out its contents horizontally or vertically.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-box-pack\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"The extra space is divided evenly, with half placed before the first child and the other half placed after the last child.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child.\"\n                }\n            ],\n            \"description\": \"Specifies how a box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-box-sizing\",\n            browsers: [\n                \"FF1\"\n            ],\n            values: [\n                {\n                    name: \"border-box\"\n                },\n                {\n                    name: \"content-box\"\n                },\n                {\n                    name: \"padding-box\"\n                }\n            ],\n            \"description\": \"Box Model addition in CSS3.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-column-count\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Determines the number of columns by the 'column-width' property and the element width.\"\n                }\n            ],\n            \"description\": \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-moz-column-gap\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"User agent specific and typically equivalent to 1em.\"\n                }\n            ],\n            \"description\": \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-moz-column-rule\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            \"description\": \"Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-column-rule-color\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            \"description\": \"Sets the color of the column rule\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-column-rule-style\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            \"description\": \"Sets the style of the rule between columns of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"-moz-column-rule-width\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            \"description\": \"Sets the width of the rule between columns. Negative values are not allowed.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"-moz-columns\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"description\": \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n            \"restrictions\": [\n                \"length\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-moz-column-width\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"description\": \"This property describes the width of columns in multicol elements.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-moz-font-feature-settings\",\n            browsers: [\n                \"FF4\"\n            ],\n            values: [\n                {\n                    name: \"\\\"c2cs\\\"\"\n                },\n                {\n                    name: \"\\\"dlig\\\"\"\n                },\n                {\n                    name: \"\\\"kern\\\"\"\n                },\n                {\n                    name: \"\\\"liga\\\"\"\n                },\n                {\n                    name: \"\\\"lnum\\\"\"\n                },\n                {\n                    name: \"\\\"onum\\\"\"\n                },\n                {\n                    name: \"\\\"smcp\\\"\"\n                },\n                {\n                    name: \"\\\"swsh\\\"\"\n                },\n                {\n                    name: \"\\\"tnum\\\"\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"No change in glyph substitution or positioning occurs.\"\n                },\n                {\n                    name: \"off\",\n                    browsers: [\n                        \"FF4\"\n                    ]\n                },\n                {\n                    name: \"on\",\n                    browsers: [\n                        \"FF4\"\n                    ]\n                }\n            ],\n            \"description\": \"Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n            \"restrictions\": [\n                \"string\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-moz-hyphens\",\n            browsers: [\n                \"FF9\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    name: \"manual\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-perspective\",\n            browsers: [\n                \"FF10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-moz-perspective-origin\",\n            browsers: [\n                \"FF10\"\n            ],\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-moz-text-align-last\",\n            browsers: [\n                \"FF12\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                }\n            ],\n            \"description\": \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-text-decoration-color\",\n            browsers: [\n                \"FF6\"\n            ],\n            \"description\": \"Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-moz-text-decoration-line\",\n            browsers: [\n                \"FF6\"\n            ],\n            values: [\n                {\n                    name: \"line-through\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Neither produces nor inhibits text decoration.\"\n                },\n                {\n                    name: \"overline\"\n                },\n                {\n                    name: \"underline\"\n                }\n            ],\n            \"description\": \"Specifies what line decorations, if any, are added to the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-text-decoration-style\",\n            browsers: [\n                \"FF6\"\n            ],\n            values: [\n                {\n                    name: \"dashed\"\n                },\n                {\n                    name: \"dotted\"\n                },\n                {\n                    name: \"double\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Produces no line.\"\n                },\n                {\n                    name: \"solid\"\n                },\n                {\n                    name: \"wavy\"\n                }\n            ],\n            \"description\": \"Specifies the line style for underline, line-through and overline text decoration.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-text-size-adjust\",\n            browsers: [\n                \"FF\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Renderers must use the default size adjustment when displaying on a small device.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Renderers must not do size adjustment when displaying on a small device.\"\n                }\n            ],\n            \"description\": \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n            \"restrictions\": [\n                \"enum\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-moz-transform\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            values: [\n                {\n                    name: \"matrix()\"\n                },\n                {\n                    name: \"matrix3d()\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"perspective\"\n                },\n                {\n                    name: \"rotate()\"\n                },\n                {\n                    name: \"rotate3d()\"\n                },\n                {\n                    name: \"rotateX('angle')\"\n                },\n                {\n                    name: \"rotateY('angle')\"\n                },\n                {\n                    name: \"rotateZ('angle')\"\n                },\n                {\n                    name: \"scale()\"\n                },\n                {\n                    name: \"scale3d()\"\n                },\n                {\n                    name: \"scaleX()\"\n                },\n                {\n                    name: \"scaleY()\"\n                },\n                {\n                    name: \"scaleZ()\"\n                },\n                {\n                    name: \"skew()\"\n                },\n                {\n                    name: \"skewX()\"\n                },\n                {\n                    name: \"skewY()\"\n                },\n                {\n                    name: \"translate()\"\n                },\n                {\n                    name: \"translate3d()\"\n                },\n                {\n                    name: \"translateX()\"\n                },\n                {\n                    name: \"translateY()\"\n                },\n                {\n                    name: \"translateZ()\"\n                }\n            ],\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-transform-origin\",\n            browsers: [\n                \"FF3.5\"\n            ],\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-moz-transition\",\n            browsers: [\n                \"FF4\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-moz-transition-delay\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-moz-transition-duration\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-moz-transition-property\",\n            browsers: [\n                \"FF4\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            name: \"-moz-transition-timing-function\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"-moz-user-focus\",\n            browsers: [\n                \"FF\"\n            ],\n            values: [\n                {\n                    name: \"ignore\"\n                },\n                {\n                    name: \"normal\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"ignore | normal | select-after | select-before | select-menu | select-same | select-all | none\",\n            \"description\": \"Used to indicate whether the element can have focus.\"\n        },\n        {\n            name: \"-moz-user-select\",\n            browsers: [\n                \"FF1.5\"\n            ],\n            values: [\n                {\n                    name: \"all\"\n                },\n                {\n                    name: \"element\"\n                },\n                {\n                    name: \"elements\"\n                },\n                {\n                    name: \"-moz-all\"\n                },\n                {\n                    name: \"-moz-none\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"text\"\n                },\n                {\n                    name: \"toggle\"\n                }\n            ],\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-accelerator\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"false\"\n                },\n                {\n                    name: \"true\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"false | true\",\n            \"description\": \"IE only. Has the ability to turn off its system underlines for accelerator keys until the ALT key is pressed\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-behavior\",\n            browsers: [\n                \"IE8\"\n            ],\n            \"description\": \"IE only. Used to extend behaviors of the browser\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            name: \"-ms-block-progression\",\n            browsers: [\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"bt\"\n                },\n                {\n                    name: \"lr\"\n                },\n                {\n                    name: \"rl\"\n                },\n                {\n                    name: \"tb\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"tb | rl | bt | lr\",\n            \"description\": \"Sets the block-progression value and the flow orientation\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-content-zoom-chaining\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"chained\",\n                    \"description\": \"The nearest zoomable parent element begins zooming when the user hits a zoom limit during a manipulation. No bounce effect is shown.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"A bounce effect is shown when the user hits a zoom limit during a manipulation.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | chained\",\n            \"description\": \"Specifies the zoom behavior that occurs when a user hits the zoom limit during a manipulation.\"\n        },\n        {\n            name: \"-ms-content-zooming\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The element is not zoomable.\"\n                },\n                {\n                    name: \"zoom\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | zoom\",\n            \"description\": \"Specifies whether zooming is enabled.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-content-zoom-limit\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n            \"description\": \"Shorthand property for the -ms-content-zoom-limit-min and -ms-content-zoom-limit-max properties.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-content-zoom-limit-max\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<percentage>\",\n            \"description\": \"Specifies the maximum zoom factor.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-content-zoom-limit-min\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<percentage>\",\n            \"description\": \"Specifies the minimum zoom factor.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-content-zoom-snap\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"mandatory\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that zooming is unaffected by any defined snap-points.\"\n                },\n                {\n                    name: \"proximity\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop \\\"close enough\\\" to a snap-point.\"\n                },\n                {\n                    name: \"snapInterval(100%, 100%)\",\n                    \"description\": \"Specifies where the snap-points will be placed.\"\n                },\n                {\n                    name: \"snapList()\",\n                    \"description\": \"Specifies the position of individual snap-points as a comma-separated list of zoom factors.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>\",\n            \"description\": \"Shorthand property for the -ms-content-zoom-snap-type and -ms-content-zoom-snap-points properties.\"\n        },\n        {\n            name: \"-ms-content-zoom-snap-points\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"snapInterval(100%, 100%)\",\n                    \"description\": \"Specifies where the snap-points will be placed.\"\n                },\n                {\n                    name: \"snapList()\",\n                    \"description\": \"Specifies the position of individual snap-points as a comma-separated list of zoom factors.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )\",\n            \"description\": \"Defines where zoom snap-points are located.\"\n        },\n        {\n            name: \"-ms-content-zoom-snap-type\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"mandatory\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that zooming is unaffected by any defined snap-points.\"\n                },\n                {\n                    name: \"proximity\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop \\\"close enough\\\" to a snap-point.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | proximity | mandatory\",\n            \"description\": \"Specifies how zooming is affected by defined snap-points.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-filter\",\n            browsers: [\n                \"IE8-9\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<string>\",\n            \"description\": \"IE only. Used to produce visual effects.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            name: \"-ms-flex\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Expands to '0 0 auto'.\"\n                }\n            ],\n            \"description\": \"specifies the parameters of a flexible length: the positive and negative flexibility, and the preferred size.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-flex-align\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"The cross-start margin edge of the flexbox item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the cross size property of the flexbox item is anything other than 'auto', this value is identical to 'start'.\"\n                }\n            ],\n            \"description\": \"Aligns flex items along the cross axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flex-direction\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    name: \"column-reverse\"\n                },\n                {\n                    name: \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    name: \"row-reverse\"\n                }\n            ],\n            \"description\": \"Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flex-flow\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    name: \"column-reverse\"\n                },\n                {\n                    name: \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    name: \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    name: \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    name: \"wrap-reverse\"\n                }\n            ],\n            \"description\": \"Specifies how flexbox items are placed in the flexbox.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flex-item-align\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself.\"\n                },\n                {\n                    name: \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                }\n            ],\n            \"description\": \"Allows the default alignment along the cross axis to be overridden for individual flex items.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flex-line-pack\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Lines are packed toward the center of the flex container.\"\n                },\n                {\n                    name: \"distribute\",\n                    \"description\": \"Lines are evenly distributed in the flex container, with half-size spaces on either end.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"Lines are packed toward the end of the flex container.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"Lines are evenly distributed in the flex container.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"Lines are packed toward the start of the flex container.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"Lines stretch to take up the remaining space.\"\n                }\n            ],\n            \"description\": \"Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flex-order\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-flex-pack\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Flex items are packed toward the center of the line.\"\n                },\n                {\n                    name: \"distribute\",\n                    \"description\": \"Flex items are evenly distributed in the line, with half-size spaces on either end.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"Flex items are packed toward the end of the line.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"Flex items are evenly distributed in the line.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"Flex items are packed toward the start of the line.\"\n                }\n            ],\n            \"description\": \"Aligns flex items along the main axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flex-wrap\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    name: \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    name: \"wrap-reverse\"\n                }\n            ],\n            \"description\": \"Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-flow-from\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The block container is not a CSS Region.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ none | <custom-ident> ]#\",\n            \"description\": \"Makes a block container a region and associates it with a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"-ms-flow-into\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The element is not moved to a named flow and normal CSS processing takes place.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ none | <custom-ident> ]#\",\n            \"description\": \"Places an element or its contents into a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"-ms-grid-column\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"end\"\n                },\n                {\n                    name: \"start\"\n                }\n            ],\n            \"description\": \"Used to place grid items and explicitly defined grid cells in the Grid.\",\n            \"restrictions\": [\n                \"integer\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-grid-column-align\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Places the center of the Grid Item's margin box at the center of the Grid Item's column.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's column.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's column.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"Ensures that the Grid Item's margin box is equal to the size of the Grid Item's column.\"\n                }\n            ],\n            \"description\": \"Aligns the columns in a grid.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-grid-columns\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Lays out the columns of the grid.\"\n        },\n        {\n            name: \"-ms-grid-column-span\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Specifies the number of columns to span.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-grid-layer\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Grid-layer is similar in concept to z-index, but avoids overloading the meaning of the z-index property, which is applicable only to positioned elements.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-grid-row\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"end\"\n                },\n                {\n                    name: \"start\"\n                }\n            ],\n            \"description\": \"grid-row is used to place grid items and explicitly defined grid cells in the Grid.\",\n            \"restrictions\": [\n                \"integer\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-grid-row-align\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"Places the center of the Grid Item's margin box at the center of the Grid Item's row.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's row.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's row.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"Ensures that the Grid Item's margin box is equal to the size of the Grid Item's row.\"\n                }\n            ],\n            \"description\": \"Aligns the rows in a grid.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-grid-rows\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Lays out the columns of the grid.\"\n        },\n        {\n            name: \"-ms-grid-row-span\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Specifies the number of rows to span.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-high-contrast-adjust\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Properties will be adjusted as applicable.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No adjustments will be applied.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | none\",\n            \"description\": \"Specifies if properties should be adjusted in high contrast mode.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-hyphenate-limit-chars\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent chooses a value that adapts to the current layout.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | <integer>{1,3}\",\n            \"description\": \"Specifies the minimum number of characters in a hyphenated word.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-hyphenate-limit-lines\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"no-limit\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"no-limit | <integer>\",\n            \"description\": \"Indicates the maximum number of successive hyphenated lines in an element.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-hyphenate-limit-zone\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<percentage> | <length>\",\n            \"description\": \"Specifies the maximum amount of unfilled space (before justification) that may be left in the line box before hyphenation is triggered to pull part of a word from the next line back up into the current line.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-hyphens\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    name: \"manual\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-ime-mode\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"active\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"No change is made to the current input method editor state. This is the default.\"\n                },\n                {\n                    name: \"disabled\"\n                },\n                {\n                    name: \"inactive\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"The IME state should be normal; this value can be used in a user style sheet to override the page setting.\"\n                }\n            ],\n            \"description\": \"Controls the state of the input method editor for text fields.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-interpolation-mode\",\n            browsers: [\n                \"IE7\"\n            ],\n            values: [\n                {\n                    name: \"bicubic\"\n                },\n                {\n                    name: \"nearest-neighbor\"\n                }\n            ],\n            \"description\": \"Gets or sets the interpolation (resampling) method used to stretch images.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-layout-grid\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"char\",\n                    \"description\": \"Any of the range of character values available to the -ms-layout-grid-char property.\"\n                },\n                {\n                    name: \"line\",\n                    \"description\": \"Any of the range of line values available to the -ms-layout-grid-line property.\"\n                },\n                {\n                    name: \"mode\"\n                },\n                {\n                    name: \"type\"\n                }\n            ],\n            \"description\": \"Sets or retrieves the composite document grid properties that specify the layout of text characters.\"\n        },\n        {\n            name: \"-ms-layout-grid-char\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Largest character in the font of the element is used to set the character grid.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Default. No character grid is set.\"\n                }\n            ],\n            \"description\": \"Sets or retrieves the size of the character grid used for rendering the text content of an element.\",\n            \"restrictions\": [\n                \"enum\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-layout-grid-line\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Largest character in the font of the element is used to set the character grid.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Default. No grid line is set.\"\n                }\n            ],\n            \"description\": \"Sets or retrieves the gridline value used for rendering the text content of an element.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-layout-grid-mode\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"both\",\n                    \"description\": \"Default. Both the char and line grid modes are enabled. This setting is necessary to fully enable the layout grid on an element.\"\n                },\n                {\n                    name: \"char\",\n                    \"description\": \"Only a character grid is used. This is recommended for use with block-level elements, such as a blockquote, where the line grid is intended to be disabled.\"\n                },\n                {\n                    name: \"line\",\n                    \"description\": \"Only a line grid is used. This is recommended for use with inline elements, such as a span, to disable the horizontal grid on runs of text that act as a single entity in the grid layout.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No grid is used.\"\n                }\n            ],\n            \"description\": \"Gets or sets whether the text layout grid uses two dimensions.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-layout-grid-type\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"fixed\",\n                    \"description\": \"Grid used for monospaced layout. All noncursive characters are treated as equal; every character is centered within a single grid space by default.\"\n                },\n                {\n                    name: \"loose\",\n                    \"description\": \"Default. Grid used for Japanese and Korean characters.\"\n                },\n                {\n                    name: \"strict\",\n                    \"description\": \"Grid used for Chinese, as well as Japanese (Genko) and Korean characters. Only the ideographs, kanas, and wide characters are snapped to the grid.\"\n                }\n            ],\n            \"description\": \"Sets or retrieves the type of grid used for rendering the text content of an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-line-break\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.\"\n                },\n                {\n                    name: \"keep-all\",\n                    \"description\": \"Sequences of CJK characters can no longer break on implied break points. This option should only be used where the presence of word separator characters still creates line-breaking opportunities, as in Korean.\"\n                },\n                {\n                    name: \"newspaper\",\n                    \"description\": \"Breaks CJK scripts using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Breaks CJK scripts using a normal set of line-breaking rules.\"\n                },\n                {\n                    name: \"strict\",\n                    \"description\": \"Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'.\"\n                }\n            ],\n            \"description\": \"Specifies what set of line breaking restrictions are in effect within the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-overflow-style\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"No preference, UA should use the first scrolling method in the list that it supports.\"\n                },\n                {\n                    name: \"-ms-autohiding-scrollbar\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates the element does not display scrollbars or panning indicators, even when its content overflows.\"\n                },\n                {\n                    name: \"scrollbar\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | none | scrollbar | -ms-autohiding-scrollbar\",\n            \"description\": \"Specify whether content is clipped when it overflows the element's content area.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-perspective\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-perspective-origin\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-perspective-origin-x\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X  position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-perspective-origin-y\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-progress-appearance\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"bar\"\n                },\n                {\n                    name: \"ring\"\n                }\n            ],\n            \"description\": \"Gets or sets a value that specifies whether a progress control displays as a bar or a ring.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-3dlight-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-arrow-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the arrow elements of a scroll arrow.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-base-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-darkshadow-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the gutter of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-face-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-highlight-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-shadow-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scrollbar-track-color\",\n            browsers: [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"description\": \"Determines the color of the track element of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-chaining\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"chained\"\n                },\n                {\n                    name: \"none\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"chained | none\",\n            \"description\": \"Gets or sets a value that indicates the scrolling behavior that occurs when a user hits the content boundary during a manipulation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-limit\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n            \"description\": \"Gets or sets a shorthand value that sets values for the -ms-scroll-limit-x-min, -ms-scroll-limit-y-min, -ms-scroll-limit-x-max, and -ms-scroll-limit-y-max properties.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-limit-x-max\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | <length>\",\n            \"description\": \"Gets or sets a value that specifies the maximum value for the scrollLeft property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-limit-x-min\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"description\": \"Gets or sets a value that specifies the minimum value for the scrollLeft property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-limit-y-max\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | <length>\",\n            \"description\": \"Gets or sets a value that specifies the maximum value for the scrollTop property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-limit-y-min\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"description\": \"Gets or sets a value that specifies the minimum value for the scrollTop property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-rails\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"railed\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | railed\",\n            \"description\": \"Gets or sets a value that indicates whether or not small motions perpendicular to the primary axis of motion will result in either changes to both the scrollTop and scrollLeft properties or a change to the primary axis (for instance, either the scrollTop or scrollLeft properties will change, but not both).\",\n            \"restrictions\": [\n                \"enum\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-snap-points-x\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"snapInterval(100%, 100%)\"\n                },\n                {\n                    name: \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\",\n            \"description\": \"Gets or sets a value that defines where snap-points will be located along the x-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-snap-points-y\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"snapInterval(100%, 100%)\"\n                },\n                {\n                    name: \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\",\n            \"description\": \"Gets or sets a value that defines where snap-points will be located along the y-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-snap-type\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The visual viewport of this scroll container must ignore snap points, if any, when scrolled.\"\n                },\n                {\n                    name: \"mandatory\",\n                    \"description\": \"The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations.\"\n                },\n                {\n                    name: \"proximity\",\n                    \"description\": \"The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | proximity | mandatory\",\n            \"description\": \"Gets or sets a value that defines what type of snap-point should be used for the current element. There are two type of snap-points, with the primary difference being whether or not the user is guaranteed to always stop on a snap-point.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-snap-x\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"mandatory\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"proximity\"\n                },\n                {\n                    name: \"snapInterval(100%, 100%)\"\n                },\n                {\n                    name: \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n            \"description\": \"Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-x properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-snap-y\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"mandatory\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"proximity\"\n                },\n                {\n                    name: \"snapInterval(100%, 100%)\"\n                },\n                {\n                    name: \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n            \"description\": \"Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-y properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-scroll-translation\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"vertical-to-horizontal\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | vertical-to-horizontal\",\n            \"description\": \"Gets or sets a value that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-text-align-last\",\n            browsers: [\n                \"E\",\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                }\n            ],\n            \"description\": \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-text-autospace\",\n            browsers: [\n                \"E\",\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"ideograph-alpha\"\n                },\n                {\n                    name: \"ideograph-numeric\"\n                },\n                {\n                    name: \"ideograph-parenthesis\"\n                },\n                {\n                    name: \"ideograph-space\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No extra space is created.\"\n                },\n                {\n                    name: \"punctuation\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space\",\n            \"description\": \"Determines whether or not a full-width punctuation mark character should be trimmed if it appears at the beginning of a line, so that its 'ink' lines up with the first glyph in the line above and below.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-text-combine-horizontal\",\n            browsers: [\n                \"E\",\n                \"IE11\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Attempt to typeset horizontally all consecutive characters within the box such that they take up the space of a single character within the vertical line box.\"\n                },\n                {\n                    name: \"digits\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No special processing.\"\n                }\n            ],\n            \"description\": \"This property specifies the combination of multiple characters into the space of a single character.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-ms-text-justify\",\n            browsers: [\n                \"E\",\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality.\"\n                },\n                {\n                    name: \"distribute\",\n                    \"description\": \"Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property.\"\n                },\n                {\n                    name: \"inter-cluster\"\n                },\n                {\n                    name: \"inter-ideograph\"\n                },\n                {\n                    name: \"inter-word\"\n                },\n                {\n                    name: \"kashida\"\n                }\n            ],\n            \"description\": \"Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-text-kashida-space\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Sets or retrieves the ratio of kashida expansion to white space expansion when justifying lines of text in the object.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-text-overflow\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"clip\"\n                },\n                {\n                    name: \"ellipsis\"\n                }\n            ],\n            \"description\": \"Text can overflow for example when it is prevented from wrapping\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-text-size-adjust\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Renderers must use the default size adjustment when displaying on a small device.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Renderers must not do size adjustment when displaying on a small device.\"\n                }\n            ],\n            \"description\": \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n            \"restrictions\": [\n                \"enum\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-text-underline-position\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"alphabetic\",\n                    \"description\": \"The underline is aligned with the alphabetic baseline. In this case the underline is likely to cross some descenders.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent may use any algorithm to determine the underline's position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over.\"\n                },\n                {\n                    name: \"over\"\n                },\n                {\n                    name: \"under\"\n                }\n            ],\n            \"description\": \"Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements.This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-touch-action\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The element is a passive element, with several exceptions.\"\n                },\n                {\n                    name: \"double-tap-zoom\",\n                    \"description\": \"The element will zoom on double-tap.\"\n                },\n                {\n                    name: \"manipulation\",\n                    \"description\": \"The element is a manipulation-causing element.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The element is a manipulation-blocking element.\"\n                },\n                {\n                    name: \"pan-x\",\n                    \"description\": \"The element permits touch-driven panning on the horizontal axis. The touch pan is performed on the nearest ancestor with horizontally scrollable content.\"\n                },\n                {\n                    name: \"pan-y\",\n                    \"description\": \"The element permits touch-driven panning on the vertical axis. The touch pan is performed on the nearest ancestor with vertically scrollable content.\"\n                },\n                {\n                    name: \"pinch-zoom\",\n                    \"description\": \"The element permits pinch-zooming. The pinch-zoom is performed on the nearest ancestor with zoomable content.\"\n                }\n            ],\n            \"description\": \"Gets or sets a value that indicates whether and how a given region can be manipulated by the user.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-touch-select\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"grippers\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Grippers are always off.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"grippers | none\",\n            \"description\": \"Gets or sets a value that toggles the 'gripper' visual elements that enable touch text selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-transform\",\n            browsers: [\n                \"IE9-9\"\n            ],\n            values: [\n                {\n                    name: \"matrix()\"\n                },\n                {\n                    name: \"matrix3d()\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"rotate()\"\n                },\n                {\n                    name: \"rotate3d()\"\n                },\n                {\n                    name: \"rotateX('angle')\"\n                },\n                {\n                    name: \"rotateY('angle')\"\n                },\n                {\n                    name: \"rotateZ('angle')\"\n                },\n                {\n                    name: \"scale()\"\n                },\n                {\n                    name: \"scale3d()\"\n                },\n                {\n                    name: \"scaleX()\"\n                },\n                {\n                    name: \"scaleY()\"\n                },\n                {\n                    name: \"scaleZ()\"\n                },\n                {\n                    name: \"skew()\"\n                },\n                {\n                    name: \"skewX()\"\n                },\n                {\n                    name: \"skewY()\"\n                },\n                {\n                    name: \"translate()\"\n                },\n                {\n                    name: \"translate3d()\"\n                },\n                {\n                    name: \"translateX()\"\n                },\n                {\n                    name: \"translateY()\"\n                },\n                {\n                    name: \"translateZ()\"\n                }\n            ],\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-transform-origin\",\n            browsers: [\n                \"IE9-9\"\n            ],\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-transform-origin-x\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"The x coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-transform-origin-y\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"The y coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-transform-origin-z\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"The z coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-user-select\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"element\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"text\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | element | text\",\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-word-break\",\n            browsers: [\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"break-all\"\n                },\n                {\n                    name: \"keep-all\",\n                    \"description\": \"Block characters can no longer create implied break points.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Breaks non-CJK scripts according to their own rules.\"\n                }\n            ],\n            \"description\": \"Specifies line break opportunities for non-CJK scripts.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-word-wrap\",\n            browsers: [\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"break-word\",\n                    \"description\": \"An unbreakable 'word' may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Lines may break only at allowed break points.\"\n                }\n            ],\n            \"description\": \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-wrap-flow\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For floats an exclusion is created, for all other elements an exclusion is not created.\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Inline flow content can flow on all sides of the exclusion.\"\n                },\n                {\n                    name: \"clear\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"Inline flow content can wrap on the end side of the exclusion area but must leave the area to the start edge of the exclusion area empty.\"\n                },\n                {\n                    name: \"maximum\"\n                },\n                {\n                    name: \"minimum\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"Inline flow content can wrap on the start edge of the exclusion area but must leave the area to end edge of the exclusion area empty.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | both | start | end | maximum | clear\",\n            \"description\": \"An element becomes an exclusion when its 'wrap-flow' property has a computed value other than 'auto'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-wrap-margin\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"description\": \"Gets or sets a value that is used to offset the inner wrap shape from other shapes.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-wrap-through\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The exclusion element does not inherit its parent node's wrapping context. Its descendants are only subject to exclusion shapes defined inside the element.\"\n                },\n                {\n                    name: \"wrap\",\n                    \"description\": \"The exclusion element inherits its parent node's wrapping context. Its descendant inline content wraps around exclusions defined outside the element.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"wrap | none\",\n            \"description\": \"Specifies if an element inherits its parent wrapping context. In other words if it is subject to the exclusions defined outside the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-writing-mode\",\n            browsers: [\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"bt-lr\"\n                },\n                {\n                    name: \"bt-rl\"\n                },\n                {\n                    name: \"lr-bt\"\n                },\n                {\n                    name: \"lr-tb\"\n                },\n                {\n                    name: \"rl-bt\"\n                },\n                {\n                    name: \"rl-tb\"\n                },\n                {\n                    name: \"tb-lr\"\n                },\n                {\n                    name: \"tb-rl\"\n                }\n            ],\n            \"description\": \"Shorthand property for both 'direction' and 'block-progression'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-ms-zoom\",\n            browsers: [\n                \"IE8\"\n            ],\n            values: [\n                {\n                    name: \"normal\"\n                }\n            ],\n            \"description\": \"Sets or retrieves the magnification scale of the object.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-zoom-animation\",\n            browsers: [\n                \"IE10\"\n            ],\n            values: [\n                {\n                    name: \"default\"\n                },\n                {\n                    name: \"none\"\n                }\n            ],\n            \"description\": \"Gets or sets a value that indicates whether an animation is used when zooming.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"nav-down\",\n            browsers: [\n                \"O9.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    name: \"current\"\n                },\n                {\n                    name: \"root\"\n                }\n            ],\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"nav-index\",\n            browsers: [\n                \"O9.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The element's sequential navigation order is assigned automatically by the user agent.\"\n                }\n            ],\n            \"description\": \"Provides an input-method-neutral way of specifying the sequential navigation order (also known as 'tabbing order').\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"nav-left\",\n            browsers: [\n                \"O9.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    name: \"current\"\n                },\n                {\n                    name: \"root\"\n                }\n            ],\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"nav-right\",\n            browsers: [\n                \"O9.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    name: \"current\"\n                },\n                {\n                    name: \"root\"\n                }\n            ],\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"nav-up\",\n            browsers: [\n                \"O9.5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    name: \"current\"\n                },\n                {\n                    name: \"root\"\n                }\n            ],\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"negative\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol> <symbol>?\",\n            \"description\": \"@counter-style descriptor. Defines how to alter the representation when the counter value is negative.\",\n            \"restrictions\": [\n                \"image\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"-o-animation\",\n            browsers: [\n                \"O12\"\n            ],\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"enum\",\n                \"timing-function\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"-o-animation-delay\",\n            browsers: [\n                \"O12\"\n            ],\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-o-animation-direction\",\n            browsers: [\n                \"O12\"\n            ],\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-animation-duration\",\n            browsers: [\n                \"O12\"\n            ],\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-o-animation-fill-mode\",\n            browsers: [\n                \"O12\"\n            ],\n            values: [\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                }\n            ],\n            \"description\": \"Defines what values are applied by the animation outside the time it is executing.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-animation-iteration-count\",\n            browsers: [\n                \"O12\"\n            ],\n            values: [\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-animation-name\",\n            browsers: [\n                \"O12\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-animation-play-state\",\n            browsers: [\n                \"O12\"\n            ],\n            values: [\n                {\n                    name: \"paused\"\n                },\n                {\n                    name: \"running\"\n                }\n            ],\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-animation-timing-function\",\n            browsers: [\n                \"O12\"\n            ],\n            \"description\": \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"object-fit\",\n            browsers: [\n                \"E16\",\n                \"FF36\",\n                \"S10\",\n                \"C31\",\n                \"O19\"\n            ],\n            values: [\n                {\n                    name: \"contain\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height.\"\n                },\n                {\n                    name: \"cover\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The replaced content is not resized to fit inside the element's content box\"\n                },\n                {\n                    name: \"scale-down\"\n                }\n            ],\n            \"syntax\": \"fill | contain | cover | none | scale-down\",\n            \"description\": \"Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"object-position\",\n            browsers: [\n                \"E16\",\n                \"FF36\",\n                \"S10\",\n                \"C31\",\n                \"O19\"\n            ],\n            \"syntax\": \"<position>\",\n            \"description\": \"Determines the alignment of the replaced element inside its box.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-o-border-image\",\n            browsers: [\n                \"O11.6\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"repeat\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    name: \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-object-fit\",\n            browsers: [\n                \"O10.6\"\n            ],\n            values: [\n                {\n                    name: \"contain\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height.\"\n                },\n                {\n                    name: \"cover\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The replaced content is not resized to fit inside the element's content box\"\n                },\n                {\n                    name: \"scale-down\"\n                }\n            ],\n            \"description\": \"Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-object-position\",\n            browsers: [\n                \"O10.6\"\n            ],\n            \"description\": \"Determines the alignment of the replaced element inside its box.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"opacity\",\n            \"syntax\": \"<number>\",\n            \"description\": \"Opacity of an element's text, where 1 is opaque and 0 is entirely transparent.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            name: \"order\",\n            \"syntax\": \"<integer>\",\n            \"description\": \"Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"orphans\",\n            browsers: [\n                \"E12\",\n                \"C25\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"syntax\": \"<integer>\",\n            \"description\": \"Specifies the minimum number of line boxes in a block container that must be left in a fragment before a fragmentation break.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-o-table-baseline\",\n            browsers: [\n                \"O9.6\"\n            ],\n            \"description\": \"Determines which row of a inline-table should be used as baseline of inline-table.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-o-tab-size\",\n            browsers: [\n                \"O10.6\"\n            ],\n            \"description\": \"This property determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.\",\n            \"restrictions\": [\n                \"integer\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-o-text-overflow\",\n            browsers: [\n                \"O10\"\n            ],\n            values: [\n                {\n                    name: \"clip\"\n                },\n                {\n                    name: \"ellipsis\"\n                }\n            ],\n            \"description\": \"Text can overflow for example when it is prevented from wrapping\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-transform\",\n            browsers: [\n                \"O10.5\"\n            ],\n            values: [\n                {\n                    name: \"matrix()\"\n                },\n                {\n                    name: \"matrix3d()\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"rotate()\"\n                },\n                {\n                    name: \"rotate3d()\"\n                },\n                {\n                    name: \"rotateX('angle')\"\n                },\n                {\n                    name: \"rotateY('angle')\"\n                },\n                {\n                    name: \"rotateZ('angle')\"\n                },\n                {\n                    name: \"scale()\"\n                },\n                {\n                    name: \"scale3d()\"\n                },\n                {\n                    name: \"scaleX()\"\n                },\n                {\n                    name: \"scaleY()\"\n                },\n                {\n                    name: \"scaleZ()\"\n                },\n                {\n                    name: \"skew()\"\n                },\n                {\n                    name: \"skewX()\"\n                },\n                {\n                    name: \"skewY()\"\n                },\n                {\n                    name: \"translate()\"\n                },\n                {\n                    name: \"translate3d()\"\n                },\n                {\n                    name: \"translateX()\"\n                },\n                {\n                    name: \"translateY()\"\n                },\n                {\n                    name: \"translateZ()\"\n                }\n            ],\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-transform-origin\",\n            browsers: [\n                \"O10.5\"\n            ],\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"positon\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-o-transition\",\n            browsers: [\n                \"O11.5\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-o-transition-delay\",\n            browsers: [\n                \"O11.5\"\n            ],\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-o-transition-duration\",\n            browsers: [\n                \"O11.5\"\n            ],\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-o-transition-property\",\n            browsers: [\n                \"O11.5\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            name: \"-o-transition-timing-function\",\n            browsers: [\n                \"O11.5\"\n            ],\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"offset-block-end\",\n            browsers: [\n                \"FF41\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"description\": \"Logical 'bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"offset-block-start\",\n            browsers: [\n                \"FF41\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"description\": \"Logical 'top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"offset-inline-end\",\n            browsers: [\n                \"FF41\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"description\": \"Logical 'right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"offset-inline-start\",\n            browsers: [\n                \"FF41\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"description\": \"Logical 'left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"outline\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Permits the user agent to render a custom outline style, typically the default platform style.\"\n                },\n                {\n                    name: \"invert\"\n                }\n            ],\n            \"syntax\": \"[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]\",\n            \"description\": \"Shorthand property for 'outline-style', 'outline-width', and 'outline-color'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"outline-color\",\n            values: [\n                {\n                    name: \"invert\"\n                }\n            ],\n            \"syntax\": \"<color> | invert\",\n            \"description\": \"The color of the outline.\",\n            \"restrictions\": [\n                \"enum\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"outline-offset\",\n            browsers: [\n                \"FF1.5\",\n                \"S1.2\",\n                \"C1\",\n                \"O9.5\"\n            ],\n            \"syntax\": \"<length>\",\n            \"description\": \"Offset the outline and draw it beyond the border edge.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"outline-style\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Permits the user agent to render a custom outline style, typically the default platform style.\"\n                }\n            ],\n            \"syntax\": \"auto | <'border-style'>\",\n            \"description\": \"Style of the outline.\",\n            \"restrictions\": [\n                \"line-style\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"outline-width\",\n            \"syntax\": \"<line-width>\",\n            \"description\": \"Width of the outline.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"overflow\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                },\n                {\n                    name: \"hidden\",\n                    \"description\": \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                },\n                {\n                    name: \"-moz-hidden-unscrollable\"\n                },\n                {\n                    name: \"scroll\",\n                    \"description\": \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                },\n                {\n                    name: \"visible\",\n                    \"description\": \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                }\n            ],\n            \"syntax\": \"[ visible | hidden | clip | scroll | auto ]{1,2}\",\n            \"description\": \"Shorthand for setting 'overflow-x' and 'overflow-y'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"overflow-wrap\",\n            values: [\n                {\n                    name: \"break-word\",\n                    \"description\": \"An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Lines may break only at allowed break points.\"\n                }\n            ],\n            \"syntax\": \"normal | break-word\",\n            \"description\": \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit within the line box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"overflow-x\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                },\n                {\n                    name: \"hidden\",\n                    \"description\": \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                },\n                {\n                    name: \"scroll\",\n                    \"description\": \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                },\n                {\n                    name: \"visible\",\n                    \"description\": \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden | clip | scroll | auto\",\n            \"description\": \"Specifies the handling of overflow in the horizontal direction.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"overflow-y\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                },\n                {\n                    name: \"hidden\",\n                    \"description\": \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                },\n                {\n                    name: \"scroll\",\n                    \"description\": \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                },\n                {\n                    name: \"visible\",\n                    \"description\": \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden | clip | scroll | auto\",\n            \"description\": \"Specifies the handling of overflow in the vertical direction.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"pad\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"<integer> && <symbol>\",\n            \"description\": \"@counter-style descriptor. Specifies a “fixed-width” counter style, where representations shorter than the pad value are padded with a particular <symbol>\",\n            \"restrictions\": [\n                \"integer\",\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"padding\",\n            values: [],\n            \"syntax\": \"[ <length> | <percentage> ]{1,4}\",\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-bottom\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-block-end\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"description\": \"Logical 'padding-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-block-start\",\n            browsers: [\n                \"FF41\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"description\": \"Logical 'padding-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-inline-end\",\n            browsers: [\n                \"FF41\",\n                \"S3\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"description\": \"Logical 'padding-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-inline-start\",\n            browsers: [\n                \"FF41\",\n                \"S3\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"description\": \"Logical 'padding-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-left\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-right\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"padding-top\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"page-break-after\",\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page break after generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page break after the generated box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | always | avoid | left | right | recto | verso\",\n            \"description\": \"Defines rules for page breaks after an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"page-break-before\",\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page break before the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page break before the generated box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | always | avoid | left | right | recto | verso\",\n            \"description\": \"Defines rules for page breaks before an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"page-break-inside\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page break inside the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page break inside the generated box.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid\",\n            \"description\": \"Defines rules for page breaks inside an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"paint-order\",\n            browsers: [\n                \"FF60\",\n                \"S\"\n            ],\n            values: [\n                {\n                    name: \"fill\"\n                },\n                {\n                    name: \"markers\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"The element is painted with the standard order of painting operations: the 'fill' is painted first, then its 'stroke' and finally its markers.\"\n                },\n                {\n                    name: \"stroke\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"normal | [ fill || stroke || markers ]\",\n            \"description\": \"Controls the order that the three paint operations that shapes and text are rendered with: their fill, their stroke and any markers they might have.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"perspective\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"syntax\": \"none | <length>\",\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"perspective-origin\",\n            \"syntax\": \"<position>\",\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"pointer-events\",\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"The given element can be the target element for pointer events whenever the pointer is over either the interior or the perimeter of the element.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"The given element can be the target element for pointer events whenever the pointer is over the interior of the element.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The given element does not receive pointer events.\"\n                },\n                {\n                    name: \"painted\"\n                },\n                {\n                    name: \"stroke\",\n                    \"description\": \"The given element can be the target element for pointer events whenever the pointer is over the perimeter of the element.\"\n                },\n                {\n                    name: \"visible\",\n                    \"description\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and the pointer is over either the interior or the perimete of the element.\"\n                },\n                {\n                    name: \"visibleFill\"\n                },\n                {\n                    name: \"visiblePainted\"\n                },\n                {\n                    name: \"visibleStroke\"\n                }\n            ],\n            \"syntax\": \"auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\",\n            \"description\": \"Specifies under what circumstances a given element can be the target element for a pointer event.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"position\",\n            values: [\n                {\n                    name: \"absolute\"\n                },\n                {\n                    name: \"fixed\",\n                    \"description\": \"The box's position is calculated according to the 'absolute' model, but in addition, the box is fixed with respect to some reference. As with the 'absolute' model, the box's margins do not collapse with any other margins.\"\n                },\n                {\n                    name: \"-ms-page\"\n                },\n                {\n                    name: \"relative\"\n                },\n                {\n                    name: \"static\"\n                },\n                {\n                    name: \"sticky\"\n                },\n                {\n                    name: \"-webkit-sticky\"\n                }\n            ],\n            \"syntax\": \"static | relative | absolute | sticky | fixed\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"prefix\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol>\",\n            \"description\": \"@counter-style descriptor. Specifies a <symbol> that is prepended to the marker representation.\",\n            \"restrictions\": [\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"quotes\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The 'open-quote' and 'close-quote' values of the 'content' property produce no quotations marks, as if they were 'no-open-quote' and 'no-close-quote' respectively.\"\n                }\n            ],\n            \"syntax\": \"none | [ <string> <string> ]+\",\n            \"description\": \"Specifies quotation marks for any number of embedded quotations.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            name: \"range\",\n            browsers: [\n                \"FF33\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The range depends on the counter system.\"\n                },\n                {\n                    name: \"infinite\",\n                    \"description\": \"If used as the first value in a range, it represents negative infinity; if used as the second value, it represents positive infinity.\"\n                }\n            ],\n            \"syntax\": \"[ [ <integer> | infinite ]{2} ]# | auto\",\n            \"description\": \"@counter-style descriptor. Defines the ranges over which the counter style is defined.\",\n            \"restrictions\": [\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"resize\",\n            browsers: [\n                \"FF\",\n                \"S3\",\n                \"C1\",\n                \"O12.1\"\n            ],\n            values: [\n                {\n                    name: \"both\",\n                    \"description\": \"The UA presents a bidirectional resizing mechanism to allow the user to adjust both the height and the width of the element.\"\n                },\n                {\n                    name: \"horizontal\",\n                    \"description\": \"The UA presents a unidirectional horizontal resizing mechanism to allow the user to adjust only the width of the element.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The UA does not present a resizing mechanism on the element, and the user is given no direct manipulation mechanism to resize the element.\"\n                },\n                {\n                    name: \"vertical\",\n                    \"description\": \"The UA presents a unidirectional vertical resizing mechanism to allow the user to adjust only the height of the element.\"\n                }\n            ],\n            \"syntax\": \"none | both | horizontal | vertical | block | inline\",\n            \"description\": \"Specifies whether or not an element is resizable by the user, and if so, along which axis/axes.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"right\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Specifies how far an absolutely positioned box's right margin edge is offset to the left of the right edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"ruby-align\",\n            browsers: [\n                \"FF38\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    browsers: [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The user agent determines how the ruby contents are aligned. This is the initial value.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The ruby content is centered within its box.\"\n                },\n                {\n                    name: \"distribute-letter\",\n                    browsers: [\n                        \"FF38\"\n                    ]\n                },\n                {\n                    name: \"distribute-space\",\n                    browsers: [\n                        \"FF38\"\n                    ]\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The ruby text content is aligned with the start edge of the base.\"\n                },\n                {\n                    name: \"line-edge\",\n                    browsers: [\n                        \"FF38\"\n                    ]\n                },\n                {\n                    name: \"right\",\n                    browsers: [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The ruby text content is aligned with the end edge of the base.\"\n                },\n                {\n                    name: \"start\",\n                    browsers: [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The ruby text content is aligned with the start edge of the base.\"\n                },\n                {\n                    name: \"space-between\",\n                    browsers: [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The ruby content expands as defined for normal text justification (as defined by 'text-justify'),\"\n                },\n                {\n                    name: \"space-around\",\n                    browsers: [\n                        \"FF38\"\n                    ],\n                    \"description\": \"As for 'space-between' except that there exists an extra justification opportunities whose space is distributed half before and half after the ruby content.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"start | center | space-between | space-around\",\n            \"description\": \"Specifies how text is distributed within the various ruby boxes when their contents do not exactly fill their respective boxes.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"ruby-overhang\",\n            browsers: [\n                \"FF10\",\n                \"IE5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The ruby text can overhang text adjacent to the base on either side. This is the initial value.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"The ruby text can overhang the text that follows it.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The ruby text cannot overhang any text adjacent to its base, only its own base.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"The ruby text can overhang the text that precedes it.\"\n                }\n            ],\n            \"description\": \"Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"ruby-position\",\n            browsers: [\n                \"E12\",\n                \"FF38\"\n            ],\n            values: [\n                {\n                    name: \"after\"\n                },\n                {\n                    name: \"before\"\n                },\n                {\n                    name: \"inline\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The ruby text appears on the right of the base. Unlike 'before' and 'after', this value is not relative to the text flow direction.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"over | under | inter-character\",\n            \"description\": \"Used by the parent of elements with display: ruby-text to control the position of the ruby text with respect to its base.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"ruby-span\",\n            browsers: [\n                \"FF10\"\n            ],\n            values: [\n                {\n                    name: \"attr(x)\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No spanning. The computed value is '1'.\"\n                }\n            ],\n            \"description\": \"Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"scrollbar-3dlight-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-arrow-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the arrow elements of a scroll arrow.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-base-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-darkshadow-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the gutter of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-face-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-highlight-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-shadow-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scrollbar-track-color\",\n            browsers: [\n                \"IE6\"\n            ],\n            \"description\": \"Determines the color of the track element of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"scroll-behavior\",\n            browsers: [\n                \"FF36\",\n                \"C61\",\n                \"O48\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Scrolls in an instant fashion.\"\n                },\n                {\n                    name: \"smooth\"\n                }\n            ],\n            \"syntax\": \"auto | smooth\",\n            \"description\": \"Specifies the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling APIs.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"scroll-snap-coordinate\",\n            browsers: [\n                \"FF39\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Specifies that this element does not contribute a snap point.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | <position>#\",\n            \"description\": \"Defines the x and y coordinate within the element which will align with the nearest ancestor scroll container’s snap-destination for the respective axis.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"scroll-snap-destination\",\n            browsers: [\n                \"FF39\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<position>\",\n            \"description\": \"Define the x and y coordinate within the scroll container’s visual viewport which element snap points will align with.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"scroll-snap-points-x\",\n            browsers: [\n                \"FF39\",\n                \"S9\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No snap points are defined by this scroll container.\"\n                },\n                {\n                    name: \"repeat()\",\n                    \"description\": \"Defines an interval at which snap points are defined, starting from the container’s relevant start edge.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | repeat( <length-percentage> )\",\n            \"description\": \"Defines the positioning of snap points along the x axis of the scroll container it is applied to.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"scroll-snap-points-y\",\n            browsers: [\n                \"FF39\",\n                \"S9\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No snap points are defined by this scroll container.\"\n                },\n                {\n                    name: \"repeat()\",\n                    \"description\": \"Defines an interval at which snap points are defined, starting from the container’s relevant start edge.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | repeat( <length-percentage> )\",\n            \"description\": \"Defines the positioning of snap points alobg the y axis of the scroll container it is applied to.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"scroll-snap-type\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The visual viewport of this scroll container must ignore snap points, if any, when scrolled.\"\n                },\n                {\n                    name: \"mandatory\",\n                    \"description\": \"The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations.\"\n                },\n                {\n                    name: \"proximity\",\n                    \"description\": \"The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll.\"\n                }\n            ],\n            \"syntax\": \"none | [ x | y | block | inline | both ] [ mandatory | proximity ]\",\n            \"description\": \"Defines how strictly snap points are enforced on the scroll container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"shape-image-threshold\",\n            browsers: [\n                \"FF62\",\n                \"S10.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            \"syntax\": \"<number>\",\n            \"description\": \"Defines the alpha channel threshold used to extract the shape using an image. A value of 0.5 means that the shape will enclose all the pixels that are more than 50% opaque.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"shape-margin\",\n            browsers: [\n                \"FF62\",\n                \"S10.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            \"syntax\": \"<length-percentage>\",\n            \"description\": \"Adds a margin to a 'shape-outside'. This defines a new shape that is the smallest contour that includes all the points that are the 'shape-margin' distance outward in the perpendicular direction from a point on the underlying shape.\",\n            \"restrictions\": [\n                \"url\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"shape-outside\",\n            browsers: [\n                \"FF62\",\n                \"S10.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            values: [\n                {\n                    name: \"margin-box\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The float area is unaffected.\"\n                }\n            ],\n            \"syntax\": \"none | <shape-box> || <basic-shape> | <image>\",\n            \"description\": \"Specifies an orthogonal rotation to be applied to an image before it is laid out.\",\n            \"restrictions\": [\n                \"image\",\n                \"box\",\n                \"shape\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"shape-rendering\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Suppresses aural rendering.\"\n                },\n                {\n                    name: \"crispEdges\"\n                },\n                {\n                    name: \"geometricPrecision\",\n                    \"description\": \"Emphasize geometric precision over speed and crisp edges.\"\n                },\n                {\n                    name: \"optimizeSpeed\",\n                    \"description\": \"Emphasize rendering speed over geometric precision and crisp edges.\"\n                }\n            ],\n            \"description\": \"Provides hints about what tradeoffs to make as it renders vector graphics elements such as <path> elements and basic shapes such as circles and rectangles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"size\",\n            browsers: [\n                \"C\",\n                \"O8\"\n            ],\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"src\",\n            values: [\n                {\n                    name: \"url()\",\n                    \"description\": \"Reference font by URL\"\n                },\n                {\n                    name: \"format()\"\n                },\n                {\n                    name: \"local()\"\n                }\n            ],\n            \"syntax\": \"[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#\",\n            \"description\": \"@font-face descriptor. Specifies the resource containing font data. It is required, whether the font is downloadable or locally installed.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"stop-color\",\n            \"description\": \"Indicates what color to use at that gradient stop.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"stop-opacity\",\n            \"description\": \"Defines the opacity of a given gradient stop.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            name: \"stroke\",\n            values: [\n                {\n                    name: \"url()\",\n                    \"description\": \"A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No paint is applied in this layer.\"\n                }\n            ],\n            \"description\": \"Paints along the outline of the given graphical element.\",\n            \"restrictions\": [\n                \"color\",\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"stroke-dasharray\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Indicates that no dashing is used.\"\n                }\n            ],\n            \"description\": \"Controls the pattern of dashes and gaps used to stroke paths.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"stroke-dashoffset\",\n            \"description\": \"Specifies the distance into the dash pattern to start the dash.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"stroke-linecap\",\n            values: [\n                {\n                    name: \"butt\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"Indicates that at each end of each subpath, the shape representing the stroke will be extended by a half circle with a radius equal to the stroke width.\"\n                },\n                {\n                    name: \"square\",\n                    \"description\": \"Indicates that at the end of each subpath, the shape representing the stroke will be extended by a rectangle with the same width as the stroke width and whose length is half of the stroke width.\"\n                }\n            ],\n            \"description\": \"Specifies the shape to be used at the end of open subpaths when they are stroked.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"stroke-linejoin\",\n            values: [\n                {\n                    name: \"bevel\"\n                },\n                {\n                    name: \"miter\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"Indicates that a round corner is to be used to join path segments.\"\n                }\n            ],\n            \"description\": \"Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"stroke-miterlimit\",\n            \"description\": \"When two line segments meet at a sharp angle and miter joins have been specified for 'stroke-linejoin', it is possible for the miter to extend far beyond the thickness of the line stroking the path.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"stroke-opacity\",\n            \"description\": \"Specifies the opacity of the painting operation used to stroke the current object.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            name: \"stroke-width\",\n            \"description\": \"Specifies the width of the stroke on the current object.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"suffix\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol>\",\n            \"description\": \"@counter-style descriptor. Specifies a <symbol> that is appended to the marker representation.\",\n            \"restrictions\": [\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"system\",\n            browsers: [\n                \"FF33\"\n            ],\n            values: [\n                {\n                    name: \"additive\"\n                },\n                {\n                    name: \"alphabetic\",\n                    \"description\": \"Interprets the list of counter symbols as digits to an alphabetic numbering system, similar to the default lower-alpha counter style, which wraps from \\\"a\\\", \\\"b\\\", \\\"c\\\", to \\\"aa\\\", \\\"ab\\\", \\\"ac\\\".\"\n                },\n                {\n                    name: \"cyclic\"\n                },\n                {\n                    name: \"extends\"\n                },\n                {\n                    name: \"fixed\",\n                    \"description\": \"Runs through its list of counter symbols once, then falls back.\"\n                },\n                {\n                    name: \"numeric\"\n                },\n                {\n                    name: \"symbolic\"\n                }\n            ],\n            \"syntax\": \"cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]\",\n            \"description\": \"@counter-style descriptor. Specifies which algorithm will be used to construct the counter’s representation based on the counter value.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"symbols\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol>+\",\n            \"description\": \"@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor.\",\n            \"restrictions\": [\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"table-layout\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Use any automatic table layout algorithm.\"\n                },\n                {\n                    name: \"fixed\",\n                    \"description\": \"Use the fixed table layout algorithm.\"\n                }\n            ],\n            \"syntax\": \"auto | fixed\",\n            \"description\": \"Controls the algorithm used to lay out the table cells, rows, and columns.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"tab-size\",\n            browsers: [\n                \"FF4\",\n                \"S6.1\",\n                \"C21\",\n                \"O15\"\n            ],\n            \"syntax\": \"<integer> | <length>\",\n            \"description\": \"Determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.\",\n            \"restrictions\": [\n                \"integer\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"text-align\",\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"The inline contents are aligned to the end edge of the line box.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"The inline contents are aligned to the start edge of the line box.\"\n                }\n            ],\n            \"syntax\": \"start | end | left | right | center | justify | match-parent\",\n            \"description\": \"Describes how inline contents of a block are horizontally aligned if the contents do not completely fill the line box.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            name: \"text-align-last\",\n            browsers: [\n                \"E12\",\n                \"FF49\",\n                \"C47\",\n                \"IE\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Content on the affected line is aligned per 'text-align' unless 'text-align' is set to 'justify', in which case it is 'start-aligned'.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                }\n            ],\n            \"syntax\": \"auto | start | end | left | right | center | justify\",\n            \"description\": \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-anchor\",\n            values: [\n                {\n                    name: \"end\",\n                    \"description\": \"The rendered characters are aligned such that the end of the resulting rendered text is at the initial current text position.\"\n                },\n                {\n                    name: \"middle\",\n                    \"description\": \"The rendered characters are aligned such that the geometric middle of the resulting rendered text is at the initial current text position.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"The rendered characters are aligned such that the start of the resulting rendered text is at the initial current text position.\"\n                }\n            ],\n            \"description\": \"Used to align (start-, middle- or end-alignment) a string of text relative to a given point.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-decoration\",\n            values: [\n                {\n                    name: \"dashed\"\n                },\n                {\n                    name: \"dotted\"\n                },\n                {\n                    name: \"double\"\n                },\n                {\n                    name: \"line-through\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Produces no line.\"\n                },\n                {\n                    name: \"overline\"\n                },\n                {\n                    name: \"solid\"\n                },\n                {\n                    name: \"underline\"\n                },\n                {\n                    name: \"wavy\"\n                }\n            ],\n            \"syntax\": \"<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'>\",\n            \"description\": \"Decorations applied to font used for an element's text.\",\n            \"restrictions\": [\n                \"enum\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"text-decoration-color\",\n            browsers: [\n                \"FF36\",\n                \"S\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<color>\",\n            \"description\": \"Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"text-decoration-line\",\n            browsers: [\n                \"FF36\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"line-through\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Neither produces nor inhibits text decoration.\"\n                },\n                {\n                    name: \"overline\"\n                },\n                {\n                    name: \"underline\"\n                }\n            ],\n            \"syntax\": \"none | [ underline || overline || line-through || blink ]\",\n            \"description\": \"Specifies what line decorations, if any, are added to the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-decoration-style\",\n            browsers: [\n                \"FF36\",\n                \"S\",\n                \"C57\",\n                \"O44\"\n            ],\n            values: [\n                {\n                    name: \"dashed\"\n                },\n                {\n                    name: \"dotted\"\n                },\n                {\n                    name: \"double\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Produces no line.\"\n                },\n                {\n                    name: \"solid\"\n                },\n                {\n                    name: \"wavy\"\n                }\n            ],\n            \"syntax\": \"solid | double | dotted | dashed | wavy\",\n            \"description\": \"Specifies the line style for underline, line-through and overline text decoration.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-indent\",\n            values: [],\n            \"syntax\": \"<length-percentage> && hanging? && each-line?\",\n            \"description\": \"Specifies the indentation applied to lines of inline content in a block. The indentation only affects the first line of inline content in the block unless the 'hanging' keyword is specified, in which case it affects all lines except the first.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"text-justify\",\n            browsers: [\n                \"E14\",\n                \"FF55\",\n                \"C\",\n                \"IE11\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality.\"\n                },\n                {\n                    name: \"distribute\",\n                    \"description\": \"Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property.\"\n                },\n                {\n                    name: \"distribute-all-lines\"\n                },\n                {\n                    name: \"inter-cluster\"\n                },\n                {\n                    name: \"inter-ideograph\"\n                },\n                {\n                    name: \"inter-word\"\n                },\n                {\n                    name: \"kashida\"\n                },\n                {\n                    name: \"newspaper\"\n                }\n            ],\n            \"syntax\": \"auto | inter-character | inter-word | none\",\n            \"description\": \"Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-orientation\",\n            browsers: [\n                \"FF41\",\n                \"C48\",\n                \"O\"\n            ],\n            values: [\n                {\n                    name: \"sideways\",\n                    browsers: [\n                        \"FF41\",\n                        \"C48\",\n                        \"O\"\n                    ]\n                },\n                {\n                    name: \"sideways-right\",\n                    browsers: [\n                        \"FF41\",\n                        \"C48\",\n                        \"O\"\n                    ]\n                },\n                {\n                    name: \"upright\"\n                }\n            ],\n            \"syntax\": \"mixed | upright | sideways\",\n            \"description\": \"Specifies the orientation of text within a line.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-overflow\",\n            values: [\n                {\n                    name: \"clip\"\n                },\n                {\n                    name: \"ellipsis\"\n                }\n            ],\n            \"syntax\": \"[ clip | ellipsis | <string> ]{1,2}\",\n            \"description\": \"Text can overflow for example when it is prevented from wrapping.\",\n            \"restrictions\": [\n                \"enum\",\n                \"string\"\n            ]\n        },\n        {\n            name: \"text-rendering\",\n            browsers: [\n                \"FF3\",\n                \"S5\",\n                \"C4\",\n                \"O15\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"geometricPrecision\",\n                    \"description\": \"Indicates that the user agent shall emphasize geometric precision over legibility and rendering speed.\"\n                },\n                {\n                    name: \"optimizeLegibility\"\n                },\n                {\n                    name: \"optimizeSpeed\",\n                    \"description\": \"Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision.\"\n                }\n            ],\n            \"syntax\": \"auto | optimizeSpeed | optimizeLegibility | geometricPrecision\",\n            \"description\": \"The creator of SVG content might want to provide a hint to the implementation about what tradeoffs to make as it renders text. The ‘text-rendering’ property provides these hints.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-shadow\",\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No shadow.\"\n                }\n            ],\n            \"syntax\": \"none | <shadow-t>#\",\n            \"description\": \"Enables shadow effects to be applied to the text of the element.\",\n            \"restrictions\": [\n                \"length\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"text-transform\",\n            values: [\n                {\n                    name: \"capitalize\"\n                },\n                {\n                    name: \"lowercase\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No effects.\"\n                },\n                {\n                    name: \"uppercase\"\n                }\n            ],\n            \"syntax\": \"none | capitalize | uppercase | lowercase | full-width\",\n            \"description\": \"Controls capitalization effects of an element’s text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"text-underline-position\",\n            browsers: [\n                \"E12\",\n                \"C33\",\n                \"IE6\"\n            ],\n            values: [\n                {\n                    name: \"above\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent may use any algorithm to determine the underline’s position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over.\"\n                },\n                {\n                    name: \"below\",\n                    \"description\": \"The underline is aligned with the under edge of the element’s content box.\"\n                }\n            ],\n            \"syntax\": \"auto | [ under || [ left | right ] ]\",\n            \"description\": \"Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements. This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"top\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"description\": \"Specifies how far an absolutely positioned box's top margin edge is offset below the top edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"touch-action\",\n            browsers: [\n                \"E12\",\n                \"FF52\",\n                \"C36\",\n                \"IE11\",\n                \"O23\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The user agent may determine any permitted touch behaviors for touches that begin on the element.\"\n                },\n                {\n                    name: \"cross-slide-x\",\n                    browsers: [\n                        \"E12\",\n                        \"FF52\",\n                        \"C36\",\n                        \"IE11\",\n                        \"O23\"\n                    ]\n                },\n                {\n                    name: \"cross-slide-y\",\n                    browsers: [\n                        \"E12\",\n                        \"FF52\",\n                        \"C36\",\n                        \"IE11\",\n                        \"O23\"\n                    ]\n                },\n                {\n                    name: \"double-tap-zoom\",\n                    browsers: [\n                        \"E12\",\n                        \"FF52\",\n                        \"C36\",\n                        \"IE11\",\n                        \"O23\"\n                    ]\n                },\n                {\n                    name: \"manipulation\",\n                    \"description\": \"The user agent may consider touches that begin on the element only for the purposes of scrolling and continuous zooming.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Touches that begin on the element must not trigger default touch behaviors.\"\n                },\n                {\n                    name: \"pan-x\",\n                    \"description\": \"The user agent may consider touches that begin on the element only for the purposes of horizontally scrolling the element’s nearest ancestor with horizontally scrollable content.\"\n                },\n                {\n                    name: \"pan-y\",\n                    \"description\": \"The user agent may consider touches that begin on the element only for the purposes of vertically scrolling the element’s nearest ancestor with vertically scrollable content.\"\n                },\n                {\n                    name: \"pinch-zoom\",\n                    browsers: [\n                        \"E12\",\n                        \"FF52\",\n                        \"C36\",\n                        \"IE11\",\n                        \"O23\"\n                    ]\n                }\n            ],\n            \"syntax\": \"auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation\",\n            \"description\": \"Determines whether touch input may trigger default behavior supplied by user agent.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"transform\",\n            values: [\n                {\n                    name: \"matrix()\"\n                },\n                {\n                    name: \"matrix3d()\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"perspective()\"\n                },\n                {\n                    name: \"rotate()\"\n                },\n                {\n                    name: \"rotate3d()\"\n                },\n                {\n                    name: \"rotateX('angle')\"\n                },\n                {\n                    name: \"rotateY('angle')\"\n                },\n                {\n                    name: \"rotateZ('angle')\"\n                },\n                {\n                    name: \"scale()\"\n                },\n                {\n                    name: \"scale3d()\"\n                },\n                {\n                    name: \"scaleX()\"\n                },\n                {\n                    name: \"scaleY()\"\n                },\n                {\n                    name: \"scaleZ()\"\n                },\n                {\n                    name: \"skew()\"\n                },\n                {\n                    name: \"skewX()\"\n                },\n                {\n                    name: \"skewY()\"\n                },\n                {\n                    name: \"translate()\"\n                },\n                {\n                    name: \"translate3d()\"\n                },\n                {\n                    name: \"translateX()\"\n                },\n                {\n                    name: \"translateY()\"\n                },\n                {\n                    name: \"translateZ()\"\n                }\n            ],\n            \"syntax\": \"none | <transform-list>\",\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"transform-origin\",\n            \"syntax\": \"[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\",\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"transform-style\",\n            browsers: [\n                \"E12\",\n                \"FF16\",\n                \"S\",\n                \"C12\",\n                \"O15\"\n            ],\n            values: [\n                {\n                    name: \"flat\"\n                },\n                {\n                    name: \"preserve-3d\",\n                    browsers: [\n                        \"E12\",\n                        \"FF16\",\n                        \"S\",\n                        \"C12\",\n                        \"O15\"\n                    ]\n                }\n            ],\n            \"syntax\": \"flat | preserve-3d\",\n            \"description\": \"Defines how nested elements are rendered in 3D space.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"transition\",\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"syntax\": \"<single-transition>#\",\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"transition-delay\",\n            \"syntax\": \"<time>#\",\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"transition-duration\",\n            \"syntax\": \"<time>#\",\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"transition-property\",\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"syntax\": \"none | <single-transition-property>#\",\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            name: \"transition-timing-function\",\n            \"syntax\": \"<single-transition-timing-function>#\",\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"unicode-bidi\",\n            values: [\n                {\n                    name: \"bidi-override\"\n                },\n                {\n                    name: \"embed\"\n                },\n                {\n                    name: \"isolate\",\n                    \"description\": \"The contents of the element are considered to be inside a separate, independent paragraph.\"\n                },\n                {\n                    name: \"isolate-override\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"The element does not open an additional level of embedding with respect to the bidirectional algorithm. For inline-level elements, implicit reordering works across element boundaries.\"\n                },\n                {\n                    name: \"plaintext\"\n                }\n            ],\n            \"syntax\": \"normal | embed | isolate | bidi-override | isolate-override | plaintext\",\n            \"description\": \"The level of embedding with respect to the bidirectional algorithm.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"unicode-range\",\n            values: [\n                {\n                    name: \"U+26\"\n                },\n                {\n                    name: \"U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F\"\n                },\n                {\n                    name: \"U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF\"\n                },\n                {\n                    name: \"U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD\"\n                },\n                {\n                    name: \"U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD\"\n                },\n                {\n                    name: \"U+00-7F\"\n                },\n                {\n                    name: \"U+80-FF\"\n                },\n                {\n                    name: \"U+100-17F\"\n                },\n                {\n                    name: \"U+180-24F\"\n                },\n                {\n                    name: \"U+1E00-1EFF\"\n                },\n                {\n                    name: \"U+250-2AF\"\n                },\n                {\n                    name: \"U+370-3FF\"\n                },\n                {\n                    name: \"U+1F00-1FFF\"\n                },\n                {\n                    name: \"U+400-4FF\"\n                },\n                {\n                    name: \"U+500-52F\"\n                },\n                {\n                    name: \"U+00-52F, U+1E00-1FFF, U+2200–22FF\"\n                },\n                {\n                    name: \"U+530–58F\"\n                },\n                {\n                    name: \"U+590–5FF\"\n                },\n                {\n                    name: \"U+600–6FF\"\n                },\n                {\n                    name: \"U+750–77F\"\n                },\n                {\n                    name: \"U+8A0–8FF\"\n                },\n                {\n                    name: \"U+700–74F\"\n                },\n                {\n                    name: \"U+900–97F\"\n                },\n                {\n                    name: \"U+980–9FF\"\n                },\n                {\n                    name: \"U+A00–A7F\"\n                },\n                {\n                    name: \"U+A80–AFF\"\n                },\n                {\n                    name: \"U+B00–B7F\"\n                },\n                {\n                    name: \"U+B80–BFF\"\n                },\n                {\n                    name: \"U+C00–C7F\"\n                },\n                {\n                    name: \"U+C80–CFF\"\n                },\n                {\n                    name: \"U+D00–D7F\"\n                },\n                {\n                    name: \"U+D80–DFF\"\n                },\n                {\n                    name: \"U+118A0–118FF\"\n                },\n                {\n                    name: \"U+E00–E7F\"\n                },\n                {\n                    name: \"U+1A20–1AAF\"\n                },\n                {\n                    name: \"U+AA80–AADF\"\n                },\n                {\n                    name: \"U+E80–EFF\"\n                },\n                {\n                    name: \"U+F00–FFF\"\n                },\n                {\n                    name: \"U+1000–109F\"\n                },\n                {\n                    name: \"U+10A0–10FF\"\n                },\n                {\n                    name: \"U+1200–137F\"\n                },\n                {\n                    name: \"U+1380–139F\"\n                },\n                {\n                    name: \"U+2D80–2DDF\"\n                },\n                {\n                    name: \"U+AB00–AB2F\"\n                },\n                {\n                    name: \"U+1780–17FF\"\n                },\n                {\n                    name: \"U+1800–18AF\"\n                },\n                {\n                    name: \"U+1B80–1BBF\"\n                },\n                {\n                    name: \"U+1CC0–1CCF\"\n                },\n                {\n                    name: \"U+4E00–9FD5\"\n                },\n                {\n                    name: \"U+3400–4DB5\"\n                },\n                {\n                    name: \"U+2F00–2FDF\"\n                },\n                {\n                    name: \"U+2E80–2EFF\"\n                },\n                {\n                    name: \"U+1100–11FF\"\n                },\n                {\n                    name: \"U+AC00–D7AF\"\n                },\n                {\n                    name: \"U+3040–309F\"\n                },\n                {\n                    name: \"U+30A0–30FF\"\n                },\n                {\n                    name: \"U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F\"\n                },\n                {\n                    name: \"U+A4D0–A4FF\"\n                },\n                {\n                    name: \"U+A000–A48F\"\n                },\n                {\n                    name: \"U+A490–A4CF\"\n                },\n                {\n                    name: \"U+2000-206F\"\n                },\n                {\n                    name: \"U+3000–303F\"\n                },\n                {\n                    name: \"U+2070–209F\"\n                },\n                {\n                    name: \"U+20A0–20CF\"\n                },\n                {\n                    name: \"U+2100–214F\"\n                },\n                {\n                    name: \"U+2150–218F\"\n                },\n                {\n                    name: \"U+2190–21FF\"\n                },\n                {\n                    name: \"U+2200–22FF\"\n                },\n                {\n                    name: \"U+2300–23FF\"\n                },\n                {\n                    name: \"U+E000-F8FF\"\n                },\n                {\n                    name: \"U+FB00–FB4F\"\n                },\n                {\n                    name: \"U+FB50–FDFF\"\n                },\n                {\n                    name: \"U+1F600–1F64F\"\n                },\n                {\n                    name: \"U+2600–26FF\"\n                },\n                {\n                    name: \"U+1F300–1F5FF\"\n                },\n                {\n                    name: \"U+1F900–1F9FF\"\n                },\n                {\n                    name: \"U+1F680–1F6FF\"\n                }\n            ],\n            \"syntax\": \"<unicode-range>#\",\n            \"description\": \"@font-face descriptor. Defines the set of Unicode codepoints that may be supported by the font face for which it is declared.\",\n            \"restrictions\": [\n                \"unicode-range\"\n            ]\n        },\n        {\n            name: \"user-select\",\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"The content of the element must be selected atomically\"\n                },\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"contain\",\n                    \"description\": \"UAs must not allow a selection which is started in this element to be extended outside of this element.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The UA must not allow selections to be started in this element.\"\n                },\n                {\n                    name: \"text\",\n                    \"description\": \"The element imposes no constraint on the selection.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | text | none | contain | all\",\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"vertical-align\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Align the dominant baseline of the parent box with the equivalent, or heuristically reconstructed, baseline of the element inline box.\"\n                },\n                {\n                    name: \"baseline\",\n                    \"description\": \"Align the 'alphabetic' baseline of the element with the 'alphabetic' baseline of the parent element.\"\n                },\n                {\n                    name: \"bottom\",\n                    \"description\": \"Align the after edge of the extended inline box with the after-edge of the line box.\"\n                },\n                {\n                    name: \"middle\",\n                    \"description\": \"Align the 'middle' baseline of the inline element with the middle baseline of the parent.\"\n                },\n                {\n                    name: \"sub\",\n                    \"description\": \"Lower the baseline of the box to the proper position for subscripts of the parent's box. (This value has no effect on the font size of the element's text.)\"\n                },\n                {\n                    name: \"super\",\n                    \"description\": \"Raise the baseline of the box to the proper position for superscripts of the parent's box. (This value has no effect on the font size of the element's text.)\"\n                },\n                {\n                    name: \"text-bottom\"\n                },\n                {\n                    name: \"text-top\"\n                },\n                {\n                    name: \"top\",\n                    \"description\": \"Align the before edge of the extended inline box with the before-edge of the line box.\"\n                },\n                {\n                    name: \"-webkit-baseline-middle\"\n                }\n            ],\n            \"syntax\": \"baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>\",\n            \"description\": \"Affects the vertical positioning of the inline boxes generated by an inline-level element inside a line box.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"visibility\",\n            values: [\n                {\n                    name: \"collapse\",\n                    \"description\": \"Table-specific. If used on elements other than rows, row groups, columns, or column groups, 'collapse' has the same meaning as 'hidden'.\"\n                },\n                {\n                    name: \"hidden\",\n                    \"description\": \"The generated box is invisible (fully transparent, nothing is drawn), but still affects layout.\"\n                },\n                {\n                    name: \"visible\",\n                    \"description\": \"The generated box is visible.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden | collapse\",\n            \"description\": \"Specifies whether the boxes generated by an element are rendered. Invisible boxes still affect layout (set the ‘display’ property to ‘none’ to suppress box generation altogether).\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-animation\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"enum\",\n                \"timing-function\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-delay\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-direction\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"alternate\"\n                },\n                {\n                    name: \"alternate-reverse\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-duration\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-fill-mode\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"backwards\"\n                },\n                {\n                    name: \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    name: \"forwards\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                }\n            ],\n            \"description\": \"Defines what values are applied by the animation outside the time it is executing.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-iteration-count\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-name\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-play-state\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"paused\"\n                },\n                {\n                    name: \"running\"\n                }\n            ],\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-animation-timing-function\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"-webkit-appearance\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"button\"\n                },\n                {\n                    name: \"button-bevel\"\n                },\n                {\n                    name: \"caps-lock-indicator\"\n                },\n                {\n                    name: \"caret\"\n                },\n                {\n                    name: \"checkbox\"\n                },\n                {\n                    name: \"default-button\"\n                },\n                {\n                    name: \"listbox\"\n                },\n                {\n                    name: \"listitem\"\n                },\n                {\n                    name: \"media-fullscreen-button\"\n                },\n                {\n                    name: \"media-mute-button\"\n                },\n                {\n                    name: \"media-play-button\"\n                },\n                {\n                    name: \"media-seek-back-button\"\n                },\n                {\n                    name: \"media-seek-forward-button\"\n                },\n                {\n                    name: \"media-slider\"\n                },\n                {\n                    name: \"media-sliderthumb\"\n                },\n                {\n                    name: \"menulist\"\n                },\n                {\n                    name: \"menulist-button\"\n                },\n                {\n                    name: \"menulist-text\"\n                },\n                {\n                    name: \"menulist-textfield\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"push-button\"\n                },\n                {\n                    name: \"radio\"\n                },\n                {\n                    name: \"scrollbarbutton-down\"\n                },\n                {\n                    name: \"scrollbarbutton-left\"\n                },\n                {\n                    name: \"scrollbarbutton-right\"\n                },\n                {\n                    name: \"scrollbarbutton-up\"\n                },\n                {\n                    name: \"scrollbargripper-horizontal\"\n                },\n                {\n                    name: \"scrollbargripper-vertical\"\n                },\n                {\n                    name: \"scrollbarthumb-horizontal\"\n                },\n                {\n                    name: \"scrollbarthumb-vertical\"\n                },\n                {\n                    name: \"scrollbartrack-horizontal\"\n                },\n                {\n                    name: \"scrollbartrack-vertical\"\n                },\n                {\n                    name: \"searchfield\"\n                },\n                {\n                    name: \"searchfield-cancel-button\"\n                },\n                {\n                    name: \"searchfield-decoration\"\n                },\n                {\n                    name: \"searchfield-results-button\"\n                },\n                {\n                    name: \"searchfield-results-decoration\"\n                },\n                {\n                    name: \"slider-horizontal\"\n                },\n                {\n                    name: \"sliderthumb-horizontal\"\n                },\n                {\n                    name: \"sliderthumb-vertical\"\n                },\n                {\n                    name: \"slider-vertical\"\n                },\n                {\n                    name: \"square-button\"\n                },\n                {\n                    name: \"textarea\"\n                },\n                {\n                    name: \"textfield\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield\",\n            \"description\": \"Changes the appearance of buttons and other controls to resemble native controls.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-backdrop-filter\",\n            browsers: [\n                \"S9\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No filter effects are applied.\"\n                },\n                {\n                    name: \"blur()\"\n                },\n                {\n                    name: \"brightness()\"\n                },\n                {\n                    name: \"contrast()\"\n                },\n                {\n                    name: \"drop-shadow()\"\n                },\n                {\n                    name: \"grayscale()\"\n                },\n                {\n                    name: \"hue-rotate()\"\n                },\n                {\n                    name: \"invert()\"\n                },\n                {\n                    name: \"opacity()\"\n                },\n                {\n                    name: \"saturate()\"\n                },\n                {\n                    name: \"sepia()\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"A filter reference to a <filter> element.\"\n                }\n            ],\n            \"description\": \"Applies a filter effect where the first filter in the list takes the element's background image as the input image.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"-webkit-backface-visibility\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"hidden\"\n                },\n                {\n                    name: \"visible\"\n                }\n            ],\n            \"description\": \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-background-clip\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Determines the background painting area.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"-webkit-background-composite\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"border\"\n                },\n                {\n                    name: \"padding\"\n                }\n            ],\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-background-origin\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"-webkit-border-image\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    name: \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"repeat\"\n                },\n                {\n                    name: \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    name: \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                },\n                {\n                    name: \"url()\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"url\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-box-align\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"baseline\",\n                    \"description\": \"If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used.\"\n                },\n                {\n                    name: \"center\",\n                    \"description\": \"Any extra space is divided evenly, with half placed above the child and the other half placed after the child.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element.\"\n                },\n                {\n                    name: \"stretch\",\n                    \"description\": \"The height of each child is adjusted to that of the containing block.\"\n                }\n            ],\n            \"description\": \"Specifies the alignment of nested elements within an outer flexible box element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-box-direction\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom.\"\n                },\n                {\n                    name: \"reverse\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top.\"\n                }\n            ],\n            \"description\": \"In webkit applications, -webkit-box-direction specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-box-flex\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Specifies an element's flexibility.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            name: \"-webkit-box-flex-group\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Flexible elements can be assigned to flex groups using the 'box-flex-group' property.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-webkit-box-ordinal-group\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-webkit-box-orient\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"block-axis\"\n                },\n                {\n                    name: \"horizontal\",\n                    \"description\": \"The box displays its children from left to right in a horizontal line.\"\n                },\n                {\n                    name: \"inline-axis\"\n                },\n                {\n                    name: \"vertical\",\n                    \"description\": \"The box displays its children from stacked from top to bottom vertically.\"\n                }\n            ],\n            \"description\": \"In webkit applications, -webkit-box-orient specifies whether a box lays out its contents horizontally or vertically.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-box-pack\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"center\",\n                    \"description\": \"The extra space is divided evenly, with half placed before the first child and the other half placed after the last child.\"\n                },\n                {\n                    name: \"end\",\n                    \"description\": \"For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child.\"\n                },\n                {\n                    name: \"justify\",\n                    \"description\": \"The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\"\n                },\n                {\n                    name: \"start\",\n                    \"description\": \"For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child.\"\n                }\n            ],\n            \"description\": \"Specifies alignment of child elements within the current element in the direction of orientation.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-box-reflect\",\n            browsers: [\n                \"S4\",\n                \"C4\",\n                \"O15\"\n            ],\n            values: [\n                {\n                    name: \"above\",\n                    \"description\": \"The reflection appears above the border box.\"\n                },\n                {\n                    name: \"below\",\n                    \"description\": \"The reflection appears below the border box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"The reflection appears to the left of the border box.\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"The reflection appears to the right of the border box.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ above | below | right | left ]? <length>? <image>?\",\n            \"description\": \"Defines a reflection of a border box.\"\n        },\n        {\n            name: \"-webkit-box-sizing\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"border-box\"\n                },\n                {\n                    name: \"content-box\"\n                }\n            ],\n            \"description\": \"Box Model addition in CSS3.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-break-after\",\n            browsers: [\n                \"S7\"\n            ],\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-region\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"region\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-break-before\",\n            browsers: [\n                \"S7\"\n            ],\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-region\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"region\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-break-inside\",\n            browsers: [\n                \"S7\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break inside the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page/column break inside the generated box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break inside the generated box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break inside the generated box.\"\n                },\n                {\n                    name: \"avoid-region\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior inside the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-column-break-after\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-region\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"region\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-column-break-before\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    name: \"avoid-region\"\n                },\n                {\n                    name: \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    name: \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    name: \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    name: \"region\"\n                },\n                {\n                    name: \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-column-break-inside\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break inside the generated box.\"\n                },\n                {\n                    name: \"avoid\",\n                    \"description\": \"Avoid a page/column break inside the generated box.\"\n                },\n                {\n                    name: \"avoid-column\",\n                    \"description\": \"Avoid a column break inside the generated box.\"\n                },\n                {\n                    name: \"avoid-page\",\n                    \"description\": \"Avoid a page break inside the generated box.\"\n                },\n                {\n                    name: \"avoid-region\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior inside the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-column-count\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Determines the number of columns by the 'column-width' property and the element width.\"\n                }\n            ],\n            \"description\": \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-webkit-column-gap\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"User agent specific and typically equivalent to 1em.\"\n                }\n            ],\n            \"description\": \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-webkit-column-rule\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"This property is a shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            name: \"-webkit-column-rule-color\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Sets the color of the column rule\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-webkit-column-rule-style\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Sets the style of the rule between columns of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            name: \"-webkit-column-rule-width\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Sets the width of the rule between columns. Negative values are not allowed.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            name: \"-webkit-columns\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"description\": \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n            \"restrictions\": [\n                \"length\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-webkit-column-span\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"The element does not span multiple columns.\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior after the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-column-width\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"description\": \"This property describes the width of columns in multicol elements.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-webkit-filter\",\n            browsers: [\n                \"C18\",\n                \"O15\",\n                \"S6\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No filter effects are applied.\"\n                },\n                {\n                    name: \"blur()\"\n                },\n                {\n                    name: \"brightness()\"\n                },\n                {\n                    name: \"contrast()\"\n                },\n                {\n                    name: \"drop-shadow()\"\n                },\n                {\n                    name: \"grayscale()\"\n                },\n                {\n                    name: \"hue-rotate()\"\n                },\n                {\n                    name: \"invert()\"\n                },\n                {\n                    name: \"opacity()\"\n                },\n                {\n                    name: \"saturate()\"\n                },\n                {\n                    name: \"sepia()\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"A filter reference to a <filter> element.\"\n                }\n            ],\n            \"description\": \"Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            name: \"-webkit-flow-from\",\n            browsers: [\n                \"S6.1\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The block container is not a CSS Region.\"\n                }\n            ],\n            \"description\": \"Makes a block container a region and associates it with a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"-webkit-flow-into\",\n            browsers: [\n                \"S6.1\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"The element is not moved to a named flow and normal CSS processing takes place.\"\n                }\n            ],\n            \"description\": \"Places an element or its contents into a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"-webkit-font-feature-settings\",\n            browsers: [\n                \"C16\"\n            ],\n            values: [\n                {\n                    name: \"\\\"c2cs\\\"\"\n                },\n                {\n                    name: \"\\\"dlig\\\"\"\n                },\n                {\n                    name: \"\\\"kern\\\"\"\n                },\n                {\n                    name: \"\\\"liga\\\"\"\n                },\n                {\n                    name: \"\\\"lnum\\\"\"\n                },\n                {\n                    name: \"\\\"onum\\\"\"\n                },\n                {\n                    name: \"\\\"smcp\\\"\"\n                },\n                {\n                    name: \"\\\"swsh\\\"\"\n                },\n                {\n                    name: \"\\\"tnum\\\"\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"No change in glyph substitution or positioning occurs.\"\n                },\n                {\n                    name: \"off\"\n                },\n                {\n                    name: \"on\"\n                }\n            ],\n            \"description\": \"This property provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n            \"restrictions\": [\n                \"string\",\n                \"integer\"\n            ]\n        },\n        {\n            name: \"-webkit-hyphens\",\n            browsers: [\n                \"S5.1\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    name: \"manual\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-line-break\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"after-white-space\"\n                },\n                {\n                    name: \"normal\"\n                }\n            ],\n            \"description\": \"Specifies line-breaking rules for CJK (Chinese, Japanese, and Korean) text.\"\n        },\n        {\n            name: \"-webkit-margin-bottom-collapse\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"collapse\"\n                },\n                {\n                    name: \"discard\"\n                },\n                {\n                    name: \"separate\"\n                }\n            ],\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-margin-collapse\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"collapse\"\n                },\n                {\n                    name: \"discard\"\n                },\n                {\n                    name: \"separate\"\n                }\n            ],\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-margin-start\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                }\n            ],\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-webkit-margin-top-collapse\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"collapse\"\n                },\n                {\n                    name: \"discard\"\n                },\n                {\n                    name: \"separate\"\n                }\n            ],\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-mask-clip\",\n            browsers: [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <box> | border | padding | content | text ]#\",\n            \"description\": \"Determines the mask painting area, which determines the area that is affected by the mask.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"-webkit-mask-image\",\n            browsers: [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"Counts as a transparent black image layer.\"\n                },\n                {\n                    name: \"url()\",\n                    \"description\": \"Reference to a <mask element or to a CSS image.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<mask-reference>#\",\n            \"description\": \"Sets the mask layer image of an element.\",\n            \"restrictions\": [\n                \"url\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-mask-origin\",\n            browsers: [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <box> | border | padding | content ]#\",\n            \"description\": \"Specifies the mask positioning area.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            name: \"-webkit-mask-repeat\",\n            browsers: [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<repeat-style>#\",\n            \"description\": \"Specifies how mask layer images are tiled after they have been sized and positioned.\",\n            \"restrictions\": [\n                \"repeat\"\n            ]\n        },\n        {\n            name: \"-webkit-mask-size\",\n            browsers: [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                },\n                {\n                    name: \"contain\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                },\n                {\n                    name: \"cover\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<bg-size>#\",\n            \"description\": \"Specifies the size of the mask layer images.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-nbsp-mode\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"normal\"\n                },\n                {\n                    name: \"space\"\n                }\n            ],\n            \"description\": \"Defines the behavior of nonbreaking spaces within text.\"\n        },\n        {\n            name: \"-webkit-overflow-scrolling\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"touch\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | touch\",\n            \"description\": \"Specifies whether to use native-style scrolling in an overflow:scroll element.\"\n        },\n        {\n            name: \"-webkit-padding-start\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-webkit-perspective\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ],\n            values: [\n                {\n                    name: \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            name: \"-webkit-perspective-origin\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ],\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            name: \"-webkit-region-fragment\",\n            browsers: [\n                \"S7\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Content flows as it would in a regular content box.\"\n                },\n                {\n                    name: \"break\"\n                }\n            ],\n            \"description\": \"The 'region-fragment' property controls the behavior of the last region associated with a named flow.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-tap-highlight-color\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"S3.1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-webkit-text-fill-color\",\n            browsers: [\n                \"E12\",\n                \"FF49\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-webkit-text-size-adjust\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Renderers must use the default size adjustment when displaying on a small device.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"Renderers must not do size adjustment when displaying on a small device.\"\n                }\n            ],\n            \"description\": \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-text-stroke\",\n            browsers: [\n                \"E15\",\n                \"FF49\",\n                \"S3.1\",\n                \"C4\",\n                \"O15\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length> || <color>\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"color\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-text-stroke-color\",\n            browsers: [\n                \"E15\",\n                \"FF49\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            name: \"-webkit-text-stroke-width\",\n            browsers: [\n                \"E15\",\n                \"FF49\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-touch-callout\",\n            browsers: [\n                \"S4\"\n            ],\n            values: [\n                {\n                    name: \"none\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"default | none\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-transform\",\n            browsers: [\n                \"C\",\n                \"O12\",\n                \"S3.1\"\n            ],\n            values: [\n                {\n                    name: \"matrix()\"\n                },\n                {\n                    name: \"matrix3d()\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"perspective()\"\n                },\n                {\n                    name: \"rotate()\"\n                },\n                {\n                    name: \"rotate3d()\"\n                },\n                {\n                    name: \"rotateX('angle')\"\n                },\n                {\n                    name: \"rotateY('angle')\"\n                },\n                {\n                    name: \"rotateZ('angle')\"\n                },\n                {\n                    name: \"scale()\"\n                },\n                {\n                    name: \"scale3d()\"\n                },\n                {\n                    name: \"scaleX()\"\n                },\n                {\n                    name: \"scaleY()\"\n                },\n                {\n                    name: \"scaleZ()\"\n                },\n                {\n                    name: \"skew()\"\n                },\n                {\n                    name: \"skewX()\"\n                },\n                {\n                    name: \"skewY()\"\n                },\n                {\n                    name: \"translate()\"\n                },\n                {\n                    name: \"translate3d()\"\n                },\n                {\n                    name: \"translateX()\"\n                },\n                {\n                    name: \"translateY()\"\n                },\n                {\n                    name: \"translateZ()\"\n                }\n            ],\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-transform-origin\",\n            browsers: [\n                \"C\",\n                \"O15\",\n                \"S3.1\"\n            ],\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-transform-origin-x\",\n            browsers: [\n                \"C\",\n                \"S3.1\"\n            ],\n            \"description\": \"The x coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-transform-origin-y\",\n            browsers: [\n                \"C\",\n                \"S3.1\"\n            ],\n            \"description\": \"The y coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-transform-origin-z\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ],\n            \"description\": \"The z coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-webkit-transform-style\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ],\n            values: [\n                {\n                    name: \"flat\"\n                }\n            ],\n            \"description\": \"Defines how nested elements are rendered in 3D space.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-transition\",\n            browsers: [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-transition-delay\",\n            browsers: [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-webkit-transition-duration\",\n            browsers: [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            name: \"-webkit-transition-property\",\n            browsers: [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            values: [\n                {\n                    name: \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    name: \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            name: \"-webkit-transition-timing-function\",\n            browsers: [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            name: \"-webkit-user-drag\",\n            browsers: [\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"element\"\n                },\n                {\n                    name: \"none\"\n                }\n            ],\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-user-modify\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"read-only\"\n                },\n                {\n                    name: \"read-write\"\n                },\n                {\n                    name: \"read-write-plaintext-only\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"read-only | read-write | read-write-plaintext-only\",\n            \"description\": \"Determines whether a user can edit the content of an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"-webkit-user-select\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            values: [\n                {\n                    name: \"auto\"\n                },\n                {\n                    name: \"none\"\n                },\n                {\n                    name: \"text\"\n                }\n            ],\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"white-space\",\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'normal'.\"\n                },\n                {\n                    name: \"nowrap\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'none'.\"\n                },\n                {\n                    name: \"pre\"\n                },\n                {\n                    name: \"pre-line\"\n                },\n                {\n                    name: \"pre-wrap\"\n                }\n            ],\n            \"syntax\": \"normal | pre | nowrap | pre-wrap | pre-line\",\n            \"description\": \"Shorthand property for the 'white-space-collapsing' and 'text-wrap' properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"widows\",\n            browsers: [\n                \"E12\",\n                \"C25\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"syntax\": \"<integer>\",\n            \"description\": \"Specifies the minimum number of line boxes of a block container that must be left in a fragment after a break.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"width\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                },\n                {\n                    name: \"fit-content\"\n                },\n                {\n                    name: \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    name: \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>{1,2}\",\n            \"description\": \"Specifies the width of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"will-change\",\n            browsers: [\n                \"FF36\",\n                \"S9.1\",\n                \"C36\",\n                \"O24\"\n            ],\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"Expresses no particular intent.\"\n                },\n                {\n                    name: \"contents\",\n                    \"description\": \"Indicates that the author expects to animate or change something about the element’s contents in the near future.\"\n                },\n                {\n                    name: \"scroll-position\"\n                }\n            ],\n            \"syntax\": \"auto | <animateable-feature>#\",\n            \"description\": \"Provides a rendering hint to the user agent, stating what kinds of changes the author expects to perform on the element.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\"\n            ]\n        },\n        {\n            name: \"word-break\",\n            values: [\n                {\n                    name: \"break-all\"\n                },\n                {\n                    name: \"keep-all\",\n                    \"description\": \"Block characters can no longer create implied break points.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Breaks non-CJK scripts according to their own rules.\"\n                }\n            ],\n            \"syntax\": \"normal | break-all | keep-all | break-word\",\n            \"description\": \"Specifies line break opportunities for non-CJK scripts.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"word-spacing\",\n            values: [\n                {\n                    name: \"normal\",\n                    \"description\": \"No additional spacing is applied. Computes to zero.\"\n                }\n            ],\n            \"syntax\": \"normal | <length-percentage>\",\n            \"description\": \"Specifies additional spacing between “words”.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"word-wrap\",\n            values: [\n                {\n                    name: \"break-word\",\n                    \"description\": \"An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                },\n                {\n                    name: \"normal\",\n                    \"description\": \"Lines may break only at allowed break points.\"\n                }\n            ],\n            \"syntax\": \"normal | break-word\",\n            \"description\": \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"writing-mode\",\n            values: [\n                {\n                    name: \"horizontal-tb\"\n                },\n                {\n                    name: \"sideways-lr\"\n                },\n                {\n                    name: \"sideways-rl\"\n                },\n                {\n                    name: \"vertical-lr\"\n                },\n                {\n                    name: \"vertical-rl\"\n                }\n            ],\n            \"syntax\": \"horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\",\n            \"description\": \"This is a shorthand property for both 'direction' and 'block-progression'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            name: \"z-index\",\n            values: [\n                {\n                    name: \"auto\",\n                    \"description\": \"The stack level of the generated box in the current stacking context is 0. The box does not establish a new stacking context unless it is the root element.\"\n                }\n            ],\n            \"syntax\": \"auto | <integer>\",\n            \"description\": \"For a positioned box, the 'z-index' property specifies the stack level of the box in the current stacking context and whether the box establishes a local stacking context.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            name: \"zoom\",\n            browsers: [\n                \"E12\",\n                \"S4\",\n                \"C\",\n                \"IE5.5\",\n                \"O15\"\n            ],\n            values: [\n                {\n                    name: \"normal\"\n                }\n            ],\n            \"syntax\": \"auto | <number> | <percentage>\",\n            \"description\": \"Non-standard. Specifies the magnification scale of the object. See 'transform: scale()' for a standards-based alternative.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            name: \"-ms-ime-align\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | after\",\n            \"description\": \"Aligns the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active.\"\n        },\n        {\n            name: \"-moz-binding\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<url> | none\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"The -moz-binding CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\"\n        },\n        {\n            name: \"-moz-context-properties\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | [ fill | fill-opacity | stroke | stroke-opacity ]#\",\n            browsers: [\n                \"FF55\"\n            ],\n            \"description\": \"If you reference an SVG image in a webpage (such as with the <img> element or as a background image), the SVG image can coordinate with the embedding element (its context) to have the image adopt property values set on the embedding element. To do this the embedding element needs to list the properties that are to be made available to the image by listing them as values of the -moz-context-properties property, and the image needs to opt in to using those properties by using values such as the context-fill value.\\n\\nThis feature is available since Firefox 55, but is only currently supported with SVG images loaded via chrome:// or resource:// URLs. To experiment with the feature in SVG on the Web it is necessary to set the svg.context-properties.content.enabled pref to true.\"\n        },\n        {\n            name: \"-moz-float-edge\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"border-box | content-box | margin-box | padding-box\",\n            \"description\": \"The non-standard -moz-float-edge CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.\"\n        },\n        {\n            name: \"-moz-force-broken-image-icon\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<integer>\",\n            \"description\": \"The -moz-force-broken-image-icon extended CSS property can be used to force the broken image icon to be shown even when a broken image has an alt attribute.\"\n        },\n        {\n            name: \"-moz-image-region\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<shape> | auto\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"For certain XUL elements and pseudo-elements that use an image from the list-style-image property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\"\n        },\n        {\n            name: \"-moz-orient\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"inline | block | horizontal | vertical\",\n            browsers: [\n                \"FF6\"\n            ],\n            \"description\": \"The -moz-orient CSS property specifies the orientation of the element to which it's applied.\"\n        },\n        {\n            name: \"-moz-outline-radius\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?\",\n            browsers: [\n                \"FF1.5\"\n            ],\n            \"description\": \"In Mozilla applications like Firefox, the -moz-outline-radius CSS property can be used to give an element's outline rounded corners.\"\n        },\n        {\n            name: \"-moz-outline-radius-bottomleft\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-bottomleft CSS property can be used to round the bottom-left corner of an element's outline.\"\n        },\n        {\n            name: \"-moz-outline-radius-bottomright\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-bottomright CSS property can be used to round the bottom-right corner of an element's outline.\"\n        },\n        {\n            name: \"-moz-outline-radius-topleft\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-topleft CSS property can be used to round the top-left corner of an element's outline.\"\n        },\n        {\n            name: \"-moz-outline-radius-topright\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-topright CSS property can be used to round the top-right corner of an element's outline.\"\n        },\n        {\n            name: \"-moz-stack-sizing\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"ignore | stretch-to-fit\",\n            \"description\": \"-moz-stack-sizing is an extended CSS property. Normally, a stack will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\"\n        },\n        {\n            name: \"-moz-text-blink\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | blink\",\n            browsers: [\n                \"FF6\"\n            ],\n            \"description\": \"The -moz-text-blink non-standard Mozilla CSS extension specifies the blink mode.\"\n        },\n        {\n            name: \"-moz-user-input\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | none | enabled | disabled\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"In Mozilla applications, -moz-user-input determines if an element will accept user input.\"\n        },\n        {\n            name: \"-moz-user-modify\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"read-only | read-write | write-only\",\n            \"description\": \"The -moz-user-modify property has no effect. It was originally planned to determine whether or not the content of an element can be edited by a user.\"\n        },\n        {\n            name: \"-moz-window-dragging\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"drag | no-drag\",\n            \"description\": \"The -moz-window-dragging CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.\"\n        },\n        {\n            name: \"-moz-window-shadow\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"default | menu | tooltip | sheet | none\",\n            \"description\": \"The -moz-window-shadow CSS property specifies whether a window will have a shadow. It only works on Mac OS X.\"\n        },\n        {\n            name: \"-webkit-border-before\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'border-width'> || <'border-style'> || <'color'>\",\n            browsers: [\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The -webkit-border-before CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.\"\n        },\n        {\n            name: \"-webkit-border-before-color\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'color'>\",\n            \"description\": \"The -webkit-border-before-color CSS property sets the color of the individual logical block start border in a single place in the style sheet.\"\n        },\n        {\n            name: \"-webkit-border-before-style\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'border-style'>\",\n            \"description\": \"The -webkit-border-before-style CSS property sets the style of the individual logical block start border in a single place in the style sheet.\"\n        },\n        {\n            name: \"-webkit-border-before-width\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'border-width'>\",\n            \"description\": \"The -webkit-border-before-width CSS property sets the width of the individual logical block start border in a single place in the style sheet.\"\n        },\n        {\n            name: \"-webkit-mask\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#\",\n            \"description\": \"The mask CSS property alters the visibility of an element by either partially or fully hiding it. This is accomplished by either masking or clipping the image at specific points.\"\n        },\n        {\n            name: \"-webkit-mask-attachment\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<attachment>#\",\n            browsers: [\n                \"S4\",\n                \"C\"\n            ],\n            \"description\": \"If a -webkit-mask-image is specified, -webkit-mask-attachment determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.\"\n        },\n        {\n            name: \"-webkit-mask-composite\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<composite-style>#\",\n            browsers: [\n                \"E18\",\n                \"S4\",\n                \"C1\"\n            ],\n            \"description\": \"The -webkit-mask-composite property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the -webkit-mask-image property.\"\n        },\n        {\n            name: \"-webkit-mask-position\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<position>#\",\n            \"description\": \"The mask-position CSS property sets the initial position, relative to the mask position layer defined by mask-origin, for each defined mask image.\"\n        },\n        {\n            name: \"-webkit-mask-position-x\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <length-percentage> | left | center | right ]#\",\n            browsers: [\n                \"E18\",\n                \"S4\",\n                \"C1\"\n            ],\n            \"description\": \"The -webkit-mask-position-x CSS property sets the initial horizontal position of a mask image.\"\n        },\n        {\n            name: \"-webkit-mask-position-y\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <length-percentage> | top | center | bottom ]#\",\n            browsers: [\n                \"E18\",\n                \"S4\",\n                \"C1\"\n            ],\n            \"description\": \"The -webkit-mask-position-y CSS property sets the initial vertical position of a mask image.\"\n        },\n        {\n            name: \"-webkit-mask-repeat-x\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"repeat | no-repeat | space | round\",\n            browsers: [\n                \"E18\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The -webkit-mask-repeat-x property specifies whether and how a mask image is repeated (tiled) horizontally.\"\n        },\n        {\n            name: \"-webkit-mask-repeat-y\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"repeat | no-repeat | space | round\",\n            browsers: [\n                \"E18\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The -webkit-mask-repeat-y property specifies whether and how a mask image is repeated (tiled) vertically.\"\n        },\n        {\n            name: \"appearance\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | none\",\n            browsers: [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"description\": \"Changes the appearance of buttons and other controls to resemble native controls.\"\n        },\n        {\n            name: \"azimuth\",\n            \"status\": \"obsolete\",\n            \"syntax\": \"<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards\",\n            \"description\": \"In combination with elevation, the azimuth CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.\"\n        },\n        {\n            name: \"backdrop-filter\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | <filter-function-list>\",\n            browsers: [\n                \"E17\",\n                \"S9\",\n                \"C47\",\n                \"O34\"\n            ],\n            \"description\": \"The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect you must make the element or its background at least partially transparent.\"\n        },\n        {\n            name: \"border-end-end-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"The border-end-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"border-end-start-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"The border-end-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"border-start-end-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"The border-start-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"border-start-start-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"description\": \"The border-start-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"box-align\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"start | center | end | baseline | stretch\",\n            browsers: [\n                \"E\",\n                \"FF49\",\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The box-align CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\"\n        },\n        {\n            name: \"box-direction\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"normal | reverse | inherit\",\n            browsers: [\n                \"E12\",\n                \"FF\",\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The box-direction CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\"\n        },\n        {\n            name: \"box-flex\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<number>\",\n            browsers: [\n                \"E12\",\n                \"FF\",\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The -moz-box-flex and -webkit-box-flex CSS properties specify how a -moz-box or -webkit-box grows to fill the box that contains it, in the direction of the containing box's layout.\"\n        },\n        {\n            name: \"box-flex-group\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<integer>\",\n            browsers: [\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The box-flex-group CSS property assigns the flexbox's child elements to a flex group.\"\n        },\n        {\n            name: \"box-lines\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"single | multiple\",\n            browsers: [\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The box-lines CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\"\n        },\n        {\n            name: \"box-ordinal-group\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<integer>\",\n            browsers: [\n                \"E\",\n                \"FF\",\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The box-ordinal-group CSS property assigns the flexbox's child elements to an ordinal group.\"\n        },\n        {\n            name: \"box-orient\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"horizontal | vertical | inline-axis | block-axis | inherit\",\n            browsers: [\n                \"E12\",\n                \"FF\",\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The box-orient CSS property specifies whether an element lays out its contents horizontally or vertically.\"\n        },\n        {\n            name: \"box-pack\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"start | center | end | justify\",\n            browsers: [\n                \"E12\",\n                \"FF\",\n                \"S3\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The -moz-box-pack and -webkit-box-pack CSS properties specify how a -moz-box or -webkit-box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\"\n        },\n        {\n            name: \"color-adjust\",\n            \"syntax\": \"economy | exact\",\n            browsers: [\n                \"FF48\",\n                \"S6\",\n                \"C49\",\n                \"O15\"\n            ],\n            \"description\": \"The color-adjust property is a non-standard CSS extension that can be used to force printing of background colors and images in browsers based on the WebKit engine.\"\n        },\n        {\n            name: \"font-optical-sizing\",\n            \"syntax\": \"auto | none\",\n            browsers: [\n                \"FF62\"\n            ],\n            \"description\": \"The font-optical-sizing CSS property allows developers to control whether browsers render text with slightly differing visual representations to optimize viewing at different sizes, or not. This only works for fonts that have an optical size variation axis.\"\n        },\n        {\n            name: \"font-variation-settings\",\n            \"syntax\": \"normal | [ <string> <number> ]#\",\n            browsers: [\n                \"E17\",\n                \"FF62\",\n                \"S11\",\n                \"C62\",\n                \"O49\"\n            ],\n            \"description\": \"The font-variation-settings CSS property provides low-level control over OpenType or TrueType font variations, by specifying the four letter axis names of the features you want to vary, along with their variation values.\"\n        },\n        {\n            name: \"gap\",\n            \"syntax\": \"<'row-gap'> <'column-gap'>?\",\n            browsers: [\n                \"E16\",\n                \"FF63\",\n                \"S10.1\",\n                \"C66\",\n                \"O53\"\n            ],\n            \"description\": \"The gap CSS property is a shorthand property for row-gap and column-gap specifying the gutters between grid rows and columns.\"\n        },\n        {\n            name: \"hanging-punctuation\",\n            \"syntax\": \"none | [ first || [ force-end | allow-end ] || last ]\",\n            browsers: [\n                \"S10\"\n            ],\n            \"description\": \"The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.\"\n        },\n        {\n            name: \"image-resolution\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ from-image || <resolution> ] && snap?\",\n            \"description\": \"The image-resolution property specifies the intrinsic resolution of all raster images used in or on the element. It affects both content images (e.g. replaced elements and generated content) and decorative images (such as background-image). The intrinsic resolution of an image is used to determine the image’s intrinsic dimensions.\"\n        },\n        {\n            name: \"initial-letter\",\n            \"status\": \"experimental\",\n            \"syntax\": \"normal | [ <number> <integer>? ]\",\n            browsers: [\n                \"S9\"\n            ],\n            \"description\": \"The initial-letter CSS property specifies styling for dropped, raised, and sunken initial letters.\"\n        },\n        {\n            name: \"initial-letter-align\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ auto | alphabetic | hanging | ideographic ]\",\n            \"description\": \"The initial-letter-align CSS property specifies the alignment of initial letters within a paragraph.\"\n        },\n        {\n            name: \"inset\",\n            \"syntax\": \"<'top'>{1,4}\",\n            \"description\": \"The inset CSS property defines the logical block and inline start and end offsets of an element, which map to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"inset-block\",\n            \"syntax\": \"<'top'>{1,2}\",\n            \"description\": \"The inset-block CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"inset-block-end\",\n            \"syntax\": \"<'top'>\",\n            browsers: [\n                \"FF63\"\n            ],\n            \"description\": \"The inset-block-end CSS property defines the logical block end offset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"inset-block-start\",\n            \"syntax\": \"<'top'>\",\n            browsers: [\n                \"FF63\"\n            ],\n            \"description\": \"The inset-block-start CSS property defines the logical block start offset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"inset-inline\",\n            \"syntax\": \"<'top'>{1,2}\",\n            \"description\": \"The inset-inline CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"inset-inline-end\",\n            \"syntax\": \"<'top'>\",\n            browsers: [\n                \"FF63\"\n            ],\n            \"description\": \"The inset-inline-end CSS property defines the logical inline end inset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"inset-inline-start\",\n            \"syntax\": \"<'top'>\",\n            browsers: [\n                \"FF63\"\n            ],\n            \"description\": \"The inset-inline-start CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            name: \"line-clamp\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | <integer>\",\n            \"description\": \"The line-clamp property allows limiting the contents of a block container to the specified number of lines; remaining content is fragmented away and neither rendered nor measured. Optionally, it also allows inserting content into the last line box to indicate the continuity of truncated/interrupted content.\"\n        },\n        {\n            name: \"mask\",\n            \"syntax\": \"<mask-layer>#\",\n            browsers: [\n                \"E12\",\n                \"FF\",\n                \"S4\",\n                \"C1\",\n                \"O\"\n            ],\n            \"description\": \"The mask CSS property alters the visibility of an element by either partially or fully hiding it. This is accomplished by either masking or clipping the image at specific points.\"\n        },\n        {\n            name: \"mask-border\",\n            \"status\": \"experimental\",\n            \"syntax\": \"<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>\",\n            \"description\": \"The mask-border CSS property lets you create a mask along the edge of an element's border.\\n\\nThis property is a shorthand for mask-border-source, mask-border-slice, mask-border-width, mask-border-outset, mask-border-repeat, and mask-border-mode. As with all shorthand properties, any omitted sub-values will be set to their initial value.\"\n        },\n        {\n            name: \"mask-border-mode\",\n            \"status\": \"experimental\",\n            \"syntax\": \"luminance | alpha\",\n            \"description\": \"The mask-border-mode CSS property specifies the blending mode used in a mask border.\"\n        },\n        {\n            name: \"mask-border-outset\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ <length> | <number> ]{1,4}\",\n            \"description\": \"The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box.\"\n        },\n        {\n            name: \"mask-border-repeat\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ stretch | repeat | round | space ]{1,2}\",\n            \"description\": \"The mask-border-repeat CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.\"\n        },\n        {\n            name: \"mask-border-slice\",\n            \"status\": \"experimental\",\n            \"syntax\": \"<number-percentage>{1,4} fill?\",\n            \"description\": \"The mask-border-slice CSS property divides the image specified by mask-border-source into regions. These regions are used to form the components of an element's mask border.\"\n        },\n        {\n            name: \"mask-border-source\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | <image>\",\n            \"description\": \"The mask-border-source CSS property specifies the source image used to create an element's mask border.\\n\\nThe mask-border-slice property is used to divide the source image into regions, which are then dynamically applied to the final mask border.\"\n        },\n        {\n            name: \"mask-border-width\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ <length-percentage> | <number> | auto ]{1,4}\",\n            \"description\": \"The mask-border-width CSS property specifies the width of an element's mask border.\"\n        },\n        {\n            name: \"mask-clip\",\n            \"syntax\": \"[ <geometry-box> | no-clip ]#\",\n            browsers: [\n                \"FF53\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The mask-clip CSS property determines the area, which is affected by a mask. The painted content of an element must be restricted to this area.\"\n        },\n        {\n            name: \"mask-composite\",\n            \"syntax\": \"<compositing-operator>#\",\n            browsers: [\n                \"E18\",\n                \"FF53\"\n            ],\n            \"description\": \"The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it.\"\n        },\n        {\n            name: \"max-lines\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | <integer>\",\n            \"description\": \"The max-liens property forces a break after a set number of lines\"\n        },\n        {\n            name: \"offset-position\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | <position>\",\n            \"description\": \"Specifies the initial position of the offset path. If position is specified with static, offset-position would be ignored.\"\n        },\n        {\n            name: \"overflow-anchor\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | none\",\n            browsers: [\n                \"C56\",\n                \"O43\"\n            ],\n            \"description\": \"The overflow-anchor CSS property provides a way to opt out browser scroll anchoring behavior which adjusts scroll position to minimize content shifts.\"\n        },\n        {\n            name: \"overflow-block\",\n            \"status\": \"experimental\",\n            \"syntax\": \"<'overflow'>\",\n            \"description\": \"The overflow-block CSS media feature can be used to test how the output device handles content that overflows the initial containing block along the block axis.\"\n        },\n        {\n            name: \"overflow-clip-box\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"padding-box | content-box\",\n            browsers: [\n                \"FF29\"\n            ],\n            \"description\": \"The overflow-clip-box CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the overflow-clip-box-inline and overflow-clip-box-block properties.\"\n        },\n        {\n            name: \"overflow-inline\",\n            \"status\": \"experimental\",\n            \"syntax\": \"<'overflow'>\",\n            \"description\": \"The overflow-inline CSS media feature can be used to test how the output device handles content that overflows the initial containing block along the inline axis.\"\n        },\n        {\n            name: \"overscroll-behavior\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ contain | none | auto ]{1,2}\",\n            browsers: [\n                \"E18\",\n                \"FF59\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"description\": \"The overscroll-behavior CSS property is shorthand for the overscroll-behavior-x and overscroll-behavior-y properties, which allow you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached.\"\n        },\n        {\n            name: \"overscroll-behavior-x\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"contain | none | auto\",\n            browsers: [\n                \"E18\",\n                \"FF59\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"description\": \"The overscroll-behavior-x CSS property is allows you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached — in the x axis direction.\"\n        },\n        {\n            name: \"overscroll-behavior-y\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"contain | none | auto\",\n            browsers: [\n                \"E18\",\n                \"FF59\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"description\": \"The overscroll-behavior-y CSS property is allows you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached — in the y axis direction.\"\n        },\n        {\n            name: \"place-content\",\n            \"syntax\": \"<'align-content'> <'justify-content'>?\",\n            browsers: [\n                \"FF60\",\n                \"S\",\n                \"C59\",\n                \"O\"\n            ],\n            \"description\": \"The place-content CSS shorthand property sets both the align-content and justify-content properties.\"\n        },\n        {\n            name: \"place-items\",\n            \"syntax\": \"<'align-items'> <'justify-items'>?\",\n            browsers: [\n                \"FF45\",\n                \"C59\"\n            ],\n            \"description\": \"The CSS place-items shorthand property sets both the align-items and justify-items properties. The first value is the align-items property value, the second the justify-items one. If the second value is not present, the first value is also used for it.\"\n        },\n        {\n            name: \"rotate\",\n            \"syntax\": \"none | [ x | y | z | <number>{3} ]? && <angle>\",\n            browsers: [\n                \"FF60\",\n                \"C\"\n            ],\n            \"description\": \"The rotate CSS property allows you to specify rotation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.\"\n        },\n        {\n            name: \"row-gap\",\n            \"syntax\": \"normal | <length-percentage>\",\n            browsers: [\n                \"E16\",\n                \"FF63\",\n                \"S10.1\",\n                \"C66\",\n                \"O53\"\n            ],\n            \"description\": \"The row-gap CSS property specifies the gutter between grid rows.\"\n        },\n        {\n            name: \"ruby-merge\",\n            \"status\": \"experimental\",\n            \"syntax\": \"separate | collapse | auto\",\n            \"description\": \"This property controls how ruby annotation boxes should be rendered when there are more than one in a ruby container box: whether each pair should be kept separate, the annotations should be collapsed and rendered as a group, or the separation should be determined based on the space available.\"\n        },\n        {\n            name: \"scale\",\n            \"syntax\": \"none | <number>{1,3}\",\n            browsers: [\n                \"FF60\",\n                \"C\"\n            ],\n            \"description\": \"The scale CSS property allows you to specify scale transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.\"\n        },\n        {\n            name: \"scrollbar-color\",\n            \"syntax\": \"auto | dark | light | <color>{2}\",\n            browsers: [\n                \"FF64\"\n            ],\n            \"description\": \"The scrollbar-color CSS property sets the color of the scrollbar track and thumb.\"\n        },\n        {\n            name: \"scrollbar-width\",\n            \"syntax\": \"auto | thin | none | <length>\",\n            browsers: [\n                \"FF64\"\n            ],\n            \"description\": \"The scrollbar-width property allows the author to set the maximum thickness of an element’s scrollbars when they are shown. \"\n        },\n        {\n            name: \"scroll-margin\",\n            \"syntax\": \"[ auto | <length> ]{1,4}\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin property is a shorthand property which sets all of the scroll-margin longhands, assigning values much like the margin property does for the margin-* longhands.\"\n        },\n        {\n            name: \"scroll-margin-block\",\n            \"syntax\": \"[ auto | <length> ]{1,2}\",\n            browsers: [\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-block property is a shorthand property which sets the scroll-margin longhands in the block dimension.\"\n        },\n        {\n            name: \"scroll-margin-block-start\",\n            \"syntax\": \"auto | <length> \",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-block-start property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-block-end\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-block-end property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-bottom\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-bottom property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-inline\",\n            \"syntax\": \"[auto | <length> ]{1,2}\",\n            \"description\": \"The scroll-margin-inline property is a shorthand property which sets the scroll-margin longhands in the inline dimension.\"\n        },\n        {\n            name: \"scroll-margin-inline-start\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-inline-start property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-inline-end\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-inline-end property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-left\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-left property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-right\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-right property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-margin-top\",\n            \"syntax\": \"auto | <length>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-margin-top property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            name: \"scroll-padding\",\n            \"syntax\": \"[ auto | <length> | <percentage> ]{1,4}\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding property is a shorthand property which sets all of the scroll-padding longhands, assigning values much like the padding property does for the padding-* longhands.\"\n        },\n        {\n            name: \"scroll-padding-block\",\n            \"syntax\": \"[auto | <length> | <percentage> ]{1,2}\",\n            browsers: [\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-block property is a shorthand property which sets the scroll-padding longhands for the block dimension.\"\n        },\n        {\n            name: \"scroll-padding-block-start\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-block-start property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-block-end\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-block-end property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-bottom\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-bottom property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-inline\",\n            \"syntax\": \"[auto | <length> | <percentage> ]{1,2}\",\n            browsers: [\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-inline property is a shorthand property which sets the scroll-padding longhands for the inline dimension.\"\n        },\n        {\n            name: \"scroll-padding-inline-start\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-inline-end\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-inline-end property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-left\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-left property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-right\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-right property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-padding-top\",\n            \"syntax\": \"auto | <length> | <percentage>\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-padding-top property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            name: \"scroll-snap-align\",\n            \"syntax\": \"[ none | start | end | center ]{1,2}\",\n            browsers: [\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"description\": \"The scroll-snap-align property specifies the box’s snap position as an alignment of its snap area (as the alignment subject) within its snap container’s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.\"\n        },\n        {\n            name: \"scroll-snap-stop\",\n            \"syntax\": \"normal | always\",\n            \"description\": \"The scroll-snap-stop CSS property defines whether the scroll container is allowed to \\\"pass over\\\" possible snap positions.\"\n        },\n        {\n            name: \"scroll-snap-type-x\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | mandatory | proximity\",\n            browsers: [\n                \"FF39\",\n                \"S9\"\n            ],\n            \"description\": \"The scroll-snap-type-x CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\\n\\nSpecifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.\"\n        },\n        {\n            name: \"scroll-snap-type-y\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | mandatory | proximity\",\n            browsers: [\n                \"FF39\"\n            ],\n            \"description\": \"The scroll-snap-type-y CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\\n\\nSpecifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.\"\n        },\n        {\n            name: \"text-combine-upright\",\n            \"syntax\": \"none | all | [ digits <integer>? ]\",\n            \"description\": \"The text-combine-upright CSS property specifies the combination of multiple characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\\n\\nThis is used to produce an effect that is known as tate-chū-yoko (縦中横) in Japanese, or as 直書橫向 in Chinese.\"\n        },\n        {\n            name: \"text-decoration-skip\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]\",\n            browsers: [\n                \"S8\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"description\": \"The text-decoration-skip CSS property specifies what parts of the element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\"\n        },\n        {\n            name: \"text-decoration-skip-ink\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | none\",\n            browsers: [\n                \"C64\",\n                \"O50\"\n            ],\n            \"description\": \"The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.\"\n        },\n        {\n            name: \"text-emphasis\",\n            \"syntax\": \"<'text-emphasis-style'> || <'text-emphasis-color'>\",\n            browsers: [\n                \"FF46\",\n                \"S\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"description\": \"The text-emphasis CSS property is a shorthand property for setting text-emphasis-style and text-emphasis-color in one declaration. This property will apply the specified emphasis mark to each character of the element's text, except separator characters, like spaces,  and control characters.\"\n        },\n        {\n            name: \"text-emphasis-color\",\n            \"syntax\": \"<color>\",\n            browsers: [\n                \"FF46\",\n                \"S\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"description\": \"The text-emphasis-color CSS property defines the color used to draw emphasis marks on text being rendered in the HTML document. This value can also be set and reset using the text-emphasis shorthand.\"\n        },\n        {\n            name: \"text-emphasis-position\",\n            \"syntax\": \"[ over | under ] && [ right | left ]\",\n            browsers: [\n                \"FF46\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The text-emphasis-position CSS property describes where emphasis marks are drawn at. The effect of emphasis marks on the line height is the same as for ruby text: if there isn't enough place, the line height is increased.\"\n        },\n        {\n            name: \"text-emphasis-style\",\n            \"syntax\": \"none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>\",\n            browsers: [\n                \"FF46\",\n                \"S\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"description\": \"The text-emphasis-style CSS property defines the type of emphasis used. It can also be set, and reset, using the text-emphasis shorthand.\"\n        },\n        {\n            name: \"text-size-adjust\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | auto | <percentage>\",\n            browsers: [\n                \"E12\",\n                \"C54\",\n                \"O42\"\n            ],\n            \"description\": \"The text-size-adjust CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\"\n        },\n        {\n            name: \"transform-box\",\n            \"syntax\": \"border-box | fill-box | view-box\",\n            browsers: [\n                \"FF55\",\n                \"C64\",\n                \"O51\"\n            ],\n            \"description\": \"The transform-box CSS property defines the layout box to which the transform and transform-origin properties relate.\"\n        },\n        {\n            name: \"translate\",\n            \"syntax\": \"none | <length-percentage> [ <length-percentage> <length>? ]?\",\n            browsers: [\n                \"FF60\",\n                \"C\"\n            ],\n            \"description\": \"The translate CSS property allows you to specify translation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.\"\n        },\n        {\n            name: \"speak-as\",\n            \"syntax\": \"auto | bullets | numbers | words | spell-out | <counter-style-name>\",\n            \"description\": \"The speak-as descriptor specifies how a counter symbol constructed with a given @counter-style will be represented in the spoken form. For example, an author can specify a counter symbol to be either spoken as its numerical value or just represented with an audio cue.\"\n        },\n        {\n            name: \"font-display\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ auto | block | swap | fallback | optional ]\",\n            \"description\": \"The font-display descriptor determines how a font face is displayed based on whether and when it is downloaded and ready to use.\"\n        },\n        {\n            name: \"bleed\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | <length>\",\n            \"description\": \"The bleed CSS at-rule descriptor, used with the @page at-rule, specifies the extent of the page bleed area outside the page box. This property only has effect if crop marks are enabled using the marks property.\"\n        },\n        {\n            name: \"marks\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | [ crop || cross ]\",\n            \"description\": \"The marks CSS at-rule descriptor, used with the @page at-rule, adds crop and/or cross marks to the presentation of the document. Crop marks indicate where the page should be cut. Cross marks are used to align sheets.\"\n        },\n        {\n            name: \"max-zoom\",\n            \"syntax\": \"auto | <number> | <percentage>\",\n            \"description\": \"The max-zoom CSS descriptor sets the maximum zoom factor of a document defined by the @viewport at-rule. The browser will not zoom in any further than this, whether automatically or at the user's request.\\n\\nA zoom factor of 1.0 or 100% corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.\"\n        },\n        {\n            name: \"min-zoom\",\n            \"syntax\": \"auto | <number> | <percentage>\",\n            \"description\": \"The min-zoom CSS descriptor sets the minimum zoom factor of a document defined by the @viewport at-rule. The browser will not zoom out any further than this, whether automatically or at the user's request.\\n\\nA zoom factor of 1.0 or 100% corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.\"\n        },\n        {\n            name: \"orientation\",\n            \"syntax\": \"auto | portrait | landscape\",\n            \"description\": \"The orientation CSS @media media feature can be used to apply styles based on the orientation of the viewport (or the page box, for paged media).\"\n        },\n        {\n            name: \"user-zoom\",\n            \"syntax\": \"zoom | fixed\",\n            \"description\": \"The user-zoom CSS descriptor controls whether or not the user can change the zoom factor of a document defined by @viewport.\"\n        }\n    ],\n    \"atDirectives\": [\n        {\n            name: \"@charset\",\n            browsers: [\n                \"FF1.5\",\n                \"S4\",\n                \"C2\",\n                \"IE5.5\",\n                \"O9\"\n            ],\n            \"description\": \"Defines character set of the document.\"\n        },\n        {\n            name: \"@counter-style\",\n            browsers: [\n                \"FF33\"\n            ],\n            \"description\": \"Defines a custom counter style.\"\n        },\n        {\n            name: \"@font-face\",\n            \"description\": \"Allows for linking to fonts that are automatically activated when needed. This permits authors to work around the limitation of 'web-safe' fonts, allowing for consistent rendering independent of the fonts available in a given user's environment.\"\n        },\n        {\n            name: \"@font-feature-values\",\n            browsers: [\n                \"FF34\",\n                \"S9.1\"\n            ],\n            \"description\": \"Defines named values for the indices used to select alternate glyphs for a given font family.\"\n        },\n        {\n            name: \"@import\",\n            \"description\": \"Includes content of another file.\"\n        },\n        {\n            name: \"@keyframes\",\n            \"description\": \"Defines set of animation key frames.\"\n        },\n        {\n            name: \"@media\",\n            \"description\": \"Defines a stylesheet for a particular media type.\"\n        },\n        {\n            name: \"@-moz-document\",\n            browsers: [\n                \"FF1.8\"\n            ],\n            \"description\": \"Gecko-specific at-rule that restricts the style rules contained within it based on the URL of the document.\"\n        },\n        {\n            name: \"@-moz-keyframes\",\n            browsers: [\n                \"FF5\"\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        },\n        {\n            name: \"@-ms-viewport\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Specifies the size, zoom factor, and orientation of the viewport.\"\n        },\n        {\n            name: \"@namespace\",\n            \"description\": \"Declares a prefix and associates it with a namespace name.\"\n        },\n        {\n            name: \"@-o-keyframes\",\n            browsers: [\n                \"O12\"\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        },\n        {\n            name: \"@-o-viewport\",\n            browsers: [\n                \"O11\"\n            ],\n            \"description\": \"Specifies the size, zoom factor, and orientation of the viewport.\"\n        },\n        {\n            name: \"@page\",\n            browsers: [\n                \"E\",\n                \"FF19\",\n                \"C2\",\n                \"IE8\",\n                \"O6\"\n            ],\n            \"description\": \"Directive defines various page parameters.\"\n        },\n        {\n            name: \"@supports\",\n            browsers: [\n                \"E12\",\n                \"FF22\",\n                \"S9\",\n                \"C28\",\n                \"O12.1\"\n            ],\n            \"description\": \"A conditional group rule whose condition tests whether the user agent supports CSS property:value pairs.\"\n        },\n        {\n            name: \"@-webkit-keyframes\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        }\n    ],\n    \"pseudoClasses\": [\n        {\n            name: \":active\",\n            \"description\": \"Applies while an element is being activated by the user. For example, between the times the user presses the mouse button and releases it.\"\n        },\n        {\n            name: \":any-link\",\n            browsers: [\n                \"FF50\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.\"\n        },\n        {\n            name: \":checked\",\n            \"description\": \"Radio and checkbox elements can be toggled by the user. Some menu items are 'checked' when the user selects them. When such elements are toggled 'on' the :checked pseudo-class applies.\"\n        },\n        {\n            name: \":corner-present\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Indicates whether or not a scrollbar corner is present.\"\n        },\n        {\n            name: \":decrement\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will decrement the view’s position when used.\"\n        },\n        {\n            name: \":default\",\n            browsers: [\n                \"FF4\",\n                \"S5\",\n                \"C10\",\n                \"O10\"\n            ],\n            \"description\": \"Applies to the one or more UI elements that are the default among a set of similar elements. Typically applies to context menu items, buttons, and select lists/menus.\"\n        },\n        {\n            name: \":disabled\",\n            \"description\": \"Represents user interface elements that are in a disabled state; such elements have a corresponding enabled state.\"\n        },\n        {\n            name: \":double-button\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed together at the same end of the scrollbar.\"\n        },\n        {\n            name: \":empty\",\n            \"description\": \"Represents an element that has no children at all.\"\n        },\n        {\n            name: \":enabled\",\n            \"description\": \"Represents user interface elements that are in an enabled state; such elements have a corresponding disabled state.\"\n        },\n        {\n            name: \":end\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed after the thumb.\"\n        },\n        {\n            name: \":first\",\n            browsers: [\n                \"E\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"description\": \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n        },\n        {\n            name: \":first-child\",\n            \"description\": \"Same as :nth-child(1). Represents an element that is the first child of some other element.\"\n        },\n        {\n            name: \":first-of-type\",\n            \"description\": \"Same as :nth-of-type(1). Represents an element that is the first sibling of its type in the list of children of its parent element.\"\n        },\n        {\n            name: \":focus\",\n            \"description\": \"Applies while an element has the focus (accepts keyboard or mouse events, or other forms of input).\"\n        },\n        {\n            name: \":fullscreen\",\n            browsers: [\n                \"E12\",\n                \"FF64\",\n                \"S6\",\n                \"C15\",\n                \"IE11\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set.\"\n        },\n        {\n            name: \":future\",\n            browsers: [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ],\n            \"description\": \"Represents any element that is defined to occur entirely after a :current element.\"\n        },\n        {\n            name: \":horizontal\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to any scrollbar pieces that have a horizontal orientation.\"\n        },\n        {\n            name: \":host\",\n            browsers: [\n                \"FF63\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"When evaluated in the context of a shadow tree, matches the shadow tree’s host element.\"\n        },\n        {\n            name: \":host()\",\n            browsers: [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"When evaluated in the context of a shadow tree, it matches the shadow tree’s host element if the host element, in its normal context, matches the selector argument.\"\n        },\n        {\n            name: \":host-context()\",\n            browsers: [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"Tests whether there is an ancestor, outside the shadow tree, which matches a particular selector.\"\n        },\n        {\n            name: \":hover\",\n            \"description\": \"Applies while the user designates an element with a pointing device, but does not necessarily activate it. For example, a visual user agent could apply this pseudo-class when the cursor (mouse pointer) hovers over a box generated by the element.\"\n        },\n        {\n            name: \":increment\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will increment the view’s position when used.\"\n        },\n        {\n            name: \":indeterminate\",\n            \"description\": \"Applies to UI elements whose value is in an indeterminate state.\"\n        },\n        {\n            name: \":in-range\",\n            browsers: [\n                \"E\",\n                \"FF29\",\n                \"S\",\n                \"C10\",\n                \"O11\"\n            ],\n            \"description\": \"Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.\"\n        },\n        {\n            name: \":invalid\",\n            \"description\": \"An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.\"\n        },\n        {\n            name: \":lang()\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"FF1\",\n                \"IE8\",\n                \"O8\",\n                \"S3\"\n            ],\n            \"description\": \"Represents an element that is in language specified.\"\n        },\n        {\n            name: \":last-child\",\n            \"description\": \"Same as :nth-last-child(1). Represents an element that is the last child of some other element.\"\n        },\n        {\n            name: \":last-of-type\",\n            \"description\": \"Same as :nth-last-of-type(1). Represents an element that is the last sibling of its type in the list of children of its parent element.\"\n        },\n        {\n            name: \":left\",\n            browsers: [\n                \"E\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"description\": \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n        },\n        {\n            name: \":link\",\n            \"description\": \"Applies to links that have not yet been visited.\"\n        },\n        {\n            name: \":matches()\",\n            browsers: [\n                \"S9\"\n            ],\n            \"description\": \"Takes a selector list as its argument. It represents an element that is represented by its argument.\"\n        },\n        {\n            name: \":-moz-any()\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().\"\n        },\n        {\n            name: \":-moz-any-link\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.\"\n        },\n        {\n            name: \":-moz-broken\",\n            browsers: [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements representing broken images.\"\n        },\n        {\n            name: \":-moz-drag-over\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Non-standard. Matches elements when a drag-over event applies to it.\"\n        },\n        {\n            name: \":-moz-first-node\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Non-standard. Represents an element that is the first child node of some other element.\"\n        },\n        {\n            name: \":-moz-focusring\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Non-standard. Matches an element that has focus and focus ring drawing is enabled in the browser.\"\n        },\n        {\n            name: \":-moz-full-screen\",\n            browsers: [\n                \"FF9\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set. Standardized as :fullscreen.\"\n        },\n        {\n            name: \":-moz-last-node\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Non-standard. Represents an element that is the last child node of some other element.\"\n        },\n        {\n            name: \":-moz-loading\",\n            browsers: [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements, such as images, that haven’t started loading yet.\"\n        },\n        {\n            name: \":-moz-only-whitespace\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"The same as :empty, except that it additionally matches elements that only contain code points affected by whitespace processing. Standardized as :blank.\"\n        },\n        {\n            name: \":-moz-placeholder\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Deprecated. Represents placeholder text in an input field. Use ::-moz-placeholder for Firefox 19+.\"\n        },\n        {\n            name: \":-moz-submit-invalid\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Non-standard. Represents any submit button when the contents of the associated form are not valid.\"\n        },\n        {\n            name: \":-moz-suppressed\",\n            browsers: [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements representing images that have been blocked from loading.\"\n        },\n        {\n            name: \":-moz-ui-invalid\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Non-standard. Represents any validated form element whose value isn't valid \"\n        },\n        {\n            name: \":-moz-ui-valid\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Non-standard. Represents any validated form element whose value is valid \"\n        },\n        {\n            name: \":-moz-user-disabled\",\n            browsers: [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements representing images that have been disabled due to the user’s preferences.\"\n        },\n        {\n            name: \":-moz-window-inactive\",\n            browsers: [\n                \"FF4\"\n            ],\n            \"description\": \"Non-standard. Matches elements in an inactive window.\"\n        },\n        {\n            name: \":-ms-fullscreen\",\n            browsers: [\n                \"IE11\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set.\"\n        },\n        {\n            name: \":-ms-input-placeholder\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"Represents placeholder text in an input field. Note: for Edge use the pseudo-element ::-ms-input-placeholder. Standardized as ::placeholder.\"\n        },\n        {\n            name: \":-ms-keyboard-active\",\n            browsers: [\n                \"IE10\"\n            ],\n            \"description\": \"Windows Store apps only. Applies one or more styles to an element when it has focus and the user presses the space bar.\"\n        },\n        {\n            name: \":-ms-lang()\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents an element that is in the language specified. Accepts a comma separated list of language tokens.\"\n        },\n        {\n            name: \":no-button\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to track pieces. Applies when there is no button at that end of the track.\"\n        },\n        {\n            name: \":not()\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"FF1\",\n                \"IE9\",\n                \"O9.5\",\n                \"S2\"\n            ],\n            \"description\": \"The negation pseudo-class, :not(X), is a functional notation taking a simple selector (excluding the negation pseudo-class itself) as an argument. It represents an element that is not represented by its argument.\"\n        },\n        {\n            name: \":nth-child()\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element.\"\n        },\n        {\n            name: \":nth-last-child()\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings after it in the document tree, for any positive integer or zero value of n, and has a parent element.\"\n        },\n        {\n            name: \":nth-last-of-type()\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element.\"\n        },\n        {\n            name: \":nth-of-type()\",\n            browsers: [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element.\"\n        },\n        {\n            name: \":only-child\",\n            \"description\": \"Represents an element that has a parent element and whose parent element has no other element children. Same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity.\"\n        },\n        {\n            name: \":only-of-type\",\n            \"description\": \"Matches every element that is the only child of its type, of its parent. Same as :first-of-type:last-of-type or :nth-of-type(1):nth-last-of-type(1), but with a lower specificity.\"\n        },\n        {\n            name: \":optional\",\n            \"description\": \"A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.\"\n        },\n        {\n            name: \":out-of-range\",\n            browsers: [\n                \"E\",\n                \"FF29\",\n                \"S\",\n                \"C10\",\n                \"O11\"\n            ],\n            \"description\": \"Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.\"\n        },\n        {\n            name: \":past\",\n            browsers: [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ],\n            \"description\": \"Represents any element that is defined to occur entirely prior to a :current element.\"\n        },\n        {\n            name: \":read-only\",\n            browsers: [\n                \"E\",\n                \"FF\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.\"\n        },\n        {\n            name: \":read-write\",\n            browsers: [\n                \"E\",\n                \"FF\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.\"\n        },\n        {\n            name: \":required\",\n            \"description\": \"A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.\"\n        },\n        {\n            name: \":right\",\n            browsers: [\n                \"E\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"description\": \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n        },\n        {\n            name: \":root\",\n            browsers: [\n                \"FF1\",\n                \"S1\",\n                \"C1\",\n                \"IE9\",\n                \"O9.5\"\n            ],\n            \"description\": \"Represents an element that is the root of the document. In HTML 4, this is always the HTML element.\"\n        },\n        {\n            name: \":scope\",\n            browsers: [\n                \"FF32\",\n                \"S7\",\n                \"O15\"\n            ],\n            \"description\": \"Represents any element that is in the contextual reference element set.\"\n        },\n        {\n            name: \":single-button\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed separately at either end of the scrollbar.\"\n        },\n        {\n            name: \":start\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed before the thumb.\"\n        },\n        {\n            name: \":target\",\n            \"description\": \"Some URIs refer to a location within a resource. This kind of URI ends with a 'number sign' (#) followed by an anchor identifier (called the fragment identifier).\"\n        },\n        {\n            name: \":valid\",\n            \"description\": \"An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.\"\n        },\n        {\n            name: \":vertical\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to any scrollbar pieces that have a vertical orientation.\"\n        },\n        {\n            name: \":visited\",\n            \"description\": \"Applies once the link has been visited by the user.\"\n        },\n        {\n            name: \":-webkit-any()\",\n            browsers: [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().\"\n        },\n        {\n            name: \":-webkit-full-screen\",\n            browsers: [\n                \"C\",\n                \"S6\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set. Standardized as :fullscreen.\"\n        },\n        {\n            name: \":window-inactive\",\n            browsers: [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Non-standard. Applies to all scrollbar pieces. Indicates whether or not the window containing the scrollbar is currently active.\"\n        },\n        {\n            name: \":blank\",\n            \"status\": \"experimental\",\n            \"description\": \"The :blank CSS pseudo-class selects empty user input elements (eg. <input> or <textarea>).\"\n        },\n        {\n            name: \":defined\",\n            \"status\": \"experimental\",\n            browsers: [\n                \"FF63\",\n                \"S\",\n                \"C\",\n                \"O\"\n            ],\n            \"description\": \"The :defined CSS pseudo-class represents any element that has been defined. This includes any standard element built in to the browser, and custom elements that have been successfully defined (i.e. with the CustomElementRegistry.define() method).\"\n        },\n        {\n            name: \":dir\",\n            browsers: [\n                \"FF49\"\n            ],\n            \"description\": \"The :dir() CSS pseudo-class matches elements based on the directionality of the text contained in them.\"\n        },\n        {\n            name: \":focus-within\",\n            \"status\": \"experimental\",\n            browsers: [\n                \"FF52\",\n                \"S10.1\",\n                \"C60\",\n                \"O47\"\n            ],\n            \"description\": \"The :focus-within pseudo-class applies to any element for which the :focus pseudo class applies as well as to an element whose descendant in the flat tree (including non-element nodes, such as text nodes) matches the conditions for matching :focus.\"\n        },\n        {\n            name: \":has\",\n            \"status\": \"experimental\",\n            \"description\": \":The :has() CSS pseudo-class represents an element if any of the selectors passed as parameters (relative to the :scope of the given element), match at least one element.\"\n        },\n        {\n            name: \":is\",\n            \"status\": \"experimental\",\n            \"description\": \"The :is() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list. This is useful for writing large selectors in a more compact form.\"\n        },\n        {\n            name: \":placeholder-shown\",\n            \"status\": \"experimental\",\n            browsers: [\n                \"FF51\",\n                \"S9\",\n                \"C47\",\n                \"IE10\",\n                \"O34\"\n            ],\n            \"description\": \"The :placeholder-shown CSS pseudo-class represents any <input> or <textarea> element that is currently displaying placeholder text.\"\n        },\n        {\n            name: \":where\",\n            \"status\": \"experimental\",\n            \"description\": \"The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list.\"\n        }\n    ],\n    \"pseudoElements\": [\n        {\n            name: \"::after\",\n            \"description\": \"Represents a styleable child pseudo-element immediately after the originating element’s actual content.\"\n        },\n        {\n            name: \"::backdrop\",\n            browsers: [\n                \"E\",\n                \"FF47\",\n                \"C37\",\n                \"IE11\"\n            ],\n            \"description\": \"Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).\"\n        },\n        {\n            name: \"::before\",\n            \"description\": \"Represents a styleable child pseudo-element immediately before the originating element’s actual content.\"\n        },\n        {\n            name: \"::content\",\n            browsers: [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"Deprecated. Matches the distribution list itself, on elements that have one. Use ::slotted for forward compatibility.\"\n        },\n        {\n            name: \"::cue\",\n            browsers: [\n                \"FF55\",\n                \"C\"\n            ]\n        },\n        {\n            name: \"::cue()\",\n            browsers: [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::cue-region\",\n            browsers: [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::cue-region()\",\n            browsers: [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::first-letter\",\n            \"description\": \"Represents the first letter of an element, if it is not preceded by any other content (such as images or inline tables) on its line.\"\n        },\n        {\n            name: \"::first-line\",\n            \"description\": \"Describes the contents of the first formatted line of its originating element.\"\n        },\n        {\n            name: \"::-moz-focus-inner\",\n            browsers: [\n                \"FF4\"\n            ]\n        },\n        {\n            name: \"::-moz-focus-outer\",\n            browsers: [\n                \"FF4\"\n            ]\n        },\n        {\n            name: \"::-moz-list-bullet\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Used to style the bullet of a list element. Similar to the standardized ::marker.\"\n        },\n        {\n            name: \"::-moz-list-number\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Used to style the numbers of a list element. Similar to the standardized ::marker.\"\n        },\n        {\n            name: \"::-moz-placeholder\",\n            browsers: [\n                \"FF19\"\n            ],\n            \"description\": \"Represents placeholder text in an input field\"\n        },\n        {\n            name: \"::-moz-progress-bar\",\n            browsers: [\n                \"FF9\"\n            ],\n            \"description\": \"Represents the bar portion of a progress bar.\"\n        },\n        {\n            name: \"::-moz-selection\",\n            browsers: [\n                \"FF1\"\n            ],\n            \"description\": \"Represents the portion of a document that has been highlighted by the user.\"\n        },\n        {\n            name: \"::-ms-backdrop\",\n            browsers: [\n                \"IE11\"\n            ],\n            \"description\": \"Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).\"\n        },\n        {\n            name: \"::-ms-browse\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the browse button of an input type=file control.\"\n        },\n        {\n            name: \"::-ms-check\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the check of a checkbox or radio button input control.\"\n        },\n        {\n            name: \"::-ms-clear\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the clear button of a text input control\"\n        },\n        {\n            name: \"::-ms-expand\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the drop-down button of a select control.\"\n        },\n        {\n            name: \"::-ms-fill\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the bar portion of a progress bar.\"\n        },\n        {\n            name: \"::-ms-fill-lower\",\n            browsers: [\n                \"E\",\n                \"IE\"\n            ],\n            \"description\": \"Represents the portion of the slider track from its smallest value up to the value currently selected by the thumb. In a left-to-right layout, this is the portion of the slider track to the left of the thumb.\"\n        },\n        {\n            name: \"::-ms-fill-upper\",\n            browsers: [\n                \"E\",\n                \"IE\"\n            ],\n            \"description\": \"Represents the portion of the slider track from the value currently selected by the thumb up to the slider's largest value. In a left-to-right layout, this is the portion of the slider track to the right of the thumb.\"\n        },\n        {\n            name: \"::-ms-reveal\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the password reveal button of an input type=password control.\"\n        },\n        {\n            name: \"::-ms-thumb\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the portion of range input control (also known as a slider control) that the user drags.\"\n        },\n        {\n            name: \"::-ms-ticks-after\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the tick marks of a slider that begin just after the thumb and continue up to the slider's largest value. In a left-to-right layout, these are the ticks to the right of the thumb.\"\n        },\n        {\n            name: \"::-ms-ticks-before\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the tick marks of a slider that represent its smallest values up to the value currently selected by the thumb. In a left-to-right layout, these are the ticks to the left of the thumb.\"\n        },\n        {\n            name: \"::-ms-tooltip\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the tooltip of a slider (input type=range).\"\n        },\n        {\n            name: \"::-ms-track\",\n            browsers: [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the track of a slider.\"\n        },\n        {\n            name: \"::-ms-value\",\n            browsers: [\n                \"E16\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the content of a text or password input control, or a select control.\"\n        },\n        {\n            name: \"::selection\",\n            \"description\": \"Represents the portion of a document that has been highlighted by the user.\"\n        },\n        {\n            name: \"::shadow\",\n            browsers: [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"Matches the shadow root if an element has a shadow tree.\"\n        },\n        {\n            name: \"::-webkit-file-upload-button\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-inner-spin-button\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-input-placeholder\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ]\n        },\n        {\n            name: \"::-webkit-keygen-select\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-meter-bar\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-meter-even-less-good-value\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-meter-optimum-value\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-meter-suboptimal-value\",\n            browsers: [\n                \"E13\",\n                \"C\",\n                \"O15\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-outer-spin-button\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-progress-bar\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-progress-inner-element\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-progress-value\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O\"\n            ]\n        },\n        {\n            name: \"::-webkit-resizer\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-scrollbar\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-scrollbar-button\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-scrollbar-corner\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-scrollbar-thumb\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-scrollbar-track\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-scrollbar-track-piece\",\n            browsers: [\n                \"S\",\n                \"C\",\n                \"O15\"\n            ]\n        },\n        {\n            name: \"::-webkit-search-cancel-button\",\n            browsers: [\n                \"S\",\n                \"C\"\n            ]\n        },\n        {\n            name: \"::-webkit-search-decoration\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ]\n        },\n        {\n            name: \"::-webkit-search-results-button\",\n            browsers: [\n                \"S\",\n                \"C\"\n            ]\n        },\n        {\n            name: \"::-webkit-search-results-decoration\",\n            browsers: [\n                \"C\",\n                \"S4\"\n            ]\n        },\n        {\n            name: \"::-webkit-slider-runnable-track\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-slider-thumb\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-textfield-decoration-container\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-validation-bubble\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-validation-bubble-arrow\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-validation-bubble-arrow-clipper\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-validation-bubble-heading\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-validation-bubble-message\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-webkit-validation-bubble-text-block\",\n            browsers: [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            name: \"::-moz-range-progress\",\n            \"status\": \"nonstandard\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"The ::-moz-range-progress CSS pseudo-element is a Mozilla extension that represents the lower portion of the track (i.e., groove) in which the indicator slides in an <input> of type=\\\"range\\\". This portion corresponds to values lower than the value currently selected by the thumb (i.e., virtual knob).\"\n        },\n        {\n            name: \"::-moz-range-thumb\",\n            \"status\": \"nonstandard\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"The ::-moz-range-thumb CSS pseudo-element is a Mozilla extension that represents the thumb (i.e., virtual knob) of an <input> of type=\\\"range\\\". The user can move the thumb along the input's track to alter its numerical value.\"\n        },\n        {\n            name: \"::-moz-range-track\",\n            \"status\": \"nonstandard\",\n            browsers: [\n                \"FF\"\n            ],\n            \"description\": \"The ::-moz-range-track CSS pseudo-element is a Mozilla extension that represents the track (i.e., groove) in which the indicator slides in an <input> of type=\\\"range\\\".\"\n        },\n        {\n            name: \"::-webkit-progress-inner-value\",\n            \"status\": \"nonstandard\",\n            \"description\": \"The ::-webkit-progress-value CSS pseudo-element represents the filled-in portion of the bar of a <progress> element. It is a child of the ::-webkit-progress-bar pseudo-element.\\n\\nIn order to let ::-webkit-progress-value take effect, -webkit-appearance needs to be set to none on the <progress> element.\"\n        },\n        {\n            name: \"::grammar-error\",\n            \"status\": \"experimental\",\n            \"description\": \"The ::grammar-error CSS pseudo-element represents a text segment which the user agent has flagged as grammatically incorrect.\"\n        },\n        {\n            name: \"::placeholder\",\n            browsers: [\n                \"E\",\n                \"FF51\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"description\": \"The ::placeholder CSS pseudo-element represents the placeholder text of a form element.\"\n        },\n        {\n            name: \"::slotted\",\n            browsers: [\n                \"FF63\",\n                \"S\",\n                \"C50\",\n                \"O37\"\n            ],\n            \"description\": \"The :slotted() CSS pseudo-element represents any element that has been placed into a slot inside an HTML template.\"\n        },\n        {\n            name: \"::spelling-error\",\n            \"status\": \"experimental\",\n            \"description\": \"The ::spelling-error CSS pseudo-element represents a text segment which the user agent has flagged as incorrectly spelled.\"\n        }\n    ]\n};\nvar descriptions = {\n    \"100\": \"Thin\",\n    \"200\": \"Extra Light (Ultra Light)\",\n    \"300\": \"Light\",\n    \"400\": \"Normal\",\n    \"500\": \"Medium\",\n    \"600\": \"Semi Bold (Demi Bold)\",\n    \"700\": \"Bold\",\n    \"800\": \"Extra Bold (Ultra Bold)\",\n    \"900\": \"Black (Heavy)\",\n    \"self-end\": \"The item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\",\n    \"self-start\": \"The item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis..\",\n    \"alternate\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\",\n    \"alternate-reverse\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\",\n    \"backwards\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\",\n    \"forwards\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\",\n    \"paused\": \"A running animation will be paused.\",\n    \"running\": \"Resume playback of a paused animation.\",\n    \"multiply\": \"The source color is multiplied by the destination color and replaces the destination.\",\n    \"screen\": \"Multiplies the complements of the backdrop and source color values, then complements the result.\",\n    \"overlay\": \"Multiplies or screens the colors, depending on the backdrop color value.\",\n    \"darken\": \"Selects the darker of the backdrop and source colors.\",\n    \"lighten\": \"Selects the lighter of the backdrop and source colors.\",\n    \"color-dodge\": \"Brightens the backdrop color to reflect the source color.\",\n    \"color-burn\": \"Darkens the backdrop color to reflect the source color.\",\n    \"hard-light\": \"Multiplies or screens the colors, depending on the source color value.\",\n    \"soft-light\": \"Darkens or lightens the colors, depending on the source color value.\",\n    \"difference\": \"Subtracts the darker of the two constituent colors from the lighter color..\",\n    \"exclusion\": \"Produces an effect similar to that of the Difference mode but lower in contrast.\",\n    \"hue\": \"Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.\",\n    \"saturation\": \"Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color.\",\n    \"color\": \"Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color.\",\n    \"luminosity\": \"Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color.\",\n    \"repeat\": \"The image is tiled (repeated) to fill the area.\",\n    \"clone\": \"Each box is independently wrapped with the border and padding.\",\n    \"slice\": \"The effect is as though the element were rendered with no breaks present, and then sliced by the breaks afterward.\",\n    \"inset\": \"Changes the drop shadow from an outer shadow (one that shadows the box onto the canvas, as if it were lifted above the canvas) to an inner shadow (one that shadows the canvas onto the box, as if the box were cut out of the canvas and shifted behind it).\",\n    \"border-box\": \"The specified width and height (and respective min/max properties) on this element determine the border box of the element.\",\n    \"content-box\": \"Behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element.\",\n    \"rect()\": \"Specifies offsets from the edges of the border box.\",\n    \"evenodd\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses.\",\n    \"nonzero\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray.\",\n    \"linearRGB\": \"Color operations should occur in the linearized RGB color space.\",\n    \"sRGB\": \"Color operations should occur in the sRGB color space.\",\n    \"balance\": \"Balance content equally between columns, if possible.\",\n    \"size\": \"For properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element.\",\n    \"layout\": \"Turns on layout containment for the element.\",\n    \"paint\": \"Turns on paint containment for the element.\",\n    \"attr()\": \"The attr(n) function returns as a string the value of attribute n for the subject of the selector.\",\n    \"counter(name)\": \"Counters are denoted by identifiers (see the 'counter-increment' and 'counter-reset' properties).\",\n    \"alias\": \"Indicates an alias of/shortcut to something is to be created. Often rendered as an arrow with a small curved arrow next to it.\",\n    \"all-scroll\": \"Indicates that the something can be scrolled in any direction. Often rendered as arrows pointing up, down, left, and right with a dot in the middle.\",\n    \"cell\": \"Indicates that a cell or set of cells may be selected. Often rendered as a thick plus-sign with a dot in the middle.\",\n    \"col-resize\": \"Indicates that the item/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating them.\",\n    \"context-menu\": \"A context menu is available for the object under the cursor. Often rendered as an arrow with a small menu-like graphic next to it.\",\n    \"copy\": \"Indicates something is to be copied. Often rendered as an arrow with a small plus sign next to it.\",\n    \"crosshair\": \"A simple crosshair (e.g., short line segments resembling a '+' sign). Often used to indicate a two dimensional bitmap selection mode.\",\n    \"e-resize\": \"Indicates that east edge is to be moved.\",\n    \"ew-resize\": \"Indicates a bidirectional east-west resize cursor.\",\n    \"grab\": \"Indicates that something can be grabbed.\",\n    \"grabbing\": \"Indicates that something is being grabbed.\",\n    \"help\": \"Help is available for the object under the cursor. Often rendered as a question mark or a balloon.\",\n    \"move\": \"Indicates something is to be moved.\",\n    \"-moz-grab\": \"Indicates that something can be grabbed.\",\n    \"-moz-grabbing\": \"Indicates that something is being grabbed.\",\n    \"-moz-zoom-in\": \"Indicates that something can be zoomed (magnified) in.\",\n    \"-moz-zoom-out\": \"Indicates that something can be zoomed (magnified) out.\",\n    \"ne-resize\": \"Indicates that movement starts from north-east corner.\",\n    \"nesw-resize\": \"Indicates a bidirectional north-east/south-west cursor.\",\n    \"no-drop\": \"Indicates that the dragged item cannot be dropped at the current cursor location. Often rendered as a hand or pointer with a small circle with a line through it.\",\n    \"not-allowed\": \"Indicates that the requested action will not be carried out. Often rendered as a circle with a line through it.\",\n    \"n-resize\": \"Indicates that north edge is to be moved.\",\n    \"ns-resize\": \"Indicates a bidirectional north-south cursor.\",\n    \"nw-resize\": \"Indicates that movement starts from north-west corner.\",\n    \"nwse-resize\": \"Indicates a bidirectional north-west/south-east cursor.\",\n    \"pointer\": \"The cursor is a pointer that indicates a link.\",\n    \"progress\": \"A progress indicator. The program is performing some processing, but is different from 'wait' in that the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.\",\n    \"row-resize\": \"Indicates that the item/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.\",\n    \"se-resize\": \"Indicates that movement starts from south-east corner.\",\n    \"s-resize\": \"Indicates that south edge is to be moved.\",\n    \"sw-resize\": \"Indicates that movement starts from south-west corner.\",\n    \"vertical-text\": \"Indicates vertical-text that may be selected. Often rendered as a horizontal I-beam.\",\n    \"wait\": \"Indicates that the program is busy and the user should wait. Often rendered as a watch or hourglass.\",\n    \"-webkit-grab\": \"Indicates that something can be grabbed.\",\n    \"-webkit-grabbing\": \"Indicates that something is being grabbed.\",\n    \"-webkit-zoom-in\": \"Indicates that something can be zoomed (magnified) in.\",\n    \"-webkit-zoom-out\": \"Indicates that something can be zoomed (magnified) out.\",\n    \"w-resize\": \"Indicates that west edge is to be moved.\",\n    \"zoom-in\": \"Indicates that something can be zoomed (magnified) in.\",\n    \"zoom-out\": \"Indicates that something can be zoomed (magnified) out.\",\n    \"ltr\": \"Left-to-right direction.\",\n    \"rtl\": \"Right-to-left direction.\",\n    \"block\": \"The element generates a block-level box\",\n    \"flex\": \"The element generates a principal flex container box and establishes a flex formatting context.\",\n    \"flexbox\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"flow-root\": \"The element generates a block container box, and lays out its contents using flow layout.\",\n    \"grid\": \"The element generates a principal grid container box, and establishes a grid formatting context.\",\n    \"inline-block\": \"A block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the box itself is formatted as an inline box.\",\n    \"inline-flex\": \"Inline-level flex container.\",\n    \"inline-flexbox\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"inline-table\": \"Inline-level table wrapper box containing table box.\",\n    \"list-item\": \"One or more block boxes and one marker box.\",\n    \"-moz-box\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"-moz-inline-box\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"-ms-flexbox\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"-ms-grid\": \"The element generates a principal grid container box, and establishes a grid formatting context.\",\n    \"-ms-inline-flexbox\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"-ms-inline-grid\": \"Inline-level grid container.\",\n    \"run-in\": \"The element generates a run-in box. Run-in elements act like inlines or blocks, depending on the surrounding elements.\",\n    \"table\": \"The element generates a principal table wrapper box containing an additionally-generated table box, and establishes a table formatting context.\",\n    \"-webkit-box\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"-webkit-flex\": \"The element lays out its contents using flow layout (block-and-inline layout).\",\n    \"-webkit-inline-box\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"-webkit-inline-flex\": \"Inline-level flex container.\",\n    \"hide\": \"No borders or backgrounds are drawn around/behind empty cells.\",\n    \"show\": \"Borders and backgrounds are drawn around/behind empty cells (like normal cells).\",\n    \"accumulate\": \"If the ancestor container element has a property of new, then all graphics elements within the current container are rendered both on the parent's background image and onto the target.\",\n    \"new\": \"Create a new background image canvas. All children of the current container element can access the background, and they will be rendered onto both the parent's background image canvas in addition to the target device.\",\n    \"blur()\": \"Applies a Gaussian blur to the input image.\",\n    \"brightness()\": \"Applies a linear multiplier to input image, making it appear more or less bright.\",\n    \"contrast()\": \"Adjusts the contrast of the input.\",\n    \"drop-shadow()\": \"Applies a drop shadow effect to the input image.\",\n    \"grayscale()\": \"Converts the input image to grayscale.\",\n    \"hue-rotate()\": \"Applies a hue rotation on the input image. \",\n    \"invert()\": \"Inverts the samples in the input image.\",\n    \"opacity()\": \"Applies transparency to the samples in the input image.\",\n    \"saturate()\": \"Saturates the input image.\",\n    \"sepia()\": \"Converts the input image to sepia.\",\n    \"column-reverse\": \"Same as 'column', except the main-start and main-end directions are swapped.\",\n    \"row-reverse\": \"Same as 'row', except the main-start and main-end directions are swapped.\",\n    \"wrap-reverse\": \"Same as 'wrap', except the cross-start and cross-end directions are swapped.\",\n    \"inline-end\": \"A keyword indicating that the element must float on the end side of its containing block. That is the right side with ltr scripts, and the left side with rtl scripts.\",\n    \"inline-start\": \"A keyword indicating that the element must float on the start side of its containing block. That is the left side with ltr scripts, and the right side with rtl scripts.\",\n    \"bold\": \"Same as 700\",\n    \"bolder\": \"Specifies the weight of the face bolder than the inherited value.\",\n    \"caption\": \"The font used for captioned controls (e.g., buttons, drop-downs, etc.).\",\n    \"lighter\": \"Specifies the weight of the face lighter than the inherited value.\",\n    \"menu\": \"The font used in menus (e.g., dropdown menus and menu lists).\",\n    \"message-box\": \"The font used in dialog boxes.\",\n    \"small-caption\": \"The font used for labeling small controls.\",\n    \"status-bar\": \"The font used in window status bars.\",\n    \"\\\"aalt\\\"\": \"Access All Alternates.\",\n    \"\\\"abvf\\\"\": \"Above-base Forms. Required in Khmer script.\",\n    \"\\\"abvm\\\"\": \"Above-base Mark Positioning. Required in Indic scripts.\",\n    \"\\\"abvs\\\"\": \"Above-base Substitutions. Required in Indic scripts.\",\n    \"\\\"afrc\\\"\": \"Alternative Fractions.\",\n    \"\\\"akhn\\\"\": \"Akhand. Required in most Indic scripts.\",\n    \"\\\"blwf\\\"\": \"Below-base Form. Required in a number of Indic scripts.\",\n    \"\\\"blwm\\\"\": \"Below-base Mark Positioning. Required in Indic scripts.\",\n    \"\\\"blws\\\"\": \"Below-base Substitutions. Required in Indic scripts.\",\n    \"\\\"calt\\\"\": \"Contextual Alternates.\",\n    \"\\\"case\\\"\": \"Case-Sensitive Forms. Applies only to European scripts; particularly prominent in Spanish-language setting.\",\n    \"\\\"ccmp\\\"\": \"Glyph Composition/Decomposition.\",\n    \"\\\"cfar\\\"\": \"Conjunct Form After Ro. Required in Khmer scripts.\",\n    \"\\\"cjct\\\"\": \"Conjunct Forms. Required in Indic scripts that show similarity to Devanagari.\",\n    \"\\\"clig\\\"\": \"Contextual Ligatures.\",\n    \"\\\"cpct\\\"\": \"Centered CJK Punctuation. Used primarily in Chinese fonts.\",\n    \"\\\"cpsp\\\"\": \"Capital Spacing. Should not be used in connecting scripts (e.g. most Arabic).\",\n    \"\\\"cswh\\\"\": \"Contextual Swash.\",\n    \"\\\"curs\\\"\": \"Cursive Positioning. Can be used in any cursive script.\",\n    \"\\\"c2pc\\\"\": \"Petite Capitals From Capitals. Applies only to bicameral scripts.\",\n    \"\\\"dist\\\"\": \"Distances. Required in Indic scripts.\",\n    \"\\\"dnom\\\"\": \"Denominators.\",\n    \"\\\"dtls\\\"\": \"Dotless Forms. Applied to math formula layout.\",\n    \"\\\"expt\\\"\": \"Expert Forms. Applies only to Japanese.\",\n    \"\\\"falt\\\"\": \"Final Glyph on Line Alternates. Can be used in any cursive script.\",\n    \"\\\"fin2\\\"\": \"Terminal Form #2. Used only with the Syriac script.\",\n    \"\\\"fin3\\\"\": \"Terminal Form #3. Used only with the Syriac script.\",\n    \"\\\"fina\\\"\": \"Terminal Forms. Can be used in any alphabetic script.\",\n    \"\\\"flac\\\"\": \"Flattened ascent forms. Applied to math formula layout.\",\n    \"\\\"frac\\\"\": \"Fractions.\",\n    \"\\\"fwid\\\"\": \"Full Widths. Applies to any script which can use monospaced forms.\",\n    \"\\\"half\\\"\": \"Half Forms. Required in Indic scripts that show similarity to Devanagari.\",\n    \"\\\"haln\\\"\": \"Halant Forms. Required in Indic scripts.\",\n    \"\\\"halt\\\"\": \"Alternate Half Widths. Used only in CJKV fonts.\",\n    \"\\\"hist\\\"\": \"Historical Forms.\",\n    \"\\\"hkna\\\"\": \"Horizontal Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).\",\n    \"\\\"hlig\\\"\": \"Historical Ligatures.\",\n    \"\\\"hngl\\\"\": \"Hangul. Korean only.\",\n    \"\\\"hojo\\\"\": \"Hojo Kanji Forms (JIS X 0212-1990 Kanji Forms). Used only with Kanji script.\",\n    \"\\\"hwid\\\"\": \"Half Widths. Generally used only in CJKV fonts.\",\n    \"\\\"init\\\"\": \"Initial Forms. Can be used in any alphabetic script.\",\n    \"\\\"isol\\\"\": \"Isolated Forms. Can be used in any cursive script.\",\n    \"\\\"ital\\\"\": \"Italics. Applies mostly to Latin; note that many non-Latin fonts contain Latin as well.\",\n    \"\\\"jalt\\\"\": \"Justification Alternates. Can be used in any cursive script.\",\n    \"\\\"jp78\\\"\": \"JIS78 Forms. Applies only to Japanese.\",\n    \"\\\"jp83\\\"\": \"JIS83 Forms. Applies only to Japanese.\",\n    \"\\\"jp90\\\"\": \"JIS90 Forms. Applies only to Japanese.\",\n    \"\\\"jp04\\\"\": \"JIS2004 Forms. Applies only to Japanese.\",\n    \"\\\"lfbd\\\"\": \"Left Bounds.\",\n    \"\\\"ljmo\\\"\": \"Leading Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\",\n    \"\\\"locl\\\"\": \"Localized Forms.\",\n    \"\\\"ltra\\\"\": \"Left-to-right glyph alternates.\",\n    \"\\\"ltrm\\\"\": \"Left-to-right mirrored forms.\",\n    \"\\\"mark\\\"\": \"Mark Positioning.\",\n    \"\\\"med2\\\"\": \"Medial Form #2. Used only with the Syriac script.\",\n    \"\\\"medi\\\"\": \"Medial Forms.\",\n    \"\\\"mgrk\\\"\": \"Mathematical Greek.\",\n    \"\\\"mkmk\\\"\": \"Mark to Mark Positioning.\",\n    \"\\\"nalt\\\"\": \"Alternate Annotation Forms.\",\n    \"\\\"nlck\\\"\": \"NLC Kanji Forms. Used only with Kanji script.\",\n    \"\\\"nukt\\\"\": \"Nukta Forms. Required in Indic scripts..\",\n    \"\\\"numr\\\"\": \"Numerators.\",\n    \"\\\"opbd\\\"\": \"Optical Bounds.\",\n    \"\\\"ordn\\\"\": \"Ordinals. Applies mostly to Latin script.\",\n    \"\\\"ornm\\\"\": \"Ornaments.\",\n    \"\\\"palt\\\"\": \"Proportional Alternate Widths. Used mostly in CJKV fonts.\",\n    \"\\\"pcap\\\"\": \"Petite Capitals.\",\n    \"\\\"pkna\\\"\": \"Proportional Kana. Generally used only in Japanese fonts.\",\n    \"\\\"pnum\\\"\": \"Proportional Figures.\",\n    \"\\\"pref\\\"\": \"Pre-base Forms. Required in Khmer and Myanmar (Burmese) scripts and southern Indic scripts that may display a pre-base form of Ra.\",\n    \"\\\"pres\\\"\": \"Pre-base Substitutions. Required in Indic scripts.\",\n    \"\\\"pstf\\\"\": \"Post-base Forms. Required in scripts of south and southeast Asia that have post-base forms for consonants eg: Gurmukhi, Malayalam, Khmer.\",\n    \"\\\"psts\\\"\": \"Post-base Substitutions.\",\n    \"\\\"pwid\\\"\": \"Proportional Widths.\",\n    \"\\\"qwid\\\"\": \"Quarter Widths. Generally used only in CJKV fonts.\",\n    \"\\\"rand\\\"\": \"Randomize.\",\n    \"\\\"rclt\\\"\": \"Required Contextual Alternates. May apply to any script, but is especially important for many styles of Arabic.\",\n    \"\\\"rlig\\\"\": \"Required Ligatures. Applies to Arabic and Syriac. May apply to some other scripts.\",\n    \"\\\"rkrf\\\"\": \"Rakar Forms. Required in Devanagari and Gujarati scripts.\",\n    \"\\\"rphf\\\"\": \"Reph Form. Required in Indic scripts. E.g. Devanagari, Kannada.\",\n    \"\\\"rtbd\\\"\": \"Right Bounds.\",\n    \"\\\"rtla\\\"\": \"Right-to-left alternates.\",\n    \"\\\"rtlm\\\"\": \"Right-to-left mirrored forms.\",\n    \"\\\"ruby\\\"\": \"Ruby Notation Forms. Applies only to Japanese.\",\n    \"\\\"salt\\\"\": \"Stylistic Alternates.\",\n    \"\\\"sinf\\\"\": \"Scientific Inferiors.\",\n    \"\\\"size\\\"\": \"Optical size.\",\n    \"\\\"smpl\\\"\": \"Simplified Forms. Applies only to Chinese and Japanese.\",\n    \"\\\"ssty\\\"\": \"Math script style alternates.\",\n    \"\\\"stch\\\"\": \"Stretching Glyph Decomposition.\",\n    \"\\\"subs\\\"\": \"Subscript.\",\n    \"\\\"sups\\\"\": \"Superscript.\",\n    \"\\\"titl\\\"\": \"Titling.\",\n    \"\\\"tjmo\\\"\": \"Trailing Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\",\n    \"\\\"tnam\\\"\": \"Traditional Name Forms. Applies only to Japanese.\",\n    \"\\\"trad\\\"\": \"Traditional Forms. Applies only to Chinese and Japanese.\",\n    \"\\\"twid\\\"\": \"Third Widths. Generally used only in CJKV fonts.\",\n    \"\\\"unic\\\"\": \"Unicase.\",\n    \"\\\"valt\\\"\": \"Alternate Vertical Metrics. Applies only to scripts with vertical writing modes.\",\n    \"\\\"vatu\\\"\": \"Vattu Variants. Used for Indic scripts. E.g. Devanagari.\",\n    \"\\\"vert\\\"\": \"Vertical Alternates. Applies only to scripts with vertical writing modes.\",\n    \"\\\"vhal\\\"\": \"Alternate Vertical Half Metrics. Used only in CJKV fonts.\",\n    \"\\\"vjmo\\\"\": \"Vowel Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\",\n    \"\\\"vkna\\\"\": \"Vertical Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).\",\n    \"\\\"vkrn\\\"\": \"Vertical Kerning.\",\n    \"\\\"vpal\\\"\": \"Proportional Alternate Vertical Metrics. Used mostly in CJKV fonts.\",\n    \"\\\"vrt2\\\"\": \"Vertical Alternates and Rotation. Applies only to scripts with vertical writing modes.\",\n    \"\\\"zero\\\"\": \"Slashed Zero.\",\n    \"narrower\": \"Indicates a narrower value relative to the width of the parent element.\",\n    \"wider\": \"Indicates a wider value relative to the width of the parent element.\",\n    \"weight\": \"Allow synthetic bold faces.\",\n    \"annotation()\": \"Enables display of alternate annotation forms.\",\n    \"character-variant()\": \"Enables display of specific character variants.\",\n    \"historical-forms\": \"Enables display of historical forms.\",\n    \"ornaments()\": \"Enables replacement of default glyphs with ornaments, if provided in the font.\",\n    \"styleset()\": \"Enables display with stylistic sets.\",\n    \"stylistic()\": \"Enables display of stylistic alternates.\",\n    \"swash()\": \"Enables display of swash glyphs.\",\n    \"all-petite-caps\": \"Enables display of petite capitals for both upper and lowercase letters.\",\n    \"all-small-caps\": \"Enables display of small capitals for both upper and lowercase letters.\",\n    \"petite-caps\": \"Enables display of petite capitals.\",\n    \"titling-caps\": \"Enables display of titling capitals.\",\n    \"unicase\": \"Enables display of mixture of small capitals for uppercase letters with normal lowercase letters.\",\n    \"full-width\": \"Enables rendering of full-width variants.\",\n    \"jis04\": \"Enables rendering of JIS04 forms.\",\n    \"jis78\": \"Enables rendering of JIS78 forms.\",\n    \"jis83\": \"Enables rendering of JIS83 forms.\",\n    \"jis90\": \"Enables rendering of JIS90 forms.\",\n    \"proportional-width\": \"Enables rendering of proportionally-spaced variants.\",\n    \"simplified\": \"Enables rendering of simplified forms.\",\n    \"traditional\": \"Enables rendering of traditional forms.\",\n    \"additional-ligatures\": \"Enables display of additional ligatures.\",\n    \"common-ligatures\": \"Enables display of common ligatures.\",\n    \"contextual\": \"Enables display of contextual alternates.\",\n    \"discretionary-ligatures\": \"Enables display of discretionary ligatures.\",\n    \"historical-ligatures\": \"Enables display of historical ligatures.\",\n    \"no-additional-ligatures\": \"Disables display of additional ligatures.\",\n    \"no-common-ligatures\": \"Disables display of common ligatures.\",\n    \"no-contextual\": \"Disables display of contextual alternates.\",\n    \"no-discretionary-ligatures\": \"Disables display of discretionary ligatures.\",\n    \"no-historical-ligatures\": \"Disables display of historical ligatures.\",\n    \"diagonal-fractions\": \"Enables display of lining diagonal fractions.\",\n    \"lining-nums\": \"Enables display of lining numerals.\",\n    \"oldstyle-nums\": \"Enables display of old-style numerals.\",\n    \"ordinal\": \"Enables display of letter forms used with ordinal numbers.\",\n    \"proportional-nums\": \"Enables display of proportional numerals.\",\n    \"slashed-zero\": \"Enables display of slashed zeros.\",\n    \"stacked-fractions\": \"Enables display of lining stacked fractions.\",\n    \"tabular-nums\": \"Enables display of tabular numerals.\",\n    \"span\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\",\n    \"minmax()\": \"Defines a size range greater than or equal to min and less than or equal to max.\",\n    \"dense\": \"If specified, the auto-placement algorithm uses a “dense” packing algorithm, which attempts to fill in holes earlier in the grid if smaller items come up later.\",\n    \"fit-content\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\",\n    \"manual\": \"Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities\",\n    \"flip\": \"After rotating by the precededing angle, the image is flipped horizontally. Defaults to 0deg if the angle is ommitted.\",\n    \"from-image\": \"If the image has an orientation specified in its metadata, such as EXIF, this value computes to the angle that the metadata specifies is necessary to correctly orient the image.\",\n    \"crisp-edges\": \"The image must be scaled with an algorithm that preserves contrast and edges in the image, and which does not smooth colors or introduce blur to the image in the process.\",\n    \"optimizeQuality\": \"Deprecated.\",\n    \"pixelated\": \"When scaling the image up, the 'nearest neighbor' or similar algorithm must be used, so that the image appears to be simply composed of very large pixels.\",\n    \"active\": \"The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it.\",\n    \"disabled\": \"The input method editor is disabled and may not be activated by the user.\",\n    \"inactive\": \"The input method editor is initially inactive, but the user may activate it if they wish.\",\n    \"safe\": \"If the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.\",\n    \"unsafe\": \"Regardless of the relative sizes of the item and alignment container, the given alignment value is honored.\",\n    \"space-evenly\": \"The items are evenly distributed within the alignment container along the main axis.\",\n    \"circle\": \"A hollow circle.\",\n    \"disc\": \"A filled circle.\",\n    \"inside\": \"The marker box is outside the principal block box, as described in the section on the ::marker pseudo-element below.\",\n    \"outside\": \"The ::marker pseudo-element is an inline element placed immediately before all ::before pseudo-elements in the principal block box, after which the element's content flows.\",\n    \"symbols()\": \"Allows a counter style to be defined inline.\",\n    \"path()\": \"Defines an SVG path as a string, with optional 'fill-rule' as the first argument.\",\n    \"block-axis\": \"Elements are oriented along the box's axis.\",\n    \"inline-axis\": \"Elements are oriented vertically.\",\n    \"padding-box\": \"The specified width and height (and respective min/max properties) on this element determine the padding box of the element.\",\n    \"line-through\": \"Each line of text has a line through the middle.\",\n    \"overline\": \"Each line of text has a line above it.\",\n    \"underline\": \"Each line of text is underlined.\",\n    \"dashed\": \"Produces a dashed line style.\",\n    \"dotted\": \"Produces a dotted line.\",\n    \"double\": \"Produces a double line.\",\n    \"solid\": \"Produces a solid line.\",\n    \"wavy\": \"Produces a wavy line.\",\n    \"matrix()\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\",\n    \"matrix3d()\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\",\n    \"perspective\": \"Specifies a perspective projection matrix.\",\n    \"rotate()\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\",\n    \"rotate3d()\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\",\n    \"rotateX('angle')\": \"Specifies a clockwise rotation by the given angle about the X axis.\",\n    \"rotateY('angle')\": \"Specifies a clockwise rotation by the given angle about the Y axis.\",\n    \"rotateZ('angle')\": \"Specifies a clockwise rotation by the given angle about the Z axis.\",\n    \"scale()\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\",\n    \"scale3d()\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\",\n    \"scaleX()\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\",\n    \"scaleY()\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\",\n    \"scaleZ()\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\",\n    \"skew()\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\",\n    \"skewX()\": \"Specifies a skew transformation along the X axis by the given angle.\",\n    \"skewY()\": \"Specifies a skew transformation along the Y axis by the given angle.\",\n    \"translate()\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\",\n    \"translate3d()\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\",\n    \"translateX()\": \"Specifies a translation by the given amount in the X direction.\",\n    \"translateY()\": \"Specifies a translation by the given amount in the Y direction.\",\n    \"translateZ()\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\",\n    \"false\": \"The element does not contain an accelerator key sequence.\",\n    \"true\": \"The element contains an accelerator key sequence.\",\n    \"bt\": \"Bottom-to-top block flow. Layout is horizontal.\",\n    \"lr\": \"Left-to-right direction. The flow orientation is vertical.\",\n    \"rl\": \"Right-to-left direction. The flow orientation is vertical.\",\n    \"tb\": \"Top-to-bottom direction. The flow orientation is horizontal.\",\n    \"zoom\": \"The element is zoomable.\",\n    \"no-limit\": \"There is no limit.\",\n    \"mode\": \"Any of the range of mode values available to the -ms-layout-grid-mode property.\",\n    \"type\": \"Any of the range of type values available to the -ms-layout-grid-type property.\",\n    \"-ms-autohiding-scrollbar\": \"Indicates the element displays auto-hiding scrollbars during mouse interactions and panning indicators during touch and keyboard interactions.\",\n    \"scrollbar\": \"Scrollbars are typically narrow strips inserted on one or two edges of an element and which often have arrows to click on and a \\\"thumb\\\" to drag up and down (or left and right) to move the contents of the element.\",\n    \"ideograph-alpha\": \"Creates 1/4em extra spacing between runs of ideographic letters and non-ideographic letters, such as Latin-based, Cyrillic, Greek, Arabic or Hebrew.\",\n    \"ideograph-numeric\": \"Creates 1/4em extra spacing between runs of ideographic letters and numeric glyphs.\",\n    \"ideograph-parenthesis\": \"Creates extra spacing between normal (non wide) parenthesis and ideographs.\",\n    \"ideograph-space\": \"Extends the width of the space character while surrounded by ideographs.\",\n    \"punctuation\": \"Creates extra non-breaking spacing around punctuation as required by language-specific typographic conventions.\",\n    \"digits\": \"Attempt to typeset horizontally each maximal sequence of consecutive ASCII digits (U+0030–U+0039) that has as many or fewer characters than the specified integer such that it takes up the space of a single character within the vertical line box.\",\n    \"inter-cluster\": \"Justification primarily changes spacing at word separators and at grapheme cluster boundaries in clustered scripts. This value is typically used for Southeast Asian scripts such as Thai.\",\n    \"inter-ideograph\": \"Justification primarily changes spacing at word separators and at inter-graphemic boundaries in scripts that use no word spaces. This value is typically used for CJK languages.\",\n    \"inter-word\": \"Justification primarily changes spacing at word separators. This value is typically used for languages that separate words using spaces, like English or (sometimes) Korean.\",\n    \"kashida\": \"Justification primarily stretches Arabic and related scripts through the use of kashida or other calligraphic elongation.\",\n    \"clip\": \"Clip inline content that overflows. Characters may be only partially rendered.\",\n    \"ellipsis\": \"Render an ellipsis character (U+2026) to represent clipped inline content.\",\n    \"over\": \"The underline is aligned with the 'top' (right in vertical writing) edge of the element's em-box. In this mode, an overline also switches sides.\",\n    \"under\": \"The underline is aligned with the 'bottom' (left in vertical writing) edge of the element's em-box. In this case the underline usually does not cross the descenders. This is sometimes called 'accounting' underline.\",\n    \"grippers\": \"Grippers are always on.\",\n    \"break-all\": \"Lines may break between any two grapheme clusters for non-CJK scripts.\",\n    \"clear\": \"Inline flow content can only wrap on top and bottom of the exclusion and must leave the areas to the start and end edges of the exclusion box empty.\",\n    \"maximum\": \"Inline flow content can wrap on the side of the exclusion with the largest available space for the given line, and must leave the other side of the exclusion empty.\",\n    \"minimum\": \"Inline flow content can flow around the edge of the exclusion with the smallest available space within the flow content’s containing block, and must leave the other edge of the exclusion empty.\",\n    \"current\": \"Indicates that the user agent should target the frame that the element is in.\",\n    \"root\": \"Indicates that the user agent should target the full window.\",\n    \"scale-down\": \"Size the content as if ‘none’ or ‘contain’ were specified, whichever would result in a smaller concrete object size.\",\n    \"invert\": \"Performs a color inversion on the pixels on the screen.\",\n    \"-moz-hidden-unscrollable\": \"Same as the standardized 'clip', except doesn’t establish a block formatting context.\",\n    \"painted\": \"The given element can be the target element for pointer events when the pointer is over a \\\"painted\\\" area. \",\n    \"visibleFill\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the interior of the element.\",\n    \"visiblePainted\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over a ‘painted’ area.\",\n    \"visibleStroke\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the perimeter of the element.\",\n    \"absolute\": \"The box's position (and possibly size) is specified with the 'top', 'right', 'bottom', and 'left' properties. These properties specify offsets with respect to the box's 'containing block'.\",\n    \"-ms-page\": \"The box's position is calculated according to the 'absolute' model.\",\n    \"relative\": \"The box's position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its normal position.\",\n    \"static\": \"The box is a normal box, laid out according to the normal flow. The 'top', 'right', 'bottom', and 'left' properties do not apply.\",\n    \"sticky\": \"The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.\",\n    \"-webkit-sticky\": \"The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.\",\n    \"distribute-letter\": \"If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with the first and last ruby text glyphs lining up with the corresponding first and last base glyphs. If the width of the ruby text is at least the width of the base, then the letters of the base are evenly distributed across the width of the ruby text.\",\n    \"distribute-space\": \"If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with a certain amount of white space preceding the first and following the last character in the ruby text. That amount of white space is normally equal to half the amount of inter-character space of the ruby text.\",\n    \"line-edge\": \"If the ruby text is not adjacent to a line edge, it is aligned as in 'auto'. If it is adjacent to a line edge, then it is still aligned as in auto, but the side of the ruby text that touches the end of the line is lined up with the corresponding edge of the base.\",\n    \"after\": \"The ruby text appears after the base. This is a relatively rare setting used in ideographic East Asian writing systems, most easily found in educational text.\",\n    \"before\": \"The ruby text appears before the base. This is the most common setting used in ideographic East Asian writing systems.\",\n    \"attr(x)\": \"The value of attribute 'x' is a string value. The string value is evaluated as a <number> to determine the number of ruby base elements to be spanned by the annotation element.\",\n    \"smooth\": \"Scrolls in a smooth fashion using a user-agent-defined timing function and time period.\",\n    \"margin-box\": \"The background is painted within (clipped to) the margin box.\",\n    \"crispEdges\": \"Emphasize the contrast between clean edges of artwork over rendering speed and geometric precision.\",\n    \"format()\": \"Optional hint describing the format of the font resource.\",\n    \"local()\": \"Format-specific string that identifies a locally available copy of a given font.\",\n    \"butt\": \"Indicates that the stroke for each subpath does not extend beyond its two endpoints.\",\n    \"bevel\": \"Indicates that a bevelled corner is to be used to join path segments.\",\n    \"miter\": \"Indicates that a sharp corner is to be used to join path segments.\",\n    \"additive\": \"Represents “sign-value” numbering systems, which, rather than using reusing digits in different positions to change their value, define additional digits with much larger values, so that the value of the number can be obtained by adding all the digits together.\",\n    \"cyclic\": \"Cycles repeatedly through its provided symbols, looping back to the beginning when it reaches the end of the list.\",\n    \"extends\": \"Use the algorithm of another counter style, but alter other aspects.\",\n    \"numeric\": \"interprets the list of counter symbols as digits to a \\\"place-value\\\" numbering system, similar to the default 'decimal' counter style.\",\n    \"symbolic\": \"Cycles repeatedly through its provided symbols, doubling, tripling, etc. the symbols on each successive pass through the list.\",\n    \"sideways\": \"This value is equivalent to 'sideways-right' in 'vertical-rl' writing mode and equivalent to 'sideways-left' in 'vertical-lr' writing mode.\",\n    \"sideways-right\": \"In vertical writing modes, this causes text to be set as if in a horizontal layout, but rotated 90° clockwise.\",\n    \"upright\": \"In vertical writing modes, characters from horizontal-only scripts are rendered upright, i.e. in their standard horizontal orientation.\",\n    \"optimizeLegibility\": \"Indicates that the user agent shall emphasize legibility over rendering speed and geometric precision.\",\n    \"capitalize\": \"Puts the first typographic letter unit of each word in titlecase.\",\n    \"lowercase\": \"Puts all letters in lowercase.\",\n    \"uppercase\": \"Puts all letters in uppercase.\",\n    \"perspective()\": \"Specifies a perspective projection matrix.\",\n    \"flat\": \"All children of this element are rendered flattened into the 2D plane of the element.\",\n    \"preserve-3d\": \"Flattening is not performed, so children maintain their position in 3D space.\",\n    \"bidi-override\": \"Inside the element, reordering is strictly in sequence according to the 'direction' property; the implicit part of the bidirectional algorithm is ignored.\",\n    \"embed\": \"If the element is inline-level, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the 'direction' property.\",\n    \"isolate-override\": \"This combines the isolation behavior of 'isolate' with the directional override behavior of 'bidi-override'\",\n    \"plaintext\": \"For the purposes of the Unicode bidirectional algorithm, the base directionality of each bidi paragraph for which the element forms the containing block is determined not by the element's computed 'direction'.\",\n    \"U+26\": \"Ampersand.\",\n    \"U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F\": \"WGL4 character set (Pan-European).\",\n    \"U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF\": \"The Multilingual European Subset No. 1. Latin. Covers ~44 languages.\",\n    \"U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD\": \"The Multilingual European Subset No. 2. Latin, Greek, and Cyrillic. Covers ~128 language.\",\n    \"U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD\": \"The Multilingual European Subset No. 3. Covers all characters belonging to European scripts.\",\n    \"U+00-7F\": \"Basic Latin (ASCII).\",\n    \"U+80-FF\": \"Latin-1 Supplement. Accented characters for Western European languages, common punctuation characters, multiplication and division signs.\",\n    \"U+100-17F\": \"Latin Extended-A. Accented characters for for Czech, Dutch, Polish, and Turkish.\",\n    \"U+180-24F\": \"Latin Extended-B. Croatian, Slovenian, Romanian, Non-European and historic latin, Khoisan, Pinyin, Livonian, Sinology.\",\n    \"U+1E00-1EFF\": \"Latin Extended Additional. Vietnamese, German captial sharp s, Medievalist, Latin general use.\",\n    \"U+250-2AF\": \"International Phonetic Alphabet Extensions.\",\n    \"U+370-3FF\": \"Greek and Coptic.\",\n    \"U+1F00-1FFF\": \"Greek Extended. Accented characters for polytonic Greek.\",\n    \"U+400-4FF\": \"Cyrillic.\",\n    \"U+500-52F\": \"Cyrillic Supplement. Extra letters for Komi, Khanty, Chukchi, Mordvin, Kurdish, Aleut, Chuvash, Abkhaz, Azerbaijani, and Orok.\",\n    \"U+00-52F, U+1E00-1FFF, U+2200–22FF\": \"Latin, Greek, Cyrillic, some punctuation and symbols.\",\n    \"U+530–58F\": \"Armenian.\",\n    \"U+590–5FF\": \"Hebrew.\",\n    \"U+600–6FF\": \"Arabic.\",\n    \"U+750–77F\": \"Arabic Supplement. Additional letters for African languages, Khowar, Torwali, Burushaski, and early Persian.\",\n    \"U+8A0–8FF\": \"Arabic Extended-A. Additional letters for African languages, European and Central Asian languages, Rohingya, Tamazight, Arwi, and Koranic annotation signs.\",\n    \"U+700–74F\": \"Syriac.\",\n    \"U+900–97F\": \"Devanagari.\",\n    \"U+980–9FF\": \"Bengali.\",\n    \"U+A00–A7F\": \"Gurmukhi.\",\n    \"U+A80–AFF\": \"Gujarati.\",\n    \"U+B00–B7F\": \"Oriya.\",\n    \"U+B80–BFF\": \"Tamil.\",\n    \"U+C00–C7F\": \"Telugu.\",\n    \"U+C80–CFF\": \"Kannada.\",\n    \"U+D00–D7F\": \"Malayalam.\",\n    \"U+D80–DFF\": \"Sinhala.\",\n    \"U+118A0–118FF\": \"Warang Citi.\",\n    \"U+E00–E7F\": \"Thai.\",\n    \"U+1A20–1AAF\": \"Tai Tham.\",\n    \"U+AA80–AADF\": \"Tai Viet.\",\n    \"U+E80–EFF\": \"Lao.\",\n    \"U+F00–FFF\": \"Tibetan.\",\n    \"U+1000–109F\": \"Myanmar (Burmese).\",\n    \"U+10A0–10FF\": \"Georgian.\",\n    \"U+1200–137F\": \"Ethiopic.\",\n    \"U+1380–139F\": \"Ethiopic Supplement. Extra Syllables for Sebatbeit, and Tonal marks\",\n    \"U+2D80–2DDF\": \"Ethiopic Extended. Extra Syllables for Me'en, Blin, and Sebatbeit.\",\n    \"U+AB00–AB2F\": \"Ethiopic Extended-A. Extra characters for Gamo-Gofa-Dawro, Basketo, and Gumuz.\",\n    \"U+1780–17FF\": \"Khmer.\",\n    \"U+1800–18AF\": \"Mongolian.\",\n    \"U+1B80–1BBF\": \"Sundanese.\",\n    \"U+1CC0–1CCF\": \"Sundanese Supplement. Punctuation.\",\n    \"U+4E00–9FD5\": \"CJK (Chinese, Japanese, Korean) Unified Ideographs. Most common ideographs for modern Chinese and Japanese.\",\n    \"U+3400–4DB5\": \"CJK Unified Ideographs Extension A. Rare ideographs.\",\n    \"U+2F00–2FDF\": \"Kangxi Radicals.\",\n    \"U+2E80–2EFF\": \"CJK Radicals Supplement. Alternative forms of Kangxi Radicals.\",\n    \"U+1100–11FF\": \"Hangul Jamo.\",\n    \"U+AC00–D7AF\": \"Hangul Syllables.\",\n    \"U+3040–309F\": \"Hiragana.\",\n    \"U+30A0–30FF\": \"Katakana.\",\n    \"U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F\": \"Japanese Kanji, Hiragana and Katakana characters plus Yen/Yuan symbol.\",\n    \"U+A4D0–A4FF\": \"Lisu.\",\n    \"U+A000–A48F\": \"Yi Syllables.\",\n    \"U+A490–A4CF\": \"Yi Radicals.\",\n    \"U+2000-206F\": \"General Punctuation.\",\n    \"U+3000–303F\": \"CJK Symbols and Punctuation.\",\n    \"U+2070–209F\": \"Superscripts and Subscripts.\",\n    \"U+20A0–20CF\": \"Currency Symbols.\",\n    \"U+2100–214F\": \"Letterlike Symbols.\",\n    \"U+2150–218F\": \"Number Forms.\",\n    \"U+2190–21FF\": \"Arrows.\",\n    \"U+2200–22FF\": \"Mathematical Operators.\",\n    \"U+2300–23FF\": \"Miscellaneous Technical.\",\n    \"U+E000-F8FF\": \"Private Use Area.\",\n    \"U+FB00–FB4F\": \"Alphabetic Presentation Forms. Ligatures for latin, Armenian, and Hebrew.\",\n    \"U+FB50–FDFF\": \"Arabic Presentation Forms-A. Contextual forms / ligatures for Persian, Urdu, Sindhi, Central Asian languages, etc, Arabic pedagogical symbols, word ligatures.\",\n    \"U+1F600–1F64F\": \"Emoji: Emoticons.\",\n    \"U+2600–26FF\": \"Emoji: Miscellaneous Symbols.\",\n    \"U+1F300–1F5FF\": \"Emoji: Miscellaneous Symbols and Pictographs.\",\n    \"U+1F900–1F9FF\": \"Emoji: Supplemental Symbols and Pictographs.\",\n    \"U+1F680–1F6FF\": \"Emoji: Transport and Map Symbols.\",\n    \"text-bottom\": \"Align the bottom of the box with the after-edge of the parent element's font.\",\n    \"text-top\": \"Align the top of the box with the before-edge of the parent element's font.\",\n    \"break\": \"If the content fits within the CSS Region, then this property has no effect.\",\n    \"pre\": \"Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'none'.\",\n    \"pre-line\": \"Sets 'white-space-collapsing' to 'preserve-breaks' and 'text-wrap' to 'normal'.\",\n    \"pre-wrap\": \"Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'normal'.\",\n    \"scroll-position\": \"Indicates that the author expects to animate or change the scroll position of the element in the near future.\",\n    \"horizontal-tb\": \"Top-to-bottom block flow direction. The writing mode is horizontal.\",\n    \"sideways-lr\": \"Left-to-right block flow direction. The writing mode is vertical, while the typographic mode is horizontal.\",\n    \"sideways-rl\": \"Right-to-left block flow direction. The writing mode is vertical, while the typographic mode is horizontal.\",\n    \"vertical-lr\": \"Left-to-right block flow direction. The writing mode is vertical.\",\n    \"vertical-rl\": \"Right-to-left block flow direction. The writing mode is vertical.\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js ***!
  \**********************************************************************************************************************/
/*! exports provided: positionKeywords, repeatStyleKeywords, lineStyleKeywords, lineWidthKeywords, boxKeywords, geometryBoxKeywords, cssWideKeywords, imageFunctions, transitionTimingFunctions, basicShapeFunctions, units, html5Tags, svgElements, pageBoxDirectives */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"positionKeywords\", function() { return positionKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeatStyleKeywords\", function() { return repeatStyleKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineStyleKeywords\", function() { return lineStyleKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineWidthKeywords\", function() { return lineWidthKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boxKeywords\", function() { return boxKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"geometryBoxKeywords\", function() { return geometryBoxKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssWideKeywords\", function() { return cssWideKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageFunctions\", function() { return imageFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionTimingFunctions\", function() { return transitionTimingFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"basicShapeFunctions\", function() { return basicShapeFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"units\", function() { return units; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html5Tags\", function() { return html5Tags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"svgElements\", function() { return svgElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pageBoxDirectives\", function() { return pageBoxDirectives; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar positionKeywords = {\n    'bottom': 'Computes to ‘100%’ for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.',\n    'center': 'Computes to ‘50%’ (‘left 50%’) for the horizontal position if the horizontal position is not otherwise specified, or ‘50%’ (‘top 50%’) for the vertical position if it is.',\n    'left': 'Computes to ‘0%’ for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.',\n    'right': 'Computes to ‘100%’ for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.',\n    'top': 'Computes to ‘0%’ for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset.'\n};\nvar repeatStyleKeywords = {\n    'no-repeat': 'Placed once and not repeated in this direction.',\n    'repeat': 'Repeated in this direction as often as needed to cover the background painting area.',\n    'repeat-x': 'Computes to ‘repeat no-repeat’.',\n    'repeat-y': 'Computes to ‘no-repeat repeat’.',\n    'round': 'Repeated as often as will fit within the background positioning area. If it doesn’t fit a whole number of times, it is rescaled so that it does.',\n    'space': 'Repeated as often as will fit within the background positioning area without being clipped and then the images are spaced out to fill the area.'\n};\nvar lineStyleKeywords = {\n    'dashed': 'A series of square-ended dashes.',\n    'dotted': 'A series of round dots.',\n    'double': 'Two parallel solid lines with some space between them.',\n    'groove': 'Looks as if it were carved in the canvas.',\n    'hidden': 'Same as ‘none’, but has different behavior in the border conflict resolution rules for border-collapsed tables.',\n    'inset': 'Looks as if the content on the inside of the border is sunken into the canvas.',\n    'none': 'No border. Color and width are ignored.',\n    'outset': 'Looks as if the content on the inside of the border is coming out of the canvas.',\n    'ridge': 'Looks as if it were coming out of the canvas.',\n    'solid': 'A single line segment.'\n};\nvar lineWidthKeywords = ['medium', 'thick', 'thin'];\nvar boxKeywords = {\n    'border-box': 'The background is painted within (clipped to) the border box.',\n    'content-box': 'The background is painted within (clipped to) the content box.',\n    'padding-box': 'The background is painted within (clipped to) the padding box.'\n};\nvar geometryBoxKeywords = {\n    'margin-box': 'Uses the margin box as reference box.',\n    'fill-box': 'Uses the object bounding box as reference box.',\n    'stroke-box': 'Uses the stroke bounding box as reference box.',\n    'view-box': 'Uses the nearest SVG viewport as reference box.'\n};\nvar cssWideKeywords = {\n    'initial': 'Represents the value specified as the property’s initial value.',\n    'inherit': 'Represents the computed value of the property on the element’s parent.',\n    'unset': 'Acts as either `inherit` or `initial`, depending on whether the property is inherited or not.'\n};\nvar imageFunctions = {\n    'url()': 'Reference an image file by URL',\n    'image()': 'Provide image fallbacks and annotations.',\n    '-webkit-image-set()': 'Provide multiple resolutions. Remember to use unprefixed image-set() in addition.',\n    'image-set()': 'Provide multiple resolutions of an image and const the UA decide which is most appropriate in a given situation.',\n    '-moz-element()': 'Use an element in the document as an image. Remember to use unprefixed element() in addition.',\n    'element()': 'Use an element in the document as an image.',\n    'cross-fade()': 'Indicates the two images to be combined and how far along in the transition the combination is.',\n    '-webkit-gradient()': 'Deprecated. Use modern linear-gradient() or radial-gradient() instead.',\n    '-webkit-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    '-moz-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    '-o-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    'linear-gradient()': 'A linear gradient is created by specifying a straight gradient line, and then several colors placed along that line.',\n    '-webkit-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    '-moz-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    '-o-repeating-linear-gradient()': 'RepeatingLinear gradient. Remember to use unprefixed version in addition.',\n    'repeating-linear-gradient()': 'Same as linear-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.',\n    '-webkit-radial-gradient()': 'Radial gradient. Remember to use unprefixed version in addition.',\n    '-moz-radial-gradient()': 'Radial gradient. Remember to use unprefixed version in addition.',\n    'radial-gradient()': 'Colors emerge from a single point and smoothly spread outward in a circular or elliptical shape.',\n    '-webkit-repeating-radial-gradient()': 'Repeating radial gradient. Remember to use unprefixed version in addition.',\n    '-moz-repeating-radial-gradient()': 'Repeating radial gradient. Remember to use unprefixed version in addition.',\n    'repeating-radial-gradient()': 'Same as radial-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.'\n};\nvar transitionTimingFunctions = {\n    'ease': 'Equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0).',\n    'ease-in': 'Equivalent to cubic-bezier(0.42, 0, 1.0, 1.0).',\n    'ease-in-out': 'Equivalent to cubic-bezier(0.42, 0, 0.58, 1.0).',\n    'ease-out': 'Equivalent to cubic-bezier(0, 0, 0.58, 1.0).',\n    'linear': 'Equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0).',\n    'step-end': 'Equivalent to steps(1, end).',\n    'step-start': 'Equivalent to steps(1, start).',\n    'steps()': 'The first parameter specifies the number of intervals in the function. The second parameter, which is optional, is either the value “start” or “end”.',\n    'cubic-bezier()': 'Specifies a cubic-bezier curve. The four values specify points P1 and P2  of the curve as (x1, y1, x2, y2).',\n    'cubic-bezier(0.6, -0.28, 0.735, 0.045)': 'Ease-in Back. Overshoots.',\n    'cubic-bezier(0.68, -0.55, 0.265, 1.55)': 'Ease-in-out Back. Overshoots.',\n    'cubic-bezier(0.175, 0.885, 0.32, 1.275)': 'Ease-out Back. Overshoots.',\n    'cubic-bezier(0.6, 0.04, 0.98, 0.335)': 'Ease-in Circular. Based on half circle.',\n    'cubic-bezier(0.785, 0.135, 0.15, 0.86)': 'Ease-in-out Circular. Based on half circle.',\n    'cubic-bezier(0.075, 0.82, 0.165, 1)': 'Ease-out Circular. Based on half circle.',\n    'cubic-bezier(0.55, 0.055, 0.675, 0.19)': 'Ease-in Cubic. Based on power of three.',\n    'cubic-bezier(0.645, 0.045, 0.355, 1)': 'Ease-in-out Cubic. Based on power of three.',\n    'cubic-bezier(0.215, 0.610, 0.355, 1)': 'Ease-out Cubic. Based on power of three.',\n    'cubic-bezier(0.95, 0.05, 0.795, 0.035)': 'Ease-in Exponential. Based on two to the power ten.',\n    'cubic-bezier(1, 0, 0, 1)': 'Ease-in-out Exponential. Based on two to the power ten.',\n    'cubic-bezier(0.19, 1, 0.22, 1)': 'Ease-out Exponential. Based on two to the power ten.',\n    'cubic-bezier(0.47, 0, 0.745, 0.715)': 'Ease-in Sine.',\n    'cubic-bezier(0.445, 0.05, 0.55, 0.95)': 'Ease-in-out Sine.',\n    'cubic-bezier(0.39, 0.575, 0.565, 1)': 'Ease-out Sine.',\n    'cubic-bezier(0.55, 0.085, 0.68, 0.53)': 'Ease-in Quadratic. Based on power of two.',\n    'cubic-bezier(0.455, 0.03, 0.515, 0.955)': 'Ease-in-out Quadratic. Based on power of two.',\n    'cubic-bezier(0.25, 0.46, 0.45, 0.94)': 'Ease-out Quadratic. Based on power of two.',\n    'cubic-bezier(0.895, 0.03, 0.685, 0.22)': 'Ease-in Quartic. Based on power of four.',\n    'cubic-bezier(0.77, 0, 0.175, 1)': 'Ease-in-out Quartic. Based on power of four.',\n    'cubic-bezier(0.165, 0.84, 0.44, 1)': 'Ease-out Quartic. Based on power of four.',\n    'cubic-bezier(0.755, 0.05, 0.855, 0.06)': 'Ease-in Quintic. Based on power of five.',\n    'cubic-bezier(0.86, 0, 0.07, 1)': 'Ease-in-out Quintic. Based on power of five.',\n    'cubic-bezier(0.23, 1, 0.320, 1)': 'Ease-out Quintic. Based on power of five.'\n};\nvar basicShapeFunctions = {\n    'circle()': 'Defines a circle.',\n    'ellipse()': 'Defines an ellipse.',\n    'inset()': 'Defines an inset rectangle.',\n    'polygon()': 'Defines a polygon.'\n};\nvar units = {\n    'length': ['em', 'rem', 'ex', 'px', 'cm', 'mm', 'in', 'pt', 'pc', 'ch', 'vw', 'vh', 'vmin', 'vmax'],\n    'angle': ['deg', 'rad', 'grad', 'turn'],\n    'time': ['ms', 's'],\n    'frequency': ['Hz', 'kHz'],\n    'resolution': ['dpi', 'dpcm', 'dppx'],\n    'percentage': ['%', 'fr']\n};\nvar html5Tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption',\n    'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer',\n    'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link',\n    'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q',\n    'rb', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td',\n    'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'const', 'video', 'wbr'];\nvar svgElements = ['circle', 'clipPath', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',\n    'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology',\n    'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'foreignObject', 'g', 'hatch', 'hatchpath', 'image', 'line', 'linearGradient',\n    'marker', 'mask', 'mesh', 'meshpatch', 'meshrow', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'set', 'solidcolor', 'stop', 'svg', 'switch',\n    'symbol', 'text', 'textPath', 'tspan', 'use', 'view'];\nvar pageBoxDirectives = [\n    '@bottom-center', '@bottom-left', '@bottom-left-corner', '@bottom-right', '@bottom-right-corner',\n    '@left-bottom', '@left-middle', '@left-top', '@right-bottom', '@right-middle', '@right-top',\n    '@top-center', '@top-left', '@top-left-corner', '@top-right', '@top-right-corner'\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js ***!
  \*****************************************************************************************************************/
/*! exports provided: colorFunctions, colors, colorKeywords, isColorConstructor, isColorValue, hexDigit, colorFromHex, colorFrom256RGB, colorFromHSL, hslFromColor, getColorValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFunctions\", function() { return colorFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colors\", function() { return colors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorKeywords\", function() { return colorKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColorConstructor\", function() { return isColorConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColorValue\", function() { return isColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexDigit\", function() { return hexDigit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHex\", function() { return colorFromHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFrom256RGB\", function() { return colorFrom256RGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHSL\", function() { return colorFromHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hslFromColor\", function() { return hslFromColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColorValue\", function() { return getColorValue; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar colorFunctions = [\n    { func: 'rgb($red, $green, $blue)', desc: localize('css.builtin.rgb', 'Creates a Color from red, green, and blue values.') },\n    { func: 'rgba($red, $green, $blue, $alpha)', desc: localize('css.builtin.rgba', 'Creates a Color from red, green, blue, and alpha values.') },\n    { func: 'hsl($hue, $saturation, $lightness)', desc: localize('css.builtin.hsl', 'Creates a Color from hue, saturation, and lightness values.') },\n    { func: 'hsla($hue, $saturation, $lightness, $alpha)', desc: localize('css.builtin.hsla', 'Creates a Color from hue, saturation, lightness, and alpha values.') }\n];\nvar colors = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgrey: '#a9a9a9',\n    darkgreen: '#006400',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgrey: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370d8',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#d87093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    red: '#ff0000',\n    rebeccapurple: '#663399',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\nvar colorKeywords = {\n    'currentColor': 'The value of the \\'color\\' property. The computed value of the \\'currentColor\\' keyword is the computed value of the \\'color\\' property. If the \\'currentColor\\' keyword is set on the \\'color\\' property itself, it is treated as \\'color:inherit\\' at parse time.',\n    'transparent': 'Fully transparent. This keyword can be considered a shorthand for rgba(0,0,0,0) which is its computed value.',\n};\nfunction getNumericValue(node, factor) {\n    var val = node.getText();\n    var m = val.match(/^([-+]?[0-9]*\\.?[0-9]+)(%?)$/);\n    if (m) {\n        if (m[2]) {\n            factor = 100.0;\n        }\n        var result = parseFloat(m[1]) / factor;\n        if (result >= 0 && result <= 1) {\n            return result;\n        }\n    }\n    throw new Error();\n}\nfunction getAngle(node) {\n    var val = node.getText();\n    var m = val.match(/^([-+]?[0-9]*\\.?[0-9]+)(deg)?$/);\n    if (m) {\n        return parseFloat(val) % 360;\n    }\n    throw new Error();\n}\nfunction isColorConstructor(node) {\n    var name = node.getName();\n    if (!name) {\n        return false;\n    }\n    return /^(rgb|rgba|hsl|hsla)$/gi.test(name);\n}\n/**\n * Returns true if the node is a color value - either\n * defined a hex number, as rgb or rgba function, or\n * as color name.\n */\nfunction isColorValue(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue) {\n        return true;\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Function) {\n        return isColorConstructor(node);\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier) {\n        if (node.parent && node.parent.type !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            return false;\n        }\n        var candidateColor = node.getText().toLowerCase();\n        if (candidateColor === 'none') {\n            return false;\n        }\n        if (colors[candidateColor]) {\n            return true;\n        }\n    }\n    return false;\n}\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar F = 70;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nfunction colorFromHex(text) {\n    if (text[0] !== '#') {\n        return null;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return null;\n}\nfunction colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\nfunction colorFromHSL(hue, sat, light, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    hue = hue / 60.0;\n    if (sat === 0) {\n        return { red: light, green: light, blue: light, alpha: alpha };\n    }\n    else {\n        var hueToRgb = function (t1, t2, hue) {\n            while (hue < 0) {\n                hue += 6;\n            }\n            while (hue >= 6) {\n                hue -= 6;\n            }\n            if (hue < 1) {\n                return (t2 - t1) * hue + t1;\n            }\n            if (hue < 3) {\n                return t2;\n            }\n            if (hue < 4) {\n                return (t2 - t1) * (4 - hue) + t1;\n            }\n            return t1;\n        };\n        var t2 = light <= 0.5 ? (light * (sat + 1)) : (light + sat - (light * sat));\n        var t1 = light * 2 - t2;\n        return { red: hueToRgb(t1, t2, hue + 2), green: hueToRgb(t1, t2, hue), blue: hueToRgb(t1, t2, hue - 2), alpha: alpha };\n    }\n}\nfunction hslFromColor(rgba) {\n    var r = rgba.red;\n    var g = rgba.green;\n    var b = rgba.blue;\n    var a = rgba.alpha;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (min + max) / 2;\n    var chroma = max - min;\n    if (chroma > 0) {\n        s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n        switch (max) {\n            case r:\n                h = (g - b) / chroma + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / chroma + 2;\n                break;\n            case b:\n                h = (r - g) / chroma + 4;\n                break;\n        }\n        h *= 60;\n        h = Math.round(h);\n    }\n    return { h: h, s: s, l: l, a: a };\n}\nfunction getColorValue(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue) {\n        var text = node.getText();\n        return colorFromHex(text);\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Function) {\n        var functionNode = node;\n        var name = functionNode.getName();\n        var colorValues = functionNode.getArguments().getChildren();\n        if (!name || colorValues.length < 3 || colorValues.length > 4) {\n            return null;\n        }\n        try {\n            var alpha = colorValues.length === 4 ? getNumericValue(colorValues[3], 1) : 1;\n            if (name === 'rgb' || name === 'rgba') {\n                return {\n                    red: getNumericValue(colorValues[0], 255.0),\n                    green: getNumericValue(colorValues[1], 255.0),\n                    blue: getNumericValue(colorValues[2], 255.0),\n                    alpha: alpha\n                };\n            }\n            else if (name === 'hsl' || name === 'hsla') {\n                var h = getAngle(colorValues[0]);\n                var s = getNumericValue(colorValues[1], 100.0);\n                var l = getNumericValue(colorValues[2], 100.0);\n                return colorFromHSL(h, s, l, alpha);\n            }\n        }\n        catch (e) {\n            // parse error on numeric value\n            return null;\n        }\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier) {\n        if (node.parent && node.parent.type !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            return null;\n        }\n        var term = node.parent;\n        if (term.parent && term.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].BinaryExpression) {\n            var expression = term.parent;\n            if (expression.parent && expression.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ListEntry && expression.parent.key === expression) {\n                return null;\n            }\n        }\n        var candidateColor = node.getText().toLowerCase();\n        if (candidateColor === 'none') {\n            return null;\n        }\n        var colorHex = colors[candidateColor];\n        if (colorHex) {\n            return colorFromHex(colorHex);\n        }\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js ***!
  \**********************************************************************************************************************/
/*! exports provided: CSSDataManager, supportedInMoreThanOneBrowser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSDataManager\", function() { return CSSDataManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supportedInMoreThanOneBrowser\", function() { return supportedInMoreThanOneBrowser; });\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/objects.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar CSSDataManager = /** @class */ (function () {\n    function CSSDataManager(dataProviders) {\n        this.dataProviders = dataProviders;\n        this._propertySet = {};\n        this._atDirectiveSet = {};\n        this._pseudoClassSet = {};\n        this._pseudoElementSet = {};\n        this._properties = [];\n        this._atDirectives = [];\n        this._pseudoClasses = [];\n        this._pseudoElements = [];\n        this.collectData();\n    }\n    CSSDataManager.prototype.addDataProviders = function (providers) {\n        this.dataProviders = this.dataProviders.concat(providers);\n        this.collectData();\n    };\n    /**\n     * Collect all data  & handle duplicates\n     */\n    CSSDataManager.prototype.collectData = function () {\n        var _this = this;\n        this.dataProviders.forEach(function (provider) {\n            provider.provideProperties().forEach(function (p) {\n                if (!_this._propertySet[p.name]) {\n                    _this._propertySet[p.name] = p;\n                }\n            });\n            provider.provideAtDirectives().forEach(function (p) {\n                if (!_this._atDirectiveSet[p.name]) {\n                    _this._atDirectiveSet[p.name] = p;\n                }\n            });\n            provider.providePseudoClasses().forEach(function (p) {\n                if (!_this._pseudoClassSet[p.name]) {\n                    _this._pseudoClassSet[p.name] = p;\n                }\n            });\n            provider.providePseudoElements().forEach(function (p) {\n                if (!_this._pseudoElementSet[p.name]) {\n                    _this._pseudoElementSet[p.name] = p;\n                }\n            });\n        });\n        this._properties = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._propertySet);\n        this._atDirectives = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._atDirectiveSet);\n        this._pseudoClasses = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._pseudoClassSet);\n        this._pseudoElements = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._pseudoElementSet);\n    };\n    CSSDataManager.prototype.getProperty = function (name) { return this._propertySet[name]; };\n    CSSDataManager.prototype.getAtDirective = function (name) { return this._atDirectiveSet[name]; };\n    CSSDataManager.prototype.getPseudoClass = function (name) { return this._pseudoClassSet[name]; };\n    CSSDataManager.prototype.getPseudoElement = function (name) { return this._pseudoElementSet[name]; };\n    CSSDataManager.prototype.getProperties = function (majorBrowserSupport) {\n        if (majorBrowserSupport === void 0) { majorBrowserSupport = true; }\n        if (!majorBrowserSupport) {\n            return this._properties;\n        }\n        else {\n            return this._properties.filter(supportedInMoreThanOneBrowser);\n        }\n    };\n    CSSDataManager.prototype.getAtDirectives = function (majorBrowserSupport) {\n        if (majorBrowserSupport === void 0) { majorBrowserSupport = true; }\n        if (!majorBrowserSupport) {\n            return this._atDirectives;\n        }\n        else {\n            return this._atDirectives.filter(supportedInMoreThanOneBrowser);\n        }\n    };\n    CSSDataManager.prototype.getPseudoClasses = function (majorBrowserSupport) {\n        if (majorBrowserSupport === void 0) { majorBrowserSupport = true; }\n        if (!majorBrowserSupport) {\n            return this._pseudoClasses;\n        }\n        else {\n            return this._pseudoClasses.filter(supportedInMoreThanOneBrowser);\n        }\n    };\n    CSSDataManager.prototype.getPseudoElements = function (majorBrowserSupport) {\n        if (majorBrowserSupport === void 0) { majorBrowserSupport = true; }\n        if (!majorBrowserSupport) {\n            return this._pseudoElements;\n        }\n        else {\n            return this._pseudoElements.filter(supportedInMoreThanOneBrowser);\n        }\n    };\n    CSSDataManager.prototype.isKnownProperty = function (name) {\n        return name.toLowerCase() in this._propertySet;\n    };\n    CSSDataManager.prototype.isStandardProperty = function (name) {\n        return this.isKnownProperty(name) &&\n            (!this._propertySet[name.toLowerCase()].status || this._propertySet[name.toLowerCase()].status === 'standard');\n    };\n    return CSSDataManager;\n}());\n\nfunction supportedInMoreThanOneBrowser(entry) {\n    if (!entry.browsers) {\n        return true;\n    }\n    return entry.browsers.length > 1;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZGF0YU1hbmFnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZGF0YU1hbmFnZXIuanM/Y2Q0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIG9iamVjdHMgZnJvbSAnLi4vdXRpbHMvb2JqZWN0cy5qcyc7XG52YXIgQ1NTRGF0YU1hbmFnZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ1NTRGF0YU1hbmFnZXIoZGF0YVByb3ZpZGVycykge1xuICAgICAgICB0aGlzLmRhdGFQcm92aWRlcnMgPSBkYXRhUHJvdmlkZXJzO1xuICAgICAgICB0aGlzLl9wcm9wZXJ0eVNldCA9IHt9O1xuICAgICAgICB0aGlzLl9hdERpcmVjdGl2ZVNldCA9IHt9O1xuICAgICAgICB0aGlzLl9wc2V1ZG9DbGFzc1NldCA9IHt9O1xuICAgICAgICB0aGlzLl9wc2V1ZG9FbGVtZW50U2V0ID0ge307XG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fYXREaXJlY3RpdmVzID0gW107XG4gICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fcHNldWRvRWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5jb2xsZWN0RGF0YSgpO1xuICAgIH1cbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuYWRkRGF0YVByb3ZpZGVycyA9IGZ1bmN0aW9uIChwcm92aWRlcnMpIHtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXJzID0gdGhpcy5kYXRhUHJvdmlkZXJzLmNvbmNhdChwcm92aWRlcnMpO1xuICAgICAgICB0aGlzLmNvbGxlY3REYXRhKCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDb2xsZWN0IGFsbCBkYXRhICAmIGhhbmRsZSBkdXBsaWNhdGVzXG4gICAgICovXG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLmNvbGxlY3REYXRhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLmRhdGFQcm92aWRlcnMuZm9yRWFjaChmdW5jdGlvbiAocHJvdmlkZXIpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLnByb3ZpZGVQcm9wZXJ0aWVzKCkuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICAgIGlmICghX3RoaXMuX3Byb3BlcnR5U2V0W3AubmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX3Byb3BlcnR5U2V0W3AubmFtZV0gPSBwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcHJvdmlkZXIucHJvdmlkZUF0RGlyZWN0aXZlcygpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLl9hdERpcmVjdGl2ZVNldFtwLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLl9hdERpcmVjdGl2ZVNldFtwLm5hbWVdID0gcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHByb3ZpZGVyLnByb3ZpZGVQc2V1ZG9DbGFzc2VzKCkuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICAgIGlmICghX3RoaXMuX3BzZXVkb0NsYXNzU2V0W3AubmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX3BzZXVkb0NsYXNzU2V0W3AubmFtZV0gPSBwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcHJvdmlkZXIucHJvdmlkZVBzZXVkb0VsZW1lbnRzKCkuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICAgIGlmICghX3RoaXMuX3BzZXVkb0VsZW1lbnRTZXRbcC5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fcHNldWRvRWxlbWVudFNldFtwLm5hbWVdID0gcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBvYmplY3RzLnZhbHVlcyh0aGlzLl9wcm9wZXJ0eVNldCk7XG4gICAgICAgIHRoaXMuX2F0RGlyZWN0aXZlcyA9IG9iamVjdHMudmFsdWVzKHRoaXMuX2F0RGlyZWN0aXZlU2V0KTtcbiAgICAgICAgdGhpcy5fcHNldWRvQ2xhc3NlcyA9IG9iamVjdHMudmFsdWVzKHRoaXMuX3BzZXVkb0NsYXNzU2V0KTtcbiAgICAgICAgdGhpcy5fcHNldWRvRWxlbWVudHMgPSBvYmplY3RzLnZhbHVlcyh0aGlzLl9wc2V1ZG9FbGVtZW50U2V0KTtcbiAgICB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5nZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiB0aGlzLl9wcm9wZXJ0eVNldFtuYW1lXTsgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuZ2V0QXREaXJlY3RpdmUgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gdGhpcy5fYXREaXJlY3RpdmVTZXRbbmFtZV07IH07XG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLmdldFBzZXVkb0NsYXNzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIHRoaXMuX3BzZXVkb0NsYXNzU2V0W25hbWVdOyB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5nZXRQc2V1ZG9FbGVtZW50ID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIHRoaXMuX3BzZXVkb0VsZW1lbnRTZXRbbmFtZV07IH07XG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLmdldFByb3BlcnRpZXMgPSBmdW5jdGlvbiAobWFqb3JCcm93c2VyU3VwcG9ydCkge1xuICAgICAgICBpZiAobWFqb3JCcm93c2VyU3VwcG9ydCA9PT0gdm9pZCAwKSB7IG1ham9yQnJvd3NlclN1cHBvcnQgPSB0cnVlOyB9XG4gICAgICAgIGlmICghbWFqb3JCcm93c2VyU3VwcG9ydCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3BlcnRpZXM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGVydGllcy5maWx0ZXIoc3VwcG9ydGVkSW5Nb3JlVGhhbk9uZUJyb3dzZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuZ2V0QXREaXJlY3RpdmVzID0gZnVuY3Rpb24gKG1ham9yQnJvd3NlclN1cHBvcnQpIHtcbiAgICAgICAgaWYgKG1ham9yQnJvd3NlclN1cHBvcnQgPT09IHZvaWQgMCkgeyBtYWpvckJyb3dzZXJTdXBwb3J0ID0gdHJ1ZTsgfVxuICAgICAgICBpZiAoIW1ham9yQnJvd3NlclN1cHBvcnQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hdERpcmVjdGl2ZXM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXREaXJlY3RpdmVzLmZpbHRlcihzdXBwb3J0ZWRJbk1vcmVUaGFuT25lQnJvd3Nlcik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5nZXRQc2V1ZG9DbGFzc2VzID0gZnVuY3Rpb24gKG1ham9yQnJvd3NlclN1cHBvcnQpIHtcbiAgICAgICAgaWYgKG1ham9yQnJvd3NlclN1cHBvcnQgPT09IHZvaWQgMCkgeyBtYWpvckJyb3dzZXJTdXBwb3J0ID0gdHJ1ZTsgfVxuICAgICAgICBpZiAoIW1ham9yQnJvd3NlclN1cHBvcnQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9DbGFzc2VzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3BzZXVkb0NsYXNzZXMuZmlsdGVyKHN1cHBvcnRlZEluTW9yZVRoYW5PbmVCcm93c2VyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLmdldFBzZXVkb0VsZW1lbnRzID0gZnVuY3Rpb24gKG1ham9yQnJvd3NlclN1cHBvcnQpIHtcbiAgICAgICAgaWYgKG1ham9yQnJvd3NlclN1cHBvcnQgPT09IHZvaWQgMCkgeyBtYWpvckJyb3dzZXJTdXBwb3J0ID0gdHJ1ZTsgfVxuICAgICAgICBpZiAoIW1ham9yQnJvd3NlclN1cHBvcnQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9FbGVtZW50cztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9FbGVtZW50cy5maWx0ZXIoc3VwcG9ydGVkSW5Nb3JlVGhhbk9uZUJyb3dzZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuaXNLbm93blByb3BlcnR5ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKSBpbiB0aGlzLl9wcm9wZXJ0eVNldDtcbiAgICB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5pc1N0YW5kYXJkUHJvcGVydHkgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0tub3duUHJvcGVydHkobmFtZSkgJiZcbiAgICAgICAgICAgICghdGhpcy5fcHJvcGVydHlTZXRbbmFtZS50b0xvd2VyQ2FzZSgpXS5zdGF0dXMgfHwgdGhpcy5fcHJvcGVydHlTZXRbbmFtZS50b0xvd2VyQ2FzZSgpXS5zdGF0dXMgPT09ICdzdGFuZGFyZCcpO1xuICAgIH07XG4gICAgcmV0dXJuIENTU0RhdGFNYW5hZ2VyO1xufSgpKTtcbmV4cG9ydCB7IENTU0RhdGFNYW5hZ2VyIH07XG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydGVkSW5Nb3JlVGhhbk9uZUJyb3dzZXIoZW50cnkpIHtcbiAgICBpZiAoIWVudHJ5LmJyb3dzZXJzKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZW50cnkuYnJvd3NlcnMubGVuZ3RoID4gMTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js ***!
  \***********************************************************************************************************************/
/*! exports provided: CSSDataProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSDataProvider\", function() { return CSSDataProvider; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar CSSDataProvider = /** @class */ (function () {\n    /**\n     * Currently, unversioned data uses the V1 implementation\n     * In the future when the provider handles multiple versions of HTML custom data,\n     * use the latest implementation for unversioned data\n     */\n    function CSSDataProvider(data) {\n        this._properties = [];\n        this._atDirectives = [];\n        this._pseudoClasses = [];\n        this._pseudoElements = [];\n        this.addData(data);\n    }\n    CSSDataProvider.prototype.provideProperties = function () {\n        return this._properties;\n    };\n    CSSDataProvider.prototype.provideAtDirectives = function () {\n        return this._atDirectives;\n    };\n    CSSDataProvider.prototype.providePseudoClasses = function () {\n        return this._pseudoClasses;\n    };\n    CSSDataProvider.prototype.providePseudoElements = function () {\n        return this._pseudoElements;\n    };\n    CSSDataProvider.prototype.addData = function (data) {\n        if (data.properties) {\n            this._properties = this._properties.concat(data.properties);\n        }\n        if (data.atDirectives) {\n            this._atDirectives = this._atDirectives.concat(data.atDirectives);\n        }\n        if (data.pseudoClasses) {\n            this._pseudoClasses = this._pseudoClasses.concat(data.pseudoClasses);\n        }\n        if (data.pseudoElements) {\n            this._pseudoElements = this._pseudoElements.concat(data.pseudoElements);\n        }\n    };\n    return CSSDataProvider;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZGF0YVByb3ZpZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9sYW5ndWFnZUZhY3RzL2RhdGFQcm92aWRlci5qcz9mZWMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xudmFyIENTU0RhdGFQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDdXJyZW50bHksIHVudmVyc2lvbmVkIGRhdGEgdXNlcyB0aGUgVjEgaW1wbGVtZW50YXRpb25cbiAgICAgKiBJbiB0aGUgZnV0dXJlIHdoZW4gdGhlIHByb3ZpZGVyIGhhbmRsZXMgbXVsdGlwbGUgdmVyc2lvbnMgb2YgSFRNTCBjdXN0b20gZGF0YSxcbiAgICAgKiB1c2UgdGhlIGxhdGVzdCBpbXBsZW1lbnRhdGlvbiBmb3IgdW52ZXJzaW9uZWQgZGF0YVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIENTU0RhdGFQcm92aWRlcihkYXRhKSB7XG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fYXREaXJlY3RpdmVzID0gW107XG4gICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fcHNldWRvRWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5hZGREYXRhKGRhdGEpO1xuICAgIH1cbiAgICBDU1NEYXRhUHJvdmlkZXIucHJvdG90eXBlLnByb3ZpZGVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGVydGllcztcbiAgICB9O1xuICAgIENTU0RhdGFQcm92aWRlci5wcm90b3R5cGUucHJvdmlkZUF0RGlyZWN0aXZlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F0RGlyZWN0aXZlcztcbiAgICB9O1xuICAgIENTU0RhdGFQcm92aWRlci5wcm90b3R5cGUucHJvdmlkZVBzZXVkb0NsYXNzZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9DbGFzc2VzO1xuICAgIH07XG4gICAgQ1NTRGF0YVByb3ZpZGVyLnByb3RvdHlwZS5wcm92aWRlUHNldWRvRWxlbWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9FbGVtZW50cztcbiAgICB9O1xuICAgIENTU0RhdGFQcm92aWRlci5wcm90b3R5cGUuYWRkRGF0YSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmIChkYXRhLnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSB0aGlzLl9wcm9wZXJ0aWVzLmNvbmNhdChkYXRhLnByb3BlcnRpZXMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLmF0RGlyZWN0aXZlcykge1xuICAgICAgICAgICAgdGhpcy5fYXREaXJlY3RpdmVzID0gdGhpcy5fYXREaXJlY3RpdmVzLmNvbmNhdChkYXRhLmF0RGlyZWN0aXZlcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRhdGEucHNldWRvQ2xhc3Nlcykge1xuICAgICAgICAgICAgdGhpcy5fcHNldWRvQ2xhc3NlcyA9IHRoaXMuX3BzZXVkb0NsYXNzZXMuY29uY2F0KGRhdGEucHNldWRvQ2xhc3Nlcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRhdGEucHNldWRvRWxlbWVudHMpIHtcbiAgICAgICAgICAgIHRoaXMuX3BzZXVkb0VsZW1lbnRzID0gdGhpcy5fcHNldWRvRWxlbWVudHMuY29uY2F0KGRhdGEucHNldWRvRWxlbWVudHMpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQ1NTRGF0YVByb3ZpZGVyO1xufSgpKTtcbmV4cG9ydCB7IENTU0RhdGFQcm92aWRlciB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js ***!
  \****************************************************************************************************************/
/*! exports provided: browserNames, getEntryDescription, getBrowserLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"browserNames\", function() { return browserNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEntryDescription\", function() { return getEntryDescription; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBrowserLabel\", function() { return getBrowserLabel; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar browserNames = {\n    E: 'Edge',\n    FF: 'Firefox',\n    S: 'Safari',\n    C: 'Chrome',\n    IE: 'IE',\n    O: 'Opera'\n};\nfunction getEntryStatus(status) {\n    switch (status) {\n        case 'experimental':\n            return '⚠️ Property is experimental. Be cautious when using it.️\\n\\n';\n        case 'nonstandard':\n            return '🚨️ Property is nonstandard. Avoid using it.\\n\\n';\n        case 'obsolete':\n            return '🚨️️️ Property is obsolete. Avoid using it.\\n\\n';\n        default:\n            return '';\n    }\n}\nfunction getEntryDescription(entry) {\n    if (!entry.description || entry.description === '') {\n        return null;\n    }\n    var result = '';\n    if (entry.status) {\n        result += getEntryStatus(entry.status);\n    }\n    result += entry.description;\n    var browserLabel = getBrowserLabel(entry.browsers);\n    if (browserLabel) {\n        result += '\\n(' + browserLabel + ')';\n    }\n    if ('syntax' in entry) {\n        result += \"\\n\\nSyntax: \" + entry.syntax;\n    }\n    return result;\n}\n/**\n * Input is like `[\"E12\",\"FF49\",\"C47\",\"IE\",\"O\"]`\n * Output is like `Edge 12, Firefox 49, Chrome 47, IE, Opera`\n */\nfunction getBrowserLabel(browsers) {\n    if (!browsers || browsers.length === 0) {\n        return null;\n    }\n    return browsers\n        .map(function (b) {\n        var result = '';\n        var matches = b.match(/([A-Z]+)(\\d+)?/);\n        var name = matches[1];\n        var version = matches[2];\n        if (name in browserNames) {\n            result += browserNames[name];\n        }\n        if (version) {\n            result += ' ' + version;\n        }\n        return result;\n    })\n        .join(', ');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZW50cnkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZW50cnkuanM/Zjg4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCB2YXIgYnJvd3Nlck5hbWVzID0ge1xuICAgIEU6ICdFZGdlJyxcbiAgICBGRjogJ0ZpcmVmb3gnLFxuICAgIFM6ICdTYWZhcmknLFxuICAgIEM6ICdDaHJvbWUnLFxuICAgIElFOiAnSUUnLFxuICAgIE86ICdPcGVyYSdcbn07XG5mdW5jdGlvbiBnZXRFbnRyeVN0YXR1cyhzdGF0dXMpIHtcbiAgICBzd2l0Y2ggKHN0YXR1cykge1xuICAgICAgICBjYXNlICdleHBlcmltZW50YWwnOlxuICAgICAgICAgICAgcmV0dXJuICfimqDvuI8gUHJvcGVydHkgaXMgZXhwZXJpbWVudGFsLiBCZSBjYXV0aW91cyB3aGVuIHVzaW5nIGl0Lu+4j1xcblxcbic7XG4gICAgICAgIGNhc2UgJ25vbnN0YW5kYXJkJzpcbiAgICAgICAgICAgIHJldHVybiAn8J+aqO+4jyBQcm9wZXJ0eSBpcyBub25zdGFuZGFyZC4gQXZvaWQgdXNpbmcgaXQuXFxuXFxuJztcbiAgICAgICAgY2FzZSAnb2Jzb2xldGUnOlxuICAgICAgICAgICAgcmV0dXJuICfwn5qo77iP77iP77iPIFByb3BlcnR5IGlzIG9ic29sZXRlLiBBdm9pZCB1c2luZyBpdC5cXG5cXG4nO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnRyeURlc2NyaXB0aW9uKGVudHJ5KSB7XG4gICAgaWYgKCFlbnRyeS5kZXNjcmlwdGlvbiB8fCBlbnRyeS5kZXNjcmlwdGlvbiA9PT0gJycpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICBpZiAoZW50cnkuc3RhdHVzKSB7XG4gICAgICAgIHJlc3VsdCArPSBnZXRFbnRyeVN0YXR1cyhlbnRyeS5zdGF0dXMpO1xuICAgIH1cbiAgICByZXN1bHQgKz0gZW50cnkuZGVzY3JpcHRpb247XG4gICAgdmFyIGJyb3dzZXJMYWJlbCA9IGdldEJyb3dzZXJMYWJlbChlbnRyeS5icm93c2Vycyk7XG4gICAgaWYgKGJyb3dzZXJMYWJlbCkge1xuICAgICAgICByZXN1bHQgKz0gJ1xcbignICsgYnJvd3NlckxhYmVsICsgJyknO1xuICAgIH1cbiAgICBpZiAoJ3N5bnRheCcgaW4gZW50cnkpIHtcbiAgICAgICAgcmVzdWx0ICs9IFwiXFxuXFxuU3ludGF4OiBcIiArIGVudHJ5LnN5bnRheDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogSW5wdXQgaXMgbGlrZSBgW1wiRTEyXCIsXCJGRjQ5XCIsXCJDNDdcIixcIklFXCIsXCJPXCJdYFxuICogT3V0cHV0IGlzIGxpa2UgYEVkZ2UgMTIsIEZpcmVmb3ggNDksIENocm9tZSA0NywgSUUsIE9wZXJhYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QnJvd3NlckxhYmVsKGJyb3dzZXJzKSB7XG4gICAgaWYgKCFicm93c2VycyB8fCBicm93c2Vycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBicm93c2Vyc1xuICAgICAgICAubWFwKGZ1bmN0aW9uIChiKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgdmFyIG1hdGNoZXMgPSBiLm1hdGNoKC8oW0EtWl0rKShcXGQrKT8vKTtcbiAgICAgICAgdmFyIG5hbWUgPSBtYXRjaGVzWzFdO1xuICAgICAgICB2YXIgdmVyc2lvbiA9IG1hdGNoZXNbMl07XG4gICAgICAgIGlmIChuYW1lIGluIGJyb3dzZXJOYW1lcykge1xuICAgICAgICAgICAgcmVzdWx0ICs9IGJyb3dzZXJOYW1lc1tuYW1lXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmVyc2lvbikge1xuICAgICAgICAgICAgcmVzdWx0ICs9ICcgJyArIHZlcnNpb247XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KVxuICAgICAgICAuam9pbignLCAnKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js ***!
  \****************************************************************************************************************/
/*! exports provided: cssDataManager, browserNames, getEntryDescription, getBrowserLabel, colorFunctions, colors, colorKeywords, isColorConstructor, isColorValue, hexDigit, colorFromHex, colorFrom256RGB, colorFromHSL, hslFromColor, getColorValue, positionKeywords, repeatStyleKeywords, lineStyleKeywords, lineWidthKeywords, boxKeywords, geometryBoxKeywords, cssWideKeywords, imageFunctions, transitionTimingFunctions, basicShapeFunctions, units, html5Tags, svgElements, pageBoxDirectives, CSSDataProvider, CSSDataManager, supportedInMoreThanOneBrowser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssDataManager\", function() { return cssDataManager; });\n/* harmony import */ var _data_browsers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/browsers.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js\");\n/* harmony import */ var _dataManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataManager.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js\");\n/* harmony import */ var _dataProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataProvider.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js\");\n/* harmony import */ var _entry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entry.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"browserNames\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_3__[\"browserNames\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getEntryDescription\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_3__[\"getEntryDescription\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getBrowserLabel\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_3__[\"getBrowserLabel\"]; });\n\n/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./colors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFunctions\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"colorFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colors\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"colors\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorKeywords\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"colorKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isColorConstructor\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"isColorConstructor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isColorValue\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"isColorValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hexDigit\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"hexDigit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFromHex\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"colorFromHex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFrom256RGB\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"colorFrom256RGB\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFromHSL\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"colorFromHSL\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hslFromColor\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"hslFromColor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getColorValue\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_4__[\"getColorValue\"]; });\n\n/* harmony import */ var _builtinData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./builtinData.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"positionKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"positionKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"repeatStyleKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"repeatStyleKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lineStyleKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"lineStyleKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lineWidthKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"lineWidthKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"boxKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"boxKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"geometryBoxKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"geometryBoxKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cssWideKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"cssWideKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"imageFunctions\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"imageFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"transitionTimingFunctions\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"transitionTimingFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"basicShapeFunctions\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"basicShapeFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"units\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"units\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html5Tags\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"html5Tags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svgElements\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"svgElements\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"pageBoxDirectives\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_5__[\"pageBoxDirectives\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CSSDataProvider\", function() { return _dataProvider_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSDataProvider\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CSSDataManager\", function() { return _dataManager_js__WEBPACK_IMPORTED_MODULE_1__[\"CSSDataManager\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"supportedInMoreThanOneBrowser\", function() { return _dataManager_js__WEBPACK_IMPORTED_MODULE_1__[\"supportedInMoreThanOneBrowser\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\nvar cssDataManager = new _dataManager_js__WEBPACK_IMPORTED_MODULE_1__[\"CSSDataManager\"]([\n    new _dataProvider_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSDataProvider\"](_data_browsers_js__WEBPACK_IMPORTED_MODULE_0__[\"cssData\"])\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZmFjdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZmFjdHMuanM/ZmU5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIGJyb3dzZXJzIGZyb20gJy4uL2RhdGEvYnJvd3NlcnMuanMnO1xuaW1wb3J0IHsgQ1NTRGF0YU1hbmFnZXIgfSBmcm9tICcuL2RhdGFNYW5hZ2VyLmpzJztcbmltcG9ydCB7IENTU0RhdGFQcm92aWRlciB9IGZyb20gJy4vZGF0YVByb3ZpZGVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZW50cnkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb2xvcnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9idWlsdGluRGF0YS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFQcm92aWRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFNYW5hZ2VyLmpzJztcbmV4cG9ydCB2YXIgY3NzRGF0YU1hbmFnZXIgPSBuZXcgQ1NTRGF0YU1hbmFnZXIoW1xuICAgIG5ldyBDU1NEYXRhUHJvdmlkZXIoYnJvd3NlcnMuY3NzRGF0YSlcbl0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js ***!
  \*************************************************************************************************************/
/*! exports provided: CSSIssueType, ParseError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSIssueType\", function() { return CSSIssueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParseError\", function() { return ParseError; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar CSSIssueType = /** @class */ (function () {\n    function CSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return CSSIssueType;\n}());\n\nvar ParseError = {\n    NumberExpected: new CSSIssueType('css-numberexpected', localize('expected.number', \"number expected\")),\n    ConditionExpected: new CSSIssueType('css-conditionexpected', localize('expected.condt', \"condition expected\")),\n    RuleOrSelectorExpected: new CSSIssueType('css-ruleorselectorexpected', localize('expected.ruleorselector', \"at-rule or selector expected\")),\n    DotExpected: new CSSIssueType('css-dotexpected', localize('expected.dot', \"dot expected\")),\n    ColonExpected: new CSSIssueType('css-colonexpected', localize('expected.colon', \"colon expected\")),\n    SemiColonExpected: new CSSIssueType('css-semicolonexpected', localize('expected.semicolon', \"semi-colon expected\")),\n    TermExpected: new CSSIssueType('css-termexpected', localize('expected.term', \"term expected\")),\n    ExpressionExpected: new CSSIssueType('css-expressionexpected', localize('expected.expression', \"expression expected\")),\n    OperatorExpected: new CSSIssueType('css-operatorexpected', localize('expected.operator', \"operator expected\")),\n    IdentifierExpected: new CSSIssueType('css-identifierexpected', localize('expected.ident', \"identifier expected\")),\n    PercentageExpected: new CSSIssueType('css-percentageexpected', localize('expected.percentage', \"percentage expected\")),\n    URIOrStringExpected: new CSSIssueType('css-uriorstringexpected', localize('expected.uriorstring', \"uri or string expected\")),\n    URIExpected: new CSSIssueType('css-uriexpected', localize('expected.uri', \"URI expected\")),\n    VariableNameExpected: new CSSIssueType('css-varnameexpected', localize('expected.varname', \"variable name expected\")),\n    VariableValueExpected: new CSSIssueType('css-varvalueexpected', localize('expected.varvalue', \"variable value expected\")),\n    PropertyValueExpected: new CSSIssueType('css-propertyvalueexpected', localize('expected.propvalue', \"property value expected\")),\n    LeftCurlyExpected: new CSSIssueType('css-lcurlyexpected', localize('expected.lcurly', \"{ expected\")),\n    RightCurlyExpected: new CSSIssueType('css-rcurlyexpected', localize('expected.rcurly', \"} expected\")),\n    LeftSquareBracketExpected: new CSSIssueType('css-rbracketexpected', localize('expected.lsquare', \"[ expected\")),\n    RightSquareBracketExpected: new CSSIssueType('css-lbracketexpected', localize('expected.rsquare', \"] expected\")),\n    LeftParenthesisExpected: new CSSIssueType('css-lparentexpected', localize('expected.lparen', \"( expected\")),\n    RightParenthesisExpected: new CSSIssueType('css-rparentexpected', localize('expected.rparent', \") expected\")),\n    CommaExpected: new CSSIssueType('css-commaexpected', localize('expected.comma', \"comma expected\")),\n    PageDirectiveOrDeclarationExpected: new CSSIssueType('css-pagedirordeclexpected', localize('expected.pagedirordecl', \"page directive or declaraton expected\")),\n    UnknownAtRule: new CSSIssueType('css-unknownatrule', localize('unknown.atrule', \"at-rule unknown\")),\n    UnknownKeyword: new CSSIssueType('css-unknownkeyword', localize('unknown.keyword', \"unknown keyword\")),\n    SelectorExpected: new CSSIssueType('css-selectorexpected', localize('expected.selector', \"selector expected\")),\n    StringLiteralExpected: new CSSIssueType('css-stringliteralexpected', localize('expected.stringliteral', \"string literal expected\")),\n    WhitespaceExpected: new CSSIssueType('css-whitespaceexpected', localize('expected.whitespace', \"whitespace expected\")),\n    MediaQueryExpected: new CSSIssueType('css-mediaqueryexpected', localize('expected.mediaquery', \"media query expected\"))\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9jc3NFcnJvcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9jc3NFcnJvcnMuanM/M2ZmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIG5scyBmcm9tICcuLi8uLi8uLi9maWxsZXJzL3ZzY29kZS1ubHMuanMnO1xudmFyIGxvY2FsaXplID0gbmxzLmxvYWRNZXNzYWdlQnVuZGxlKCk7XG52YXIgQ1NTSXNzdWVUeXBlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENTU0lzc3VlVHlwZShpZCwgbWVzc2FnZSkge1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIHJldHVybiBDU1NJc3N1ZVR5cGU7XG59KCkpO1xuZXhwb3J0IHsgQ1NTSXNzdWVUeXBlIH07XG5leHBvcnQgdmFyIFBhcnNlRXJyb3IgPSB7XG4gICAgTnVtYmVyRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1udW1iZXJleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5udW1iZXInLCBcIm51bWJlciBleHBlY3RlZFwiKSksXG4gICAgQ29uZGl0aW9uRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1jb25kaXRpb25leHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5jb25kdCcsIFwiY29uZGl0aW9uIGV4cGVjdGVkXCIpKSxcbiAgICBSdWxlT3JTZWxlY3RvckV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtcnVsZW9yc2VsZWN0b3JleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5ydWxlb3JzZWxlY3RvcicsIFwiYXQtcnVsZSBvciBzZWxlY3RvciBleHBlY3RlZFwiKSksXG4gICAgRG90RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1kb3RleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5kb3QnLCBcImRvdCBleHBlY3RlZFwiKSksXG4gICAgQ29sb25FeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWNvbG9uZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuY29sb24nLCBcImNvbG9uIGV4cGVjdGVkXCIpKSxcbiAgICBTZW1pQ29sb25FeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXNlbWljb2xvbmV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnNlbWljb2xvbicsIFwic2VtaS1jb2xvbiBleHBlY3RlZFwiKSksXG4gICAgVGVybUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtdGVybWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnRlcm0nLCBcInRlcm0gZXhwZWN0ZWRcIikpLFxuICAgIEV4cHJlc3Npb25FeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWV4cHJlc3Npb25leHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5leHByZXNzaW9uJywgXCJleHByZXNzaW9uIGV4cGVjdGVkXCIpKSxcbiAgICBPcGVyYXRvckV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3Mtb3BlcmF0b3JleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5vcGVyYXRvcicsIFwib3BlcmF0b3IgZXhwZWN0ZWRcIikpLFxuICAgIElkZW50aWZpZXJFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWlkZW50aWZpZXJleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5pZGVudCcsIFwiaWRlbnRpZmllciBleHBlY3RlZFwiKSksXG4gICAgUGVyY2VudGFnZUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtcGVyY2VudGFnZWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnBlcmNlbnRhZ2UnLCBcInBlcmNlbnRhZ2UgZXhwZWN0ZWRcIikpLFxuICAgIFVSSU9yU3RyaW5nRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy11cmlvcnN0cmluZ2V4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnVyaW9yc3RyaW5nJywgXCJ1cmkgb3Igc3RyaW5nIGV4cGVjdGVkXCIpKSxcbiAgICBVUklFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXVyaWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnVyaScsIFwiVVJJIGV4cGVjdGVkXCIpKSxcbiAgICBWYXJpYWJsZU5hbWVFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXZhcm5hbWVleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC52YXJuYW1lJywgXCJ2YXJpYWJsZSBuYW1lIGV4cGVjdGVkXCIpKSxcbiAgICBWYXJpYWJsZVZhbHVlRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy12YXJ2YWx1ZWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnZhcnZhbHVlJywgXCJ2YXJpYWJsZSB2YWx1ZSBleHBlY3RlZFwiKSksXG4gICAgUHJvcGVydHlWYWx1ZUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtcHJvcGVydHl2YWx1ZWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnByb3B2YWx1ZScsIFwicHJvcGVydHkgdmFsdWUgZXhwZWN0ZWRcIikpLFxuICAgIExlZnRDdXJseUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtbGN1cmx5ZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQubGN1cmx5JywgXCJ7IGV4cGVjdGVkXCIpKSxcbiAgICBSaWdodEN1cmx5RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1yY3VybHlleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5yY3VybHknLCBcIn0gZXhwZWN0ZWRcIikpLFxuICAgIExlZnRTcXVhcmVCcmFja2V0RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1yYnJhY2tldGV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLmxzcXVhcmUnLCBcIlsgZXhwZWN0ZWRcIikpLFxuICAgIFJpZ2h0U3F1YXJlQnJhY2tldEV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtbGJyYWNrZXRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5yc3F1YXJlJywgXCJdIGV4cGVjdGVkXCIpKSxcbiAgICBMZWZ0UGFyZW50aGVzaXNFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWxwYXJlbnRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5scGFyZW4nLCBcIiggZXhwZWN0ZWRcIikpLFxuICAgIFJpZ2h0UGFyZW50aGVzaXNFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXJwYXJlbnRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5ycGFyZW50JywgXCIpIGV4cGVjdGVkXCIpKSxcbiAgICBDb21tYUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtY29tbWFleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5jb21tYScsIFwiY29tbWEgZXhwZWN0ZWRcIikpLFxuICAgIFBhZ2VEaXJlY3RpdmVPckRlY2xhcmF0aW9uRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1wYWdlZGlyb3JkZWNsZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQucGFnZWRpcm9yZGVjbCcsIFwicGFnZSBkaXJlY3RpdmUgb3IgZGVjbGFyYXRvbiBleHBlY3RlZFwiKSksXG4gICAgVW5rbm93bkF0UnVsZTogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXVua25vd25hdHJ1bGUnLCBsb2NhbGl6ZSgndW5rbm93bi5hdHJ1bGUnLCBcImF0LXJ1bGUgdW5rbm93blwiKSksXG4gICAgVW5rbm93bktleXdvcmQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy11bmtub3dua2V5d29yZCcsIGxvY2FsaXplKCd1bmtub3duLmtleXdvcmQnLCBcInVua25vd24ga2V5d29yZFwiKSksXG4gICAgU2VsZWN0b3JFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXNlbGVjdG9yZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuc2VsZWN0b3InLCBcInNlbGVjdG9yIGV4cGVjdGVkXCIpKSxcbiAgICBTdHJpbmdMaXRlcmFsRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1zdHJpbmdsaXRlcmFsZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuc3RyaW5nbGl0ZXJhbCcsIFwic3RyaW5nIGxpdGVyYWwgZXhwZWN0ZWRcIikpLFxuICAgIFdoaXRlc3BhY2VFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXdoaXRlc3BhY2VleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC53aGl0ZXNwYWNlJywgXCJ3aGl0ZXNwYWNlIGV4cGVjdGVkXCIpKSxcbiAgICBNZWRpYVF1ZXJ5RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1tZWRpYXF1ZXJ5ZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQubWVkaWFxdWVyeScsIFwibWVkaWEgcXVlcnkgZXhwZWN0ZWRcIikpXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js ***!
  \************************************************************************************************************/
/*! exports provided: NodeType, ReferenceType, getNodeAtOffset, getNodePath, getParentDeclaration, Node, Nodelist, Identifier, Stylesheet, Declarations, BodyDeclaration, RuleSet, Selector, SimpleSelector, AtApplyRule, AbstractDeclaration, CustomPropertyDeclaration, CustomPropertySet, Declaration, Property, Invocation, Function, FunctionParameter, FunctionArgument, IfStatement, ForStatement, EachStatement, WhileStatement, ElseStatement, FunctionDeclaration, ViewPort, FontFace, NestedProperties, Keyframe, KeyframeSelector, Import, Namespace, Media, Supports, Document, Medialist, MediaQuery, SupportsCondition, Page, PageBoxMarginBox, Expression, BinaryExpression, Term, AttributeSelector, Operator, HexColorValue, NumericValue, VariableDeclaration, Interpolation, Variable, ExtendsReference, MixinReference, MixinDeclaration, UnknownAtRule, ListEntry, LessGuard, GuardCondition, Level, Marker, ParseErrorCollector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodeType\", function() { return NodeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReferenceType\", function() { return ReferenceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodeAtOffset\", function() { return getNodeAtOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodePath\", function() { return getNodePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParentDeclaration\", function() { return getParentDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Nodelist\", function() { return Nodelist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Identifier\", function() { return Identifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stylesheet\", function() { return Stylesheet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Declarations\", function() { return Declarations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BodyDeclaration\", function() { return BodyDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RuleSet\", function() { return RuleSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Selector\", function() { return Selector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleSelector\", function() { return SimpleSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AtApplyRule\", function() { return AtApplyRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractDeclaration\", function() { return AbstractDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomPropertyDeclaration\", function() { return CustomPropertyDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomPropertySet\", function() { return CustomPropertySet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Declaration\", function() { return Declaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Property\", function() { return Property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Invocation\", function() { return Invocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Function\", function() { return Function; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionParameter\", function() { return FunctionParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionArgument\", function() { return FunctionArgument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfStatement\", function() { return IfStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ForStatement\", function() { return ForStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EachStatement\", function() { return EachStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WhileStatement\", function() { return WhileStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ElseStatement\", function() { return ElseStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionDeclaration\", function() { return FunctionDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ViewPort\", function() { return ViewPort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontFace\", function() { return FontFace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedProperties\", function() { return NestedProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Keyframe\", function() { return Keyframe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyframeSelector\", function() { return KeyframeSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Import\", function() { return Import; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Namespace\", function() { return Namespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Media\", function() { return Media; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Supports\", function() { return Supports; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Document\", function() { return Document; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Medialist\", function() { return Medialist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MediaQuery\", function() { return MediaQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SupportsCondition\", function() { return SupportsCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return Page; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageBoxMarginBox\", function() { return PageBoxMarginBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Expression\", function() { return Expression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BinaryExpression\", function() { return BinaryExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Term\", function() { return Term; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributeSelector\", function() { return AttributeSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Operator\", function() { return Operator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HexColorValue\", function() { return HexColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumericValue\", function() { return NumericValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableDeclaration\", function() { return VariableDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interpolation\", function() { return Interpolation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Variable\", function() { return Variable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExtendsReference\", function() { return ExtendsReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinReference\", function() { return MixinReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinDeclaration\", function() { return MixinDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnknownAtRule\", function() { return UnknownAtRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListEntry\", function() { return ListEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LessGuard\", function() { return LessGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardCondition\", function() { return GuardCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Level\", function() { return Level; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Marker\", function() { return Marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParseErrorCollector\", function() { return ParseErrorCollector; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/// <summary>\n/// Nodes for the css 2.1 specification. See for reference:\n/// http://www.w3.org/TR/CSS21/grammar.html#grammar\n/// </summary>\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Undefined\"] = 0] = \"Undefined\";\n    NodeType[NodeType[\"Identifier\"] = 1] = \"Identifier\";\n    NodeType[NodeType[\"Stylesheet\"] = 2] = \"Stylesheet\";\n    NodeType[NodeType[\"Ruleset\"] = 3] = \"Ruleset\";\n    NodeType[NodeType[\"Selector\"] = 4] = \"Selector\";\n    NodeType[NodeType[\"SimpleSelector\"] = 5] = \"SimpleSelector\";\n    NodeType[NodeType[\"SelectorInterpolation\"] = 6] = \"SelectorInterpolation\";\n    NodeType[NodeType[\"SelectorCombinator\"] = 7] = \"SelectorCombinator\";\n    NodeType[NodeType[\"SelectorCombinatorParent\"] = 8] = \"SelectorCombinatorParent\";\n    NodeType[NodeType[\"SelectorCombinatorSibling\"] = 9] = \"SelectorCombinatorSibling\";\n    NodeType[NodeType[\"SelectorCombinatorAllSiblings\"] = 10] = \"SelectorCombinatorAllSiblings\";\n    NodeType[NodeType[\"SelectorCombinatorShadowPiercingDescendant\"] = 11] = \"SelectorCombinatorShadowPiercingDescendant\";\n    NodeType[NodeType[\"Page\"] = 12] = \"Page\";\n    NodeType[NodeType[\"PageBoxMarginBox\"] = 13] = \"PageBoxMarginBox\";\n    NodeType[NodeType[\"ClassSelector\"] = 14] = \"ClassSelector\";\n    NodeType[NodeType[\"IdentifierSelector\"] = 15] = \"IdentifierSelector\";\n    NodeType[NodeType[\"ElementNameSelector\"] = 16] = \"ElementNameSelector\";\n    NodeType[NodeType[\"PseudoSelector\"] = 17] = \"PseudoSelector\";\n    NodeType[NodeType[\"AttributeSelector\"] = 18] = \"AttributeSelector\";\n    NodeType[NodeType[\"Declaration\"] = 19] = \"Declaration\";\n    NodeType[NodeType[\"Declarations\"] = 20] = \"Declarations\";\n    NodeType[NodeType[\"Property\"] = 21] = \"Property\";\n    NodeType[NodeType[\"Expression\"] = 22] = \"Expression\";\n    NodeType[NodeType[\"BinaryExpression\"] = 23] = \"BinaryExpression\";\n    NodeType[NodeType[\"Term\"] = 24] = \"Term\";\n    NodeType[NodeType[\"Operator\"] = 25] = \"Operator\";\n    NodeType[NodeType[\"Value\"] = 26] = \"Value\";\n    NodeType[NodeType[\"StringLiteral\"] = 27] = \"StringLiteral\";\n    NodeType[NodeType[\"URILiteral\"] = 28] = \"URILiteral\";\n    NodeType[NodeType[\"EscapedValue\"] = 29] = \"EscapedValue\";\n    NodeType[NodeType[\"Function\"] = 30] = \"Function\";\n    NodeType[NodeType[\"NumericValue\"] = 31] = \"NumericValue\";\n    NodeType[NodeType[\"HexColorValue\"] = 32] = \"HexColorValue\";\n    NodeType[NodeType[\"MixinDeclaration\"] = 33] = \"MixinDeclaration\";\n    NodeType[NodeType[\"MixinReference\"] = 34] = \"MixinReference\";\n    NodeType[NodeType[\"VariableName\"] = 35] = \"VariableName\";\n    NodeType[NodeType[\"VariableDeclaration\"] = 36] = \"VariableDeclaration\";\n    NodeType[NodeType[\"Prio\"] = 37] = \"Prio\";\n    NodeType[NodeType[\"Interpolation\"] = 38] = \"Interpolation\";\n    NodeType[NodeType[\"NestedProperties\"] = 39] = \"NestedProperties\";\n    NodeType[NodeType[\"ExtendsReference\"] = 40] = \"ExtendsReference\";\n    NodeType[NodeType[\"SelectorPlaceholder\"] = 41] = \"SelectorPlaceholder\";\n    NodeType[NodeType[\"Debug\"] = 42] = \"Debug\";\n    NodeType[NodeType[\"If\"] = 43] = \"If\";\n    NodeType[NodeType[\"Else\"] = 44] = \"Else\";\n    NodeType[NodeType[\"For\"] = 45] = \"For\";\n    NodeType[NodeType[\"Each\"] = 46] = \"Each\";\n    NodeType[NodeType[\"While\"] = 47] = \"While\";\n    NodeType[NodeType[\"MixinContent\"] = 48] = \"MixinContent\";\n    NodeType[NodeType[\"Media\"] = 49] = \"Media\";\n    NodeType[NodeType[\"Keyframe\"] = 50] = \"Keyframe\";\n    NodeType[NodeType[\"FontFace\"] = 51] = \"FontFace\";\n    NodeType[NodeType[\"Import\"] = 52] = \"Import\";\n    NodeType[NodeType[\"Namespace\"] = 53] = \"Namespace\";\n    NodeType[NodeType[\"Invocation\"] = 54] = \"Invocation\";\n    NodeType[NodeType[\"FunctionDeclaration\"] = 55] = \"FunctionDeclaration\";\n    NodeType[NodeType[\"ReturnStatement\"] = 56] = \"ReturnStatement\";\n    NodeType[NodeType[\"MediaQuery\"] = 57] = \"MediaQuery\";\n    NodeType[NodeType[\"FunctionParameter\"] = 58] = \"FunctionParameter\";\n    NodeType[NodeType[\"FunctionArgument\"] = 59] = \"FunctionArgument\";\n    NodeType[NodeType[\"KeyframeSelector\"] = 60] = \"KeyframeSelector\";\n    NodeType[NodeType[\"ViewPort\"] = 61] = \"ViewPort\";\n    NodeType[NodeType[\"Document\"] = 62] = \"Document\";\n    NodeType[NodeType[\"AtApplyRule\"] = 63] = \"AtApplyRule\";\n    NodeType[NodeType[\"CustomPropertyDeclaration\"] = 64] = \"CustomPropertyDeclaration\";\n    NodeType[NodeType[\"CustomPropertySet\"] = 65] = \"CustomPropertySet\";\n    NodeType[NodeType[\"ListEntry\"] = 66] = \"ListEntry\";\n    NodeType[NodeType[\"Supports\"] = 67] = \"Supports\";\n    NodeType[NodeType[\"SupportsCondition\"] = 68] = \"SupportsCondition\";\n    NodeType[NodeType[\"NamespacePrefix\"] = 69] = \"NamespacePrefix\";\n    NodeType[NodeType[\"GridLine\"] = 70] = \"GridLine\";\n    NodeType[NodeType[\"Plugin\"] = 71] = \"Plugin\";\n    NodeType[NodeType[\"UnknownAtRule\"] = 72] = \"UnknownAtRule\";\n})(NodeType || (NodeType = {}));\nvar ReferenceType;\n(function (ReferenceType) {\n    ReferenceType[ReferenceType[\"Mixin\"] = 0] = \"Mixin\";\n    ReferenceType[ReferenceType[\"Rule\"] = 1] = \"Rule\";\n    ReferenceType[ReferenceType[\"Variable\"] = 2] = \"Variable\";\n    ReferenceType[ReferenceType[\"Function\"] = 3] = \"Function\";\n    ReferenceType[ReferenceType[\"Keyframe\"] = 4] = \"Keyframe\";\n    ReferenceType[ReferenceType[\"Unknown\"] = 5] = \"Unknown\";\n})(ReferenceType || (ReferenceType = {}));\nfunction getNodeAtOffset(node, offset) {\n    var candidate = null;\n    if (!node || offset < node.offset || offset > node.end) {\n        return null;\n    }\n    // Find the shortest node at the position\n    node.accept(function (node) {\n        if (node.offset === -1 && node.length === -1) {\n            return true;\n        }\n        if (node.offset <= offset && node.end >= offset) {\n            if (!candidate) {\n                candidate = node;\n            }\n            else if (node.length <= candidate.length) {\n                candidate = node;\n            }\n            return true;\n        }\n        return false;\n    });\n    return candidate;\n}\nfunction getNodePath(node, offset) {\n    var candidate = getNodeAtOffset(node, offset);\n    var path = [];\n    while (candidate) {\n        path.unshift(candidate);\n        candidate = candidate.parent;\n    }\n    return path;\n}\nfunction getParentDeclaration(node) {\n    var decl = node.findParent(NodeType.Declaration);\n    if (decl && decl.getValue() && decl.getValue().encloses(node)) {\n        return decl;\n    }\n    return null;\n}\nvar Node = /** @class */ (function () {\n    function Node(offset, len, nodeType) {\n        if (offset === void 0) { offset = -1; }\n        if (len === void 0) { len = -1; }\n        this.parent = null;\n        this.offset = offset;\n        this.length = len;\n        if (nodeType) {\n            this.nodeType = nodeType;\n        }\n    }\n    Object.defineProperty(Node.prototype, \"end\", {\n        get: function () { return this.offset + this.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"type\", {\n        get: function () {\n            return this.nodeType || NodeType.Undefined;\n        },\n        set: function (type) {\n            this.nodeType = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getTextProvider = function () {\n        var node = this;\n        while (node && !node.textProvider) {\n            node = node.parent;\n        }\n        if (node) {\n            return node.textProvider;\n        }\n        return function () { return 'unknown'; };\n    };\n    Node.prototype.getText = function () {\n        return this.getTextProvider()(this.offset, this.length);\n    };\n    Node.prototype.matches = function (str) {\n        return this.length === str.length && this.getTextProvider()(this.offset, this.length) === str;\n    };\n    Node.prototype.startsWith = function (str) {\n        return this.length >= str.length && this.getTextProvider()(this.offset, str.length) === str;\n    };\n    Node.prototype.endsWith = function (str) {\n        return this.length >= str.length && this.getTextProvider()(this.end - str.length, str.length) === str;\n    };\n    Node.prototype.accept = function (visitor) {\n        if (visitor(this) && this.children) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.accept(visitor);\n            }\n        }\n    };\n    Node.prototype.acceptVisitor = function (visitor) {\n        this.accept(visitor.visitNode.bind(visitor));\n    };\n    Node.prototype.adoptChild = function (node, index) {\n        if (index === void 0) { index = -1; }\n        if (node.parent && node.parent.children) {\n            var idx = node.parent.children.indexOf(node);\n            if (idx >= 0) {\n                node.parent.children.splice(idx, 1);\n            }\n        }\n        node.parent = this;\n        var children = this.children;\n        if (!children) {\n            children = this.children = [];\n        }\n        if (index !== -1) {\n            children.splice(index, 0, node);\n        }\n        else {\n            children.push(node);\n        }\n        return node;\n    };\n    Node.prototype.attachTo = function (parent, index) {\n        if (index === void 0) { index = -1; }\n        if (parent) {\n            parent.adoptChild(this, index);\n        }\n        return this;\n    };\n    Node.prototype.collectIssues = function (results) {\n        if (this.issues) {\n            results.push.apply(results, this.issues);\n        }\n    };\n    Node.prototype.addIssue = function (issue) {\n        if (!this.issues) {\n            this.issues = [];\n        }\n        this.issues.push(issue);\n    };\n    Node.prototype.hasIssue = function (rule) {\n        return Array.isArray(this.issues) && this.issues.some(function (i) { return i.getRule() === rule; });\n    };\n    Node.prototype.isErroneous = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        if (this.issues && this.issues.length > 0) {\n            return true;\n        }\n        return recursive && Array.isArray(this.children) && this.children.some(function (c) { return c.isErroneous(true); });\n    };\n    Node.prototype.setNode = function (field, node, index) {\n        if (index === void 0) { index = -1; }\n        if (node) {\n            node.attachTo(this, index);\n            this[field] = node;\n            return true;\n        }\n        return false;\n    };\n    Node.prototype.addChild = function (node) {\n        if (node) {\n            if (!this.children) {\n                this.children = [];\n            }\n            node.attachTo(this);\n            this.updateOffsetAndLength(node);\n            return true;\n        }\n        return false;\n    };\n    Node.prototype.updateOffsetAndLength = function (node) {\n        if (node.offset < this.offset || this.offset === -1) {\n            this.offset = node.offset;\n        }\n        var nodeEnd = node.end;\n        if ((nodeEnd > this.end) || this.length === -1) {\n            this.length = nodeEnd - this.offset;\n        }\n    };\n    Node.prototype.hasChildren = function () {\n        return this.children && this.children.length > 0;\n    };\n    Node.prototype.getChildren = function () {\n        return this.children ? this.children.slice(0) : [];\n    };\n    Node.prototype.getChild = function (index) {\n        if (this.children && index < this.children.length) {\n            return this.children[index];\n        }\n        return null;\n    };\n    Node.prototype.addChildren = function (nodes) {\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            this.addChild(node);\n        }\n    };\n    Node.prototype.findFirstChildBeforeOffset = function (offset) {\n        if (this.children) {\n            var current = null;\n            for (var i = this.children.length - 1; i >= 0; i--) {\n                // iterate until we find a child that has a start offset smaller than the input offset\n                current = this.children[i];\n                if (current.offset <= offset) {\n                    return current;\n                }\n            }\n        }\n        return null;\n    };\n    Node.prototype.findChildAtOffset = function (offset, goDeep) {\n        var current = this.findFirstChildBeforeOffset(offset);\n        if (current && current.end >= offset) {\n            if (goDeep) {\n                return current.findChildAtOffset(offset, true) || current;\n            }\n            return current;\n        }\n        return null;\n    };\n    Node.prototype.encloses = function (candidate) {\n        return this.offset <= candidate.offset && this.offset + this.length >= candidate.offset + candidate.length;\n    };\n    Node.prototype.getParent = function () {\n        var result = this.parent;\n        while (result instanceof Nodelist) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.findParent = function (type) {\n        var result = this;\n        while (result && result.type !== type) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.findAParent = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        var result = this;\n        while (result && !types.some(function (t) { return result.type === t; })) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.setData = function (key, value) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.options[key] = value;\n    };\n    Node.prototype.getData = function (key) {\n        if (!this.options || !this.options.hasOwnProperty(key)) {\n            return null;\n        }\n        return this.options[key];\n    };\n    return Node;\n}());\n\nvar Nodelist = /** @class */ (function (_super) {\n    __extends(Nodelist, _super);\n    function Nodelist(parent, index) {\n        if (index === void 0) { index = -1; }\n        var _this = _super.call(this, -1, -1) || this;\n        _this.attachTo(parent, index);\n        _this.offset = -1;\n        _this.length = -1;\n        return _this;\n    }\n    return Nodelist;\n}(Node));\n\nvar Identifier = /** @class */ (function (_super) {\n    __extends(Identifier, _super);\n    function Identifier(offset, length) {\n        var _this = _super.call(this, offset, length) || this;\n        _this.isCustomProperty = false;\n        return _this;\n    }\n    Object.defineProperty(Identifier.prototype, \"type\", {\n        get: function () {\n            return NodeType.Identifier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Identifier.prototype.containsInterpolation = function () {\n        return this.hasChildren();\n    };\n    return Identifier;\n}(Node));\n\nvar Stylesheet = /** @class */ (function (_super) {\n    __extends(Stylesheet, _super);\n    function Stylesheet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Stylesheet.prototype, \"type\", {\n        get: function () {\n            return NodeType.Stylesheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Stylesheet.prototype.setName = function (value) {\n        this.name = value;\n    };\n    return Stylesheet;\n}(Node));\n\nvar Declarations = /** @class */ (function (_super) {\n    __extends(Declarations, _super);\n    function Declarations(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Declarations.prototype, \"type\", {\n        get: function () {\n            return NodeType.Declarations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Declarations;\n}(Node));\n\nvar BodyDeclaration = /** @class */ (function (_super) {\n    __extends(BodyDeclaration, _super);\n    function BodyDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    BodyDeclaration.prototype.getDeclarations = function () {\n        return this.declarations;\n    };\n    BodyDeclaration.prototype.setDeclarations = function (decls) {\n        return this.setNode('declarations', decls);\n    };\n    return BodyDeclaration;\n}(Node));\n\nvar RuleSet = /** @class */ (function (_super) {\n    __extends(RuleSet, _super);\n    function RuleSet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(RuleSet.prototype, \"type\", {\n        get: function () {\n            return NodeType.Ruleset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RuleSet.prototype.getSelectors = function () {\n        if (!this.selectors) {\n            this.selectors = new Nodelist(this);\n        }\n        return this.selectors;\n    };\n    RuleSet.prototype.isNested = function () {\n        return !!this.parent && this.parent.findParent(NodeType.Declarations) !== null;\n    };\n    return RuleSet;\n}(BodyDeclaration));\n\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Selector.prototype, \"type\", {\n        get: function () {\n            return NodeType.Selector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Selector;\n}(Node));\n\nvar SimpleSelector = /** @class */ (function (_super) {\n    __extends(SimpleSelector, _super);\n    function SimpleSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(SimpleSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.SimpleSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSelector;\n}(Node));\n\nvar AtApplyRule = /** @class */ (function (_super) {\n    __extends(AtApplyRule, _super);\n    function AtApplyRule(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(AtApplyRule.prototype, \"type\", {\n        get: function () {\n            return NodeType.AtApplyRule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AtApplyRule.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    AtApplyRule.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    AtApplyRule.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return AtApplyRule;\n}(Node));\n\nvar AbstractDeclaration = /** @class */ (function (_super) {\n    __extends(AbstractDeclaration, _super);\n    function AbstractDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    return AbstractDeclaration;\n}(Node));\n\nvar CustomPropertyDeclaration = /** @class */ (function (_super) {\n    __extends(CustomPropertyDeclaration, _super);\n    function CustomPropertyDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(CustomPropertyDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.CustomPropertyDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomPropertyDeclaration.prototype.setProperty = function (node) {\n        return this.setNode('property', node);\n    };\n    CustomPropertyDeclaration.prototype.getProperty = function () {\n        return this.property;\n    };\n    CustomPropertyDeclaration.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    CustomPropertyDeclaration.prototype.getValue = function () {\n        return this.value;\n    };\n    CustomPropertyDeclaration.prototype.setPropertySet = function (value) {\n        return this.setNode('propertySet', value);\n    };\n    CustomPropertyDeclaration.prototype.getPropertySet = function () {\n        return this.propertySet;\n    };\n    return CustomPropertyDeclaration;\n}(AbstractDeclaration));\n\nvar CustomPropertySet = /** @class */ (function (_super) {\n    __extends(CustomPropertySet, _super);\n    function CustomPropertySet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(CustomPropertySet.prototype, \"type\", {\n        get: function () {\n            return NodeType.CustomPropertySet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CustomPropertySet;\n}(BodyDeclaration));\n\nvar Declaration = /** @class */ (function (_super) {\n    __extends(Declaration, _super);\n    function Declaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Declaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.Declaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Declaration.prototype.setProperty = function (node) {\n        return this.setNode('property', node);\n    };\n    Declaration.prototype.getProperty = function () {\n        return this.property;\n    };\n    Declaration.prototype.getFullPropertyName = function () {\n        var propertyName = this.property ? this.property.getName() : 'unknown';\n        if (this.parent instanceof Declarations && this.parent.getParent() instanceof NestedProperties) {\n            var parentDecl = this.parent.getParent().getParent();\n            if (parentDecl instanceof Declaration) {\n                return parentDecl.getFullPropertyName() + propertyName;\n            }\n        }\n        return propertyName;\n    };\n    Declaration.prototype.getNonPrefixedPropertyName = function () {\n        var propertyName = this.getFullPropertyName();\n        if (propertyName && propertyName.charAt(0) === '-') {\n            var vendorPrefixEnd = propertyName.indexOf('-', 1);\n            if (vendorPrefixEnd !== -1) {\n                return propertyName.substring(vendorPrefixEnd + 1);\n            }\n        }\n        return propertyName;\n    };\n    Declaration.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    Declaration.prototype.getValue = function () {\n        return this.value;\n    };\n    Declaration.prototype.setNestedProperties = function (value) {\n        return this.setNode('nestedProperties', value);\n    };\n    Declaration.prototype.getNestedProperties = function () {\n        return this.nestedProperties;\n    };\n    return Declaration;\n}(AbstractDeclaration));\n\nvar Property = /** @class */ (function (_super) {\n    __extends(Property, _super);\n    function Property(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Property.prototype, \"type\", {\n        get: function () {\n            return NodeType.Property;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Property.prototype.setIdentifier = function (value) {\n        return this.setNode('identifier', value);\n    };\n    Property.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Property.prototype.getName = function () {\n        return this.getText();\n    };\n    Property.prototype.isCustomProperty = function () {\n        return this.identifier.isCustomProperty;\n    };\n    return Property;\n}(Node));\n\nvar Invocation = /** @class */ (function (_super) {\n    __extends(Invocation, _super);\n    function Invocation(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Invocation.prototype, \"type\", {\n        get: function () {\n            return NodeType.Invocation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Invocation.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    return Invocation;\n}(Node));\n\nvar Function = /** @class */ (function (_super) {\n    __extends(Function, _super);\n    function Function(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Function.prototype, \"type\", {\n        get: function () {\n            return NodeType.Function;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Function.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Function.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Function.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return Function;\n}(Invocation));\n\nvar FunctionParameter = /** @class */ (function (_super) {\n    __extends(FunctionParameter, _super);\n    function FunctionParameter(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionParameter.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionParameter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionParameter.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionParameter.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionParameter.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionParameter.prototype.setDefaultValue = function (node) {\n        return this.setNode('defaultValue', node, 0);\n    };\n    FunctionParameter.prototype.getDefaultValue = function () {\n        return this.defaultValue;\n    };\n    return FunctionParameter;\n}(Node));\n\nvar FunctionArgument = /** @class */ (function (_super) {\n    __extends(FunctionArgument, _super);\n    function FunctionArgument(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionArgument.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionArgument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionArgument.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionArgument.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionArgument.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionArgument.prototype.setValue = function (node) {\n        return this.setNode('value', node, 0);\n    };\n    FunctionArgument.prototype.getValue = function () {\n        return this.value;\n    };\n    return FunctionArgument;\n}(Node));\n\nvar IfStatement = /** @class */ (function (_super) {\n    __extends(IfStatement, _super);\n    function IfStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(IfStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.If;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IfStatement.prototype.setExpression = function (node) {\n        return this.setNode('expression', node, 0);\n    };\n    IfStatement.prototype.setElseClause = function (elseClause) {\n        return this.setNode('elseClause', elseClause);\n    };\n    return IfStatement;\n}(BodyDeclaration));\n\nvar ForStatement = /** @class */ (function (_super) {\n    __extends(ForStatement, _super);\n    function ForStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ForStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.For;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ForStatement.prototype.setVariable = function (node) {\n        return this.setNode('variable', node, 0);\n    };\n    return ForStatement;\n}(BodyDeclaration));\n\nvar EachStatement = /** @class */ (function (_super) {\n    __extends(EachStatement, _super);\n    function EachStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(EachStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.Each;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EachStatement.prototype.getVariables = function () {\n        if (!this.variables) {\n            this.variables = new Nodelist(this);\n        }\n        return this.variables;\n    };\n    return EachStatement;\n}(BodyDeclaration));\n\nvar WhileStatement = /** @class */ (function (_super) {\n    __extends(WhileStatement, _super);\n    function WhileStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(WhileStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.While;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return WhileStatement;\n}(BodyDeclaration));\n\nvar ElseStatement = /** @class */ (function (_super) {\n    __extends(ElseStatement, _super);\n    function ElseStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ElseStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.Else;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ElseStatement;\n}(BodyDeclaration));\n\nvar FunctionDeclaration = /** @class */ (function (_super) {\n    __extends(FunctionDeclaration, _super);\n    function FunctionDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionDeclaration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionDeclaration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionDeclaration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    return FunctionDeclaration;\n}(BodyDeclaration));\n\nvar ViewPort = /** @class */ (function (_super) {\n    __extends(ViewPort, _super);\n    function ViewPort(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ViewPort.prototype, \"type\", {\n        get: function () {\n            return NodeType.ViewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ViewPort;\n}(BodyDeclaration));\n\nvar FontFace = /** @class */ (function (_super) {\n    __extends(FontFace, _super);\n    function FontFace(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FontFace.prototype, \"type\", {\n        get: function () {\n            return NodeType.FontFace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FontFace;\n}(BodyDeclaration));\n\nvar NestedProperties = /** @class */ (function (_super) {\n    __extends(NestedProperties, _super);\n    function NestedProperties(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(NestedProperties.prototype, \"type\", {\n        get: function () {\n            return NodeType.NestedProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NestedProperties;\n}(BodyDeclaration));\n\nvar Keyframe = /** @class */ (function (_super) {\n    __extends(Keyframe, _super);\n    function Keyframe(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Keyframe.prototype, \"type\", {\n        get: function () {\n            return NodeType.Keyframe;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Keyframe.prototype.setKeyword = function (keyword) {\n        return this.setNode('keyword', keyword, 0);\n    };\n    Keyframe.prototype.getKeyword = function () {\n        return this.keyword;\n    };\n    Keyframe.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Keyframe.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Keyframe.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return Keyframe;\n}(BodyDeclaration));\n\nvar KeyframeSelector = /** @class */ (function (_super) {\n    __extends(KeyframeSelector, _super);\n    function KeyframeSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(KeyframeSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.KeyframeSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyframeSelector;\n}(BodyDeclaration));\n\nvar Import = /** @class */ (function (_super) {\n    __extends(Import, _super);\n    function Import(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Import.prototype, \"type\", {\n        get: function () {\n            return NodeType.Import;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Import.prototype.setMedialist = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.medialist = node;\n            return true;\n        }\n        return false;\n    };\n    return Import;\n}(Node));\n\nvar Namespace = /** @class */ (function (_super) {\n    __extends(Namespace, _super);\n    function Namespace(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Namespace.prototype, \"type\", {\n        get: function () {\n            return NodeType.Namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Namespace;\n}(Node));\n\nvar Media = /** @class */ (function (_super) {\n    __extends(Media, _super);\n    function Media(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Media.prototype, \"type\", {\n        get: function () {\n            return NodeType.Media;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Media;\n}(BodyDeclaration));\n\nvar Supports = /** @class */ (function (_super) {\n    __extends(Supports, _super);\n    function Supports(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Supports.prototype, \"type\", {\n        get: function () {\n            return NodeType.Supports;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Supports;\n}(BodyDeclaration));\n\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Document.prototype, \"type\", {\n        get: function () {\n            return NodeType.Document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Document;\n}(BodyDeclaration));\n\nvar Medialist = /** @class */ (function (_super) {\n    __extends(Medialist, _super);\n    function Medialist(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Medialist.prototype.getMediums = function () {\n        if (!this.mediums) {\n            this.mediums = new Nodelist(this);\n        }\n        return this.mediums;\n    };\n    return Medialist;\n}(Node));\n\nvar MediaQuery = /** @class */ (function (_super) {\n    __extends(MediaQuery, _super);\n    function MediaQuery(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MediaQuery.prototype, \"type\", {\n        get: function () {\n            return NodeType.MediaQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MediaQuery;\n}(Node));\n\nvar SupportsCondition = /** @class */ (function (_super) {\n    __extends(SupportsCondition, _super);\n    function SupportsCondition(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(SupportsCondition.prototype, \"type\", {\n        get: function () {\n            return NodeType.SupportsCondition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SupportsCondition;\n}(Node));\n\nvar Page = /** @class */ (function (_super) {\n    __extends(Page, _super);\n    function Page(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Page.prototype, \"type\", {\n        get: function () {\n            return NodeType.Page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Page;\n}(BodyDeclaration));\n\nvar PageBoxMarginBox = /** @class */ (function (_super) {\n    __extends(PageBoxMarginBox, _super);\n    function PageBoxMarginBox(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(PageBoxMarginBox.prototype, \"type\", {\n        get: function () {\n            return NodeType.PageBoxMarginBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageBoxMarginBox;\n}(BodyDeclaration));\n\nvar Expression = /** @class */ (function (_super) {\n    __extends(Expression, _super);\n    function Expression(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Expression.prototype, \"type\", {\n        get: function () {\n            return NodeType.Expression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Expression;\n}(Node));\n\nvar BinaryExpression = /** @class */ (function (_super) {\n    __extends(BinaryExpression, _super);\n    function BinaryExpression(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(BinaryExpression.prototype, \"type\", {\n        get: function () {\n            return NodeType.BinaryExpression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BinaryExpression.prototype.setLeft = function (left) {\n        return this.setNode('left', left);\n    };\n    BinaryExpression.prototype.getLeft = function () {\n        return this.left;\n    };\n    BinaryExpression.prototype.setRight = function (right) {\n        return this.setNode('right', right);\n    };\n    BinaryExpression.prototype.getRight = function () {\n        return this.right;\n    };\n    BinaryExpression.prototype.setOperator = function (value) {\n        return this.setNode('operator', value);\n    };\n    BinaryExpression.prototype.getOperator = function () {\n        return this.operator;\n    };\n    return BinaryExpression;\n}(Node));\n\nvar Term = /** @class */ (function (_super) {\n    __extends(Term, _super);\n    function Term(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Term.prototype, \"type\", {\n        get: function () {\n            return NodeType.Term;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Term.prototype.setOperator = function (value) {\n        return this.setNode('operator', value);\n    };\n    Term.prototype.getOperator = function () {\n        return this.operator;\n    };\n    Term.prototype.setExpression = function (value) {\n        return this.setNode('expression', value);\n    };\n    Term.prototype.getExpression = function () {\n        return this.expression;\n    };\n    return Term;\n}(Node));\n\nvar AttributeSelector = /** @class */ (function (_super) {\n    __extends(AttributeSelector, _super);\n    function AttributeSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(AttributeSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.AttributeSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AttributeSelector.prototype.setNamespacePrefix = function (value) {\n        return this.setNode('namespacePrefix', value);\n    };\n    AttributeSelector.prototype.getNamespacePrefix = function () {\n        return this.namespacePrefix;\n    };\n    AttributeSelector.prototype.setIdentifier = function (value) {\n        return this.setNode('identifier', value);\n    };\n    AttributeSelector.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    AttributeSelector.prototype.setOperator = function (operator) {\n        return this.setNode('operator', operator);\n    };\n    AttributeSelector.prototype.getOperator = function () {\n        return this.operator;\n    };\n    AttributeSelector.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    AttributeSelector.prototype.getValue = function () {\n        return this.value;\n    };\n    return AttributeSelector;\n}(Node));\n\nvar Operator = /** @class */ (function (_super) {\n    __extends(Operator, _super);\n    function Operator(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Operator.prototype, \"type\", {\n        get: function () {\n            return NodeType.Operator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Operator;\n}(Node));\n\nvar HexColorValue = /** @class */ (function (_super) {\n    __extends(HexColorValue, _super);\n    function HexColorValue(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(HexColorValue.prototype, \"type\", {\n        get: function () {\n            return NodeType.HexColorValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HexColorValue;\n}(Node));\n\nvar _dot = '.'.charCodeAt(0), _0 = '0'.charCodeAt(0), _9 = '9'.charCodeAt(0);\nvar NumericValue = /** @class */ (function (_super) {\n    __extends(NumericValue, _super);\n    function NumericValue(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(NumericValue.prototype, \"type\", {\n        get: function () {\n            return NodeType.NumericValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericValue.prototype.getValue = function () {\n        var raw = this.getText();\n        var unitIdx = 0;\n        var code;\n        for (var i = 0, len = raw.length; i < len; i++) {\n            code = raw.charCodeAt(i);\n            if (!(_0 <= code && code <= _9 || code === _dot)) {\n                break;\n            }\n            unitIdx += 1;\n        }\n        return {\n            value: raw.substring(0, unitIdx),\n            unit: unitIdx < raw.length ? raw.substring(unitIdx) : undefined\n        };\n    };\n    return NumericValue;\n}(Node));\n\nvar VariableDeclaration = /** @class */ (function (_super) {\n    __extends(VariableDeclaration, _super);\n    function VariableDeclaration(offset, length) {\n        var _this = _super.call(this, offset, length) || this;\n        _this.needsSemicolon = true;\n        return _this;\n    }\n    Object.defineProperty(VariableDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.VariableDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VariableDeclaration.prototype.setVariable = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.variable = node;\n            return true;\n        }\n        return false;\n    };\n    VariableDeclaration.prototype.getVariable = function () {\n        return this.variable;\n    };\n    VariableDeclaration.prototype.getName = function () {\n        return this.variable ? this.variable.getName() : '';\n    };\n    VariableDeclaration.prototype.setValue = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.value = node;\n            return true;\n        }\n        return false;\n    };\n    VariableDeclaration.prototype.getValue = function () {\n        return this.value;\n    };\n    return VariableDeclaration;\n}(AbstractDeclaration));\n\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Interpolation.prototype, \"type\", {\n        get: function () {\n            return NodeType.Interpolation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Interpolation;\n}(Node));\n\nvar Variable = /** @class */ (function (_super) {\n    __extends(Variable, _super);\n    function Variable(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Variable.prototype, \"type\", {\n        get: function () {\n            return NodeType.VariableName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Variable.prototype.getName = function () {\n        return this.getText();\n    };\n    return Variable;\n}(Node));\n\nvar ExtendsReference = /** @class */ (function (_super) {\n    __extends(ExtendsReference, _super);\n    function ExtendsReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ExtendsReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.ExtendsReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExtendsReference.prototype.getSelectors = function () {\n        if (!this.selectors) {\n            this.selectors = new Nodelist(this);\n        }\n        return this.selectors;\n    };\n    return ExtendsReference;\n}(Node));\n\nvar MixinReference = /** @class */ (function (_super) {\n    __extends(MixinReference, _super);\n    function MixinReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinReference.prototype.getNamespaces = function () {\n        if (!this.namespaces) {\n            this.namespaces = new Nodelist(this);\n        }\n        return this.namespaces;\n    };\n    MixinReference.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    MixinReference.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    MixinReference.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    MixinReference.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    MixinReference.prototype.setContent = function (node) {\n        return this.setNode('content', node);\n    };\n    MixinReference.prototype.getContent = function () {\n        return this.content;\n    };\n    return MixinReference;\n}(Node));\n\nvar MixinDeclaration = /** @class */ (function (_super) {\n    __extends(MixinDeclaration, _super);\n    function MixinDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinDeclaration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    MixinDeclaration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    MixinDeclaration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    MixinDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    MixinDeclaration.prototype.setGuard = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.guard = node;\n        }\n        return false;\n    };\n    return MixinDeclaration;\n}(BodyDeclaration));\n\nvar UnknownAtRule = /** @class */ (function (_super) {\n    __extends(UnknownAtRule, _super);\n    function UnknownAtRule(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(UnknownAtRule.prototype, \"type\", {\n        get: function () {\n            return NodeType.UnknownAtRule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UnknownAtRule.prototype.setAtRuleName = function (atRuleName) {\n        this.atRuleName = atRuleName;\n    };\n    UnknownAtRule.prototype.getAtRuleName = function (atRuleName) {\n        return this.atRuleName;\n    };\n    return UnknownAtRule;\n}(BodyDeclaration));\n\nvar ListEntry = /** @class */ (function (_super) {\n    __extends(ListEntry, _super);\n    function ListEntry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ListEntry.prototype, \"type\", {\n        get: function () {\n            return NodeType.ListEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ListEntry.prototype.setKey = function (node) {\n        return this.setNode('key', node, 0);\n    };\n    ListEntry.prototype.setValue = function (node) {\n        return this.setNode('value', node, 1);\n    };\n    return ListEntry;\n}(Node));\n\nvar LessGuard = /** @class */ (function (_super) {\n    __extends(LessGuard, _super);\n    function LessGuard() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LessGuard.prototype.getConditions = function () {\n        if (!this.conditions) {\n            this.conditions = new Nodelist(this);\n        }\n        return this.conditions;\n    };\n    return LessGuard;\n}(Node));\n\nvar GuardCondition = /** @class */ (function (_super) {\n    __extends(GuardCondition, _super);\n    function GuardCondition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GuardCondition.prototype.setVariable = function (node) {\n        return this.setNode('variable', node);\n    };\n    return GuardCondition;\n}(Node));\n\nvar Level;\n(function (Level) {\n    Level[Level[\"Ignore\"] = 1] = \"Ignore\";\n    Level[Level[\"Warning\"] = 2] = \"Warning\";\n    Level[Level[\"Error\"] = 4] = \"Error\";\n})(Level || (Level = {}));\nvar Marker = /** @class */ (function () {\n    function Marker(node, rule, level, message, offset, length) {\n        if (offset === void 0) { offset = node.offset; }\n        if (length === void 0) { length = node.length; }\n        this.node = node;\n        this.rule = rule;\n        this.level = level;\n        this.message = message || rule.message;\n        this.offset = offset;\n        this.length = length;\n    }\n    Marker.prototype.getRule = function () {\n        return this.rule;\n    };\n    Marker.prototype.getLevel = function () {\n        return this.level;\n    };\n    Marker.prototype.getOffset = function () {\n        return this.offset;\n    };\n    Marker.prototype.getLength = function () {\n        return this.length;\n    };\n    Marker.prototype.getNode = function () {\n        return this.node;\n    };\n    Marker.prototype.getMessage = function () {\n        return this.message;\n    };\n    return Marker;\n}());\n\n/*\nexport class DefaultVisitor implements IVisitor {\n\n    public visitNode(node:Node):boolean {\n        switch (node.type) {\n            case NodeType.Stylesheet:\n                return this.visitStylesheet(<Stylesheet> node);\n            case NodeType.FontFace:\n                return this.visitFontFace(<FontFace> node);\n            case NodeType.Ruleset:\n                return this.visitRuleSet(<RuleSet> node);\n            case NodeType.Selector:\n                return this.visitSelector(<Selector> node);\n            case NodeType.SimpleSelector:\n                return this.visitSimpleSelector(<SimpleSelector> node);\n            case NodeType.Declaration:\n                return this.visitDeclaration(<Declaration> node);\n            case NodeType.Function:\n                return this.visitFunction(<Function> node);\n            case NodeType.FunctionDeclaration:\n                return this.visitFunctionDeclaration(<FunctionDeclaration> node);\n            case NodeType.FunctionParameter:\n                return this.visitFunctionParameter(<FunctionParameter> node);\n            case NodeType.FunctionArgument:\n                return this.visitFunctionArgument(<FunctionArgument> node);\n            case NodeType.Term:\n                return this.visitTerm(<Term> node);\n            case NodeType.Declaration:\n                return this.visitExpression(<Expression> node);\n            case NodeType.NumericValue:\n                return this.visitNumericValue(<NumericValue> node);\n            case NodeType.Page:\n                return this.visitPage(<Page> node);\n            case NodeType.PageBoxMarginBox:\n                return this.visitPageBoxMarginBox(<PageBoxMarginBox> node);\n            case NodeType.Property:\n                return this.visitProperty(<Property> node);\n            case NodeType.NumericValue:\n                return this.visitNodelist(<Nodelist> node);\n            case NodeType.Import:\n                return this.visitImport(<Import> node);\n            case NodeType.Namespace:\n                return this.visitNamespace(<Namespace> node);\n            case NodeType.Keyframe:\n                return this.visitKeyframe(<Keyframe> node);\n            case NodeType.KeyframeSelector:\n                return this.visitKeyframeSelector(<KeyframeSelector> node);\n            case NodeType.MixinDeclaration:\n                return this.visitMixinDeclaration(<MixinDeclaration> node);\n            case NodeType.MixinReference:\n                return this.visitMixinReference(<MixinReference> node);\n            case NodeType.Variable:\n                return this.visitVariable(<Variable> node);\n            case NodeType.VariableDeclaration:\n                return this.visitVariableDeclaration(<VariableDeclaration> node);\n        }\n        return this.visitUnknownNode(node);\n    }\n\n    public visitFontFace(node:FontFace):boolean {\n        return true;\n    }\n\n    public visitKeyframe(node:Keyframe):boolean {\n        return true;\n    }\n\n    public visitKeyframeSelector(node:KeyframeSelector):boolean {\n        return true;\n    }\n\n    public visitStylesheet(node:Stylesheet):boolean {\n        return true;\n    }\n\n    public visitProperty(Node:Property):boolean {\n        return true;\n    }\n\n    public visitRuleSet(node:RuleSet):boolean {\n        return true;\n    }\n\n    public visitSelector(node:Selector):boolean {\n        return true;\n    }\n\n    public visitSimpleSelector(node:SimpleSelector):boolean {\n        return true;\n    }\n\n    public visitDeclaration(node:Declaration):boolean {\n        return true;\n    }\n\n    public visitFunction(node:Function):boolean {\n        return true;\n    }\n\n    public visitFunctionDeclaration(node:FunctionDeclaration):boolean {\n        return true;\n    }\n\n    public visitInvocation(node:Invocation):boolean {\n        return true;\n    }\n\n    public visitTerm(node:Term):boolean {\n        return true;\n    }\n\n    public visitImport(node:Import):boolean {\n        return true;\n    }\n\n    public visitNamespace(node:Namespace):boolean {\n        return true;\n    }\n\n    public visitExpression(node:Expression):boolean {\n        return true;\n    }\n\n    public visitNumericValue(node:NumericValue):boolean {\n        return true;\n    }\n\n    public visitPage(node:Page):boolean {\n        return true;\n    }\n\n    public visitPageBoxMarginBox(node:PageBoxMarginBox):boolean {\n        return true;\n    }\n\n    public visitNodelist(node:Nodelist):boolean {\n        return true;\n    }\n\n    public visitVariableDeclaration(node:VariableDeclaration):boolean {\n        return true;\n    }\n\n    public visitVariable(node:Variable):boolean {\n        return true;\n    }\n\n    public visitMixinDeclaration(node:MixinDeclaration):boolean {\n        return true;\n    }\n\n    public visitMixinReference(node:MixinReference):boolean {\n        return true;\n    }\n\n    public visitUnknownNode(node:Node):boolean {\n        return true;\n    }\n}\n*/\nvar ParseErrorCollector = /** @class */ (function () {\n    function ParseErrorCollector() {\n        this.entries = [];\n    }\n    ParseErrorCollector.entries = function (node) {\n        var visitor = new ParseErrorCollector();\n        node.acceptVisitor(visitor);\n        return visitor.entries;\n    };\n    ParseErrorCollector.prototype.visitNode = function (node) {\n        if (node.isErroneous()) {\n            node.collectIssues(this.entries);\n        }\n        return true;\n    };\n    return ParseErrorCollector;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js ***!
  \*************************************************************************************************************/
/*! exports provided: Parser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// https://www.w3.org/TR/CSS21/grammar.html\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nvar Parser = /** @class */ (function () {\n    function Parser(scnr) {\n        if (scnr === void 0) { scnr = new _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"](); }\n        this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n        this.scanner = scnr;\n        this.token = null;\n        this.prevToken = null;\n    }\n    Parser.prototype.peekIdent = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekKeyword = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekDelim = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim === this.token.type && text === this.token.text;\n    };\n    Parser.prototype.peek = function (type) {\n        return type === this.token.type;\n    };\n    Parser.prototype.peekRegExp = function (type, regEx) {\n        if (type !== this.token.type) {\n            return false;\n        }\n        return regEx.test(this.token.text);\n    };\n    Parser.prototype.hasWhitespace = function () {\n        return this.prevToken && (this.prevToken.offset + this.prevToken.len !== this.token.offset);\n    };\n    Parser.prototype.consumeToken = function () {\n        this.prevToken = this.token;\n        this.token = this.scanner.scan();\n    };\n    Parser.prototype.mark = function () {\n        return {\n            prev: this.prevToken,\n            curr: this.token,\n            pos: this.scanner.pos()\n        };\n    };\n    Parser.prototype.restoreAtMark = function (mark) {\n        this.prevToken = mark.prev;\n        this.token = mark.curr;\n        this.scanner.goBackTo(mark.pos);\n    };\n    Parser.prototype.try = function (func) {\n        var pos = this.mark();\n        var node = func();\n        if (!node) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    Parser.prototype.acceptOneKeyword = function (keywords) {\n        if (_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword === this.token.type) {\n            for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n                var keyword = keywords_1[_i];\n                if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n                    this.consumeToken();\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Parser.prototype.accept = function (type) {\n        if (type === this.token.type) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptIdent = function (text) {\n        if (this.peekIdent(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptKeyword = function (text) {\n        if (this.peekKeyword(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptDelim = function (text) {\n        if (this.peekDelim(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptUnquotedString = function () {\n        var pos = this.scanner.pos();\n        this.scanner.goBackTo(this.token.offset);\n        var unquoted = this.scanner.scanUnquotedString();\n        if (unquoted) {\n            this.token = unquoted;\n            this.consumeToken();\n            return true;\n        }\n        this.scanner.goBackTo(pos);\n        return false;\n    };\n    Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n        while (true) {\n            if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n                this.consumeToken();\n                return true;\n            }\n            else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n                return true;\n            }\n            else {\n                if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) {\n                    return false;\n                }\n                this.token = this.scanner.scan();\n            }\n        }\n    };\n    Parser.prototype.createNode = function (nodeType) {\n        return new _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"](this.token.offset, this.token.len, nodeType);\n    };\n    Parser.prototype.create = function (ctor) {\n        return new ctor(this.token.offset, this.token.len);\n    };\n    Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n        // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n        // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n        if (!(node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Nodelist\"])) {\n            if (error) {\n                this.markError(node, error, resyncTokens, resyncStopTokens);\n            }\n            // set the node end position\n            if (this.prevToken !== null) {\n                // length with more elements belonging together\n                var prevEnd = this.prevToken.offset + this.prevToken.len;\n                node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n            }\n        }\n        return node;\n    };\n    Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n        if (this.token !== this.lastErrorToken) { // do not report twice on the same token\n            node.addIssue(new _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Marker\"](node, error, _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Level\"].Error, null, this.token.offset, this.token.len));\n            this.lastErrorToken = this.token;\n        }\n        if (resyncTokens || resyncStopTokens) {\n            this.resync(resyncTokens, resyncStopTokens);\n        }\n    };\n    Parser.prototype.parseStylesheet = function (textDocument) {\n        var versionId = textDocument.version;\n        var textProvider = function (offset, length) {\n            if (textDocument.version !== versionId) {\n                throw new Error('Underlying model has changed, AST is no longer valid');\n            }\n            return textDocument.getText().substr(offset, length);\n        };\n        return this.internalParse(textDocument.getText(), this._parseStylesheet, textProvider);\n    };\n    Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n        this.scanner.setSource(input);\n        this.token = this.scanner.scan();\n        var node = parseFunc.bind(this)();\n        if (node) {\n            if (textProvider) {\n                node.textProvider = textProvider;\n            }\n            else {\n                node.textProvider = function (offset, length) { return input.substr(offset, length); };\n            }\n        }\n        return node;\n    };\n    Parser.prototype._parseStylesheet = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Stylesheet\"]);\n        node.addChild(this._parseCharset());\n        var inRecovery = false;\n        do {\n            var hasMatch = false;\n            do {\n                hasMatch = false;\n                var statement = this._parseStylesheetStatement();\n                if (statement) {\n                    node.addChild(statement);\n                    hasMatch = true;\n                    inRecovery = false;\n                    if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) && this._needsSemicolonAfter(statement) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                        this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n                    }\n                }\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CDO) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CDC)) {\n                    // accept empty statements\n                    hasMatch = true;\n                    inRecovery = false;\n                }\n            } while (hasMatch);\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF)) {\n                break;\n            }\n            if (!inRecovery) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownAtRule);\n                }\n                else {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RuleOrSelectorExpected);\n                }\n                inRecovery = true;\n            }\n            this.consumeToken();\n        } while (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF));\n        return this.finish(node);\n    };\n    Parser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return this._parseStylesheetAtStatement(isNested);\n        }\n        return this._parseRuleset(isNested);\n    };\n    Parser.prototype._parseStylesheetAtStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._parseImport()\n            || this._parseMedia(isNested)\n            || this._parsePage()\n            || this._parseFontFace()\n            || this._parseKeyframe()\n            || this._parseSupports(isNested)\n            || this._parseViewPort()\n            || this._parseNamespace()\n            || this._parseDocument()\n            || this._parseUnknownAtRule();\n    };\n    Parser.prototype._tryParseRuleset = function (isNested) {\n        var mark = this.mark();\n        if (this._parseSelector(isNested)) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma) && this._parseSelector(isNested)) {\n                // loop\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n                this.restoreAtMark(mark);\n                return this._parseRuleset(isNested);\n            }\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseRuleset = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"RuleSet\"]);\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(isNested))) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!selectors.addChild(this._parseSelector(isNested))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SelectorExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseRuleSetDeclaration = function () {\n        // https://www.w3.org/TR/css-syntax-3/#consume-a-list-of-declarations0\n        return this._parseAtApply()\n            || this._tryParseCustomPropertyDeclaration()\n            || this._parseDeclaration()\n            || this._parseUnknownAtRule();\n    };\n    /**\n     * Parses declarations like:\n     *   @apply --my-theme;\n     *\n     * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n     */\n    Parser.prototype._parseAtApply = function () {\n        if (!this.peekKeyword('@apply')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AtApplyRule\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Variable]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._needsSemicolonAfter = function (node) {\n        switch (node.type) {\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Keyframe:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ViewPort:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Media:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Ruleset:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Namespace:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].If:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].For:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Each:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].While:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinDeclaration:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].FunctionDeclaration:\n                return false;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ExtendsReference:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinContent:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ReturnStatement:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MediaQuery:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Debug:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Import:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].AtApplyRule:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].CustomPropertyDeclaration:\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].VariableDeclaration:\n                return node.needsSemicolon;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinReference:\n                return !node.getContent();\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Declaration:\n                return !node.getNestedProperties();\n        }\n        return false;\n    };\n    Parser.prototype._parseDeclarations = function (parseDeclaration) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Declarations\"]);\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            return null;\n        }\n        var decl = parseDeclaration();\n        while (node.addChild(decl)) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR)) {\n                break;\n            }\n            if (this._needsSemicolonAfter(decl) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR]);\n            }\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                // accept empty statements\n            }\n            decl = parseDeclaration();\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBody = function (node, parseDeclaration) {\n        if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSelector = function (isNested) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Selector\"]);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Declaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon], resyncStopTokens);\n        }\n        node.colonPosition = this.prevToken.offset;\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PropertyValueExpected);\n        }\n        node.addChild(this._parsePrio());\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^--/)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"CustomPropertyDeclaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon]);\n        }\n        node.colonPosition = this.prevToken.offset;\n        var mark = this.mark();\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            // try to parse it as nested declaration\n            var propertySet = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"CustomPropertySet\"]);\n            var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n            if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n                propertySet.addChild(this._parsePrio());\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                    this.finish(propertySet);\n                    node.setPropertySet(propertySet);\n                    node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                    return this.finish(node);\n                }\n            }\n            this.restoreAtMark(mark);\n        }\n        // try tp parse as expression\n        var expression = this._parseExpr();\n        if (expression && !expression.isErroneous(true)) {\n            this._parsePrio();\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                node.setValue(expression);\n                node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                return this.finish(node);\n            }\n        }\n        this.restoreAtMark(mark);\n        node.addChild(this._parseCustomPropertyValue());\n        node.addChild(this._parsePrio());\n        if (this.token.offset === node.colonPosition + 1) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PropertyValueExpected);\n        }\n        return this.finish(node);\n    };\n    /**\n     * Parse custom property values.\n     *\n     * Based on https://www.w3.org/TR/css-variables/#syntax\n     *\n     * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n     * parsing almost any sequence of tokens, save for a small set of exceptions.\n     * Unbalanced delimitors, invalid tokens, and declaration\n     * terminators like semicolons and !important directives (when not inside\n     * of delimitors).\n     */\n    Parser.prototype._parseCustomPropertyValue = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon:\n                    // A semicolon only ends things if we're not inside a delimitor.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation:\n                    // An exclamation ends the value if we're not inside delims.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n                    curlyDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR:\n                    curlyDepth--;\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL:\n                    parensDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL:\n                    bracketsDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftSquareBracketExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString: // fall through\n                    break done;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF:\n                    // We shouldn't have reached the end of input, something is\n                    // unterminated.\n                    var error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected;\n                    if (bracketsDepth > 0) {\n                        error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected;\n                    }\n                    else if (parensDepth > 0) {\n                        error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected;\n                    }\n                    return this.finish(node, error);\n            }\n            this.consumeToken();\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryToParseDeclaration = function () {\n        var mark = this.mark();\n        if (this._parseProperty() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            // looks like a declaration, go ahead\n            this.restoreAtMark(mark);\n            return this._parseDeclaration();\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseProperty = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Property\"]);\n        var mark = this.mark();\n        if (this.acceptDelim('*') || this.acceptDelim('_')) {\n            // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (node.setIdentifier(this._parsePropertyIdentifier())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parsePropertyIdentifier = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseCharset = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Charset)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // charset\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Import\"]);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].URIOrStringExpected);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespace = function () {\n        // http://www.w3.org/TR/css3-namespace/\n        // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n        if (!this.peekKeyword('@namespace')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Namespace\"]);\n        this.consumeToken(); // @namespace\n        if (!node.addChild(this._parseURILiteral())) { // url literal also starts with ident\n            node.addChild(this._parseIdent()); // optional prefix\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].URIExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFontFace = function () {\n        if (!this.peekKeyword('@font-face')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FontFace\"]);\n        this.consumeToken(); // @font-face\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseViewPort = function () {\n        if (!this.peekKeyword('@-ms-viewport') &&\n            !this.peekKeyword('@-o-viewport') &&\n            !this.peekKeyword('@viewport')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ViewPort\"]);\n        this.consumeToken(); // @-ms-viewport\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseKeyframe = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword, this.keyframeRegex)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Keyframe\"]);\n        var atNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // atkeyword\n        node.setKeyword(this.finish(atNode));\n        if (atNode.getText() === '@-ms-keyframes') { // -ms-keyframes never existed\n            this.markError(atNode, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownKeyword);\n        }\n        if (!node.setIdentifier(this._parseKeyframeIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n    };\n    Parser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Keyframe]);\n    };\n    Parser.prototype._parseKeyframeSelector = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"KeyframeSelector\"]);\n        if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PercentageExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._tryParseKeyframeSelector = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"KeyframeSelector\"]);\n        var pos = this.mark();\n        if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n                this.restoreAtMark(pos);\n                return null;\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseSupports = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n        if (!this.peekKeyword('@supports')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Supports\"]);\n        this.consumeToken(); // @supports\n        node.addChild(this._parseSupportsCondition());\n        return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseSupportsDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseSupportsCondition = function () {\n        // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n        // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n        // supports_negation: NOT S+ supports_condition_in_parens ;\n        // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n        // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n        // supports_declaration_condition: '(' S* declaration ')';\n        // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SupportsCondition\"]);\n        if (this.acceptIdent('not')) {\n            node.addChild(this._parseSupportsConditionInParens());\n        }\n        else {\n            node.addChild(this._parseSupportsConditionInParens());\n            if (this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^(and|or)$/i)) {\n                var text = this.token.text.toLowerCase();\n                while (this.acceptIdent(text)) {\n                    node.addChild(this._parseSupportsConditionInParens());\n                }\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSupportsConditionInParens = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SupportsCondition\"]);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            node.lParent = this.prevToken.offset;\n            if (!node.addChild(this._tryToParseDeclaration())) {\n                if (!this._parseSupportsCondition()) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ConditionExpected);\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR], []);\n            }\n            node.rParent = this.prevToken.offset;\n            return this.finish(node);\n        }\n        else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            var pos = this.mark();\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                var openParentCount = 1;\n                while (this.token.type !== _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF && openParentCount !== 0) {\n                    if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL) {\n                        openParentCount++;\n                    }\n                    else if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR) {\n                        openParentCount--;\n                    }\n                    this.consumeToken();\n                }\n                return this.finish(node);\n            }\n            else {\n                this.restoreAtMark(pos);\n            }\n        }\n        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL]);\n    };\n    Parser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseMedia = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n        // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n        if (!this.peekKeyword('@media')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Media\"]);\n        this.consumeToken(); // @media\n        if (!node.addChild(this._parseMediaQueryList())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n        }\n        return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseMediaQueryList = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Medialist\"]);\n        if (!node.addChild(this._parseMediaQuery([_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseMediaQuery([_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n        // http://www.w3.org/TR/css3-mediaqueries/\n        // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n        // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MediaQuery\"]);\n        var parseExpression = true;\n        var hasContent = false;\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            if (this.acceptIdent('only') || this.acceptIdent('not')) {\n                // optional\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return null;\n            }\n            hasContent = true;\n            parseExpression = this.acceptIdent('and');\n        }\n        while (parseExpression) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                if (hasContent) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected, [], resyncStopToken);\n                }\n                return null;\n            }\n            if (!node.addChild(this._parseMediaFeatureName())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected, [], resyncStopToken);\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n                if (!node.addChild(this._parseExpr())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].TermExpected, [], resyncStopToken);\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected, [], resyncStopToken);\n            }\n            parseExpression = this.acceptIdent('and');\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseMedium = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (node.addChild(this._parseIdent())) {\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parsePageDeclaration = function () {\n        return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n    };\n    Parser.prototype._parsePage = function () {\n        // http://www.w3.org/TR/css3-page/\n        // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n        // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n        if (!this.peekKeyword('@page')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Page\"]);\n        this.consumeToken();\n        if (node.addChild(this._parsePageSelector())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (!node.addChild(this._parsePageSelector())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n                }\n            }\n        }\n        return this._parseBody(node, this._parsePageDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageMarginBox = function () {\n        // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PageBoxMarginBox\"]);\n        if (!this.acceptOneKeyword(_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_3__[\"pageBoxDirectives\"])) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownAtRule, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]);\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageSelector = function () {\n        // page_selector : pseudo_page+ | IDENT pseudo_page*\n        // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        node.addChild(this._parseIdent()); // optional ident\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            if (!node.addChild(this._parseIdent())) { // optional ident\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseDocument = function () {\n        // -moz-document is experimental but has been pushed to css4\n        if (!this.peekKeyword('@-moz-document')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Document\"]);\n        this.consumeToken(); // @-moz-document\n        this.resync([], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]); // ignore all the rules\n        return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n    };\n    // https://www.w3.org/TR/css-syntax-3/#consume-an-at-rule\n    Parser.prototype._parseUnknownAtRule = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"UnknownAtRule\"]);\n        node.addChild(this._parseUnknownAtRuleName());\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyLCount = 0;\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon:\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF:\n                    if (curlyDepth > 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected);\n                    }\n                    else if (bracketsDepth > 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n                    }\n                    else if (parensDepth > 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                    }\n                    else {\n                        return this.finish(node);\n                    }\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n                    curlyLCount++;\n                    curlyDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR:\n                    curlyDepth--;\n                    // End of at-rule, consume CurlyR and return node\n                    if (curlyLCount > 0 && curlyDepth === 0) {\n                        this.consumeToken();\n                        if (bracketsDepth > 0) {\n                            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n                        }\n                        else if (parensDepth > 0) {\n                            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                        }\n                        break done;\n                    }\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL:\n                    parensDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL:\n                    bracketsDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftSquareBracketExpected);\n                    }\n                    break;\n            }\n            this.consumeToken();\n        }\n        return node;\n    };\n    Parser.prototype._parseUnknownAtRuleName = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return this.finish(node);\n        }\n        return node;\n    };\n    Parser.prototype._parseOperator = function () {\n        // these are operators for binary expressions\n        if (this.peekDelim('/') ||\n            this.peekDelim('*') ||\n            this.peekDelim('+') ||\n            this.peekDelim('-') ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Dashmatch) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Includes) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SubstringOperator) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].PrefixOperator) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SuffixOperator) ||\n            this.peekDelim('=')) { // doesn't stick to the standard here\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseUnaryOperator = function () {\n        if (!this.peekDelim('+') && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseCombinator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                    node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant;\n                    return this.finish(node);\n                }\n                this.restoreAtMark(mark);\n            }\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorParent;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('+')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorSibling;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('~')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorAllSiblings;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('/')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n                node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant;\n                return this.finish(node);\n            }\n            this.restoreAtMark(mark);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseSimpleSelector = function () {\n        // simple_selector\n        //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SimpleSelector\"]);\n        var c = 0;\n        if (node.addChild(this._parseElementName())) {\n            c++;\n        }\n        while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n            c++;\n        }\n        return c > 0 ? this.finish(node) : null;\n    };\n    Parser.prototype._parseSimpleSelectorBody = function () {\n        return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n    };\n    Parser.prototype._parseSelectorIdent = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseHash = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Hash) && !this.peekDelim('#')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].IdentifierSelector);\n        if (this.acceptDelim('#')) {\n            if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n        }\n        else {\n            this.consumeToken(); // TokenType.Hash\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseClass = function () {\n        // class: '.' IDENT ;\n        if (!this.peekDelim('.')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ClassSelector);\n        this.consumeToken(); // '.'\n        if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseElementName = function () {\n        // element_name: (ns? '|')? IDENT | '*';\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ElementNameSelector);\n        node.addChild(this._parseNamespacePrefix());\n        if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespacePrefix = function () {\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].NamespacePrefix);\n        if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {\n            // ns is optional\n        }\n        if (!this.acceptDelim('|')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseAttrib = function () {\n        // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AttributeSelector\"]);\n        this.consumeToken(); // BracketL\n        // Optional attrib namespace\n        node.setNamespacePrefix(this._parseNamespacePrefix());\n        if (!node.setIdentifier(this._parseIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (node.setOperator(this._parseOperator())) {\n            node.setValue(this._parseBinaryExpr());\n            this.acceptIdent('i'); // case insensitive matching\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parsePseudo = function () {\n        var _this = this;\n        // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n        var node = this._tryParsePseudoIdentifier();\n        if (node) {\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                var tryAsSelector = function () {\n                    var selectors = _this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n                    if (!selectors.addChild(_this._parseSelector(false))) {\n                        return null;\n                    }\n                    while (_this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma) && selectors.addChild(_this._parseSelector(false))) {\n                        // loop\n                    }\n                    if (_this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                        return _this.finish(selectors);\n                    }\n                };\n                node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._tryParsePseudoIdentifier = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].PseudoSelector);\n        this.consumeToken(); // Colon\n        if (this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        // optional, support ::\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon) && this.hasWhitespace()) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (!node.addChild(this._parseIdent())) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return node;\n    };\n    Parser.prototype._tryParsePrio = function () {\n        var mark = this.mark();\n        var prio = this._parsePrio();\n        if (prio) {\n            return prio;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parsePrio = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Prio);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation) && this.acceptIdent('important')) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseExpr = function (stopOnComma) {\n        if (stopOnComma === void 0) { stopOnComma = false; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Expression\"]);\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return null;\n        }\n        while (true) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) { // optional\n                if (stopOnComma) {\n                    return this.finish(node);\n                }\n                this.consumeToken();\n            }\n            if (!node.addChild(this._parseBinaryExpr())) {\n                break;\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamedLine = function () {\n        // https://www.w3.org/TR/css-grid-1/#named-lines\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].GridLine);\n        this.consumeToken();\n        while (node.addChild(this._parseIdent())) {\n            // repeat\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BinaryExpression\"]);\n        if (!node.setLeft((preparsedLeft || this._parseTerm()))) {\n            return null;\n        }\n        if (!node.setOperator(preparsedOper || this._parseOperator())) {\n            return this.finish(node);\n        }\n        if (!node.setRight(this._parseTerm())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].TermExpected);\n        }\n        // things needed for multiple binary expressions\n        node = this.finish(node);\n        var operator = this._parseOperator();\n        if (operator) {\n            node = this._parseBinaryExpr(node, operator);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseTerm = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Term\"]);\n        node.setOperator(this._parseUnaryOperator()); // optional\n        if (node.setExpression(this._parseURILiteral()) || // url before function\n            node.setExpression(this._parseFunction()) || // function before ident\n            node.setExpression(this._parseIdent()) ||\n            node.setExpression(this._parseStringLiteral()) ||\n            node.setExpression(this._parseNumeric()) ||\n            node.setExpression(this._parseHexColor()) ||\n            node.setExpression(this._parseOperation()) ||\n            node.setExpression(this._parseNamedLine())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseOperation = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // ParenthesisL\n        node.addChild(this._parseExpr());\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNumeric = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Num) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Resolution) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Length) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EMS) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EXS) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Angle) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Time) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Dimension) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Freq)) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NumericValue\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseStringLiteral = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].StringLiteral);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseURILiteral = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^url(-prefix)?$/i)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].URILiteral);\n        this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident);\n        if (this.hasWhitespace() || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        this.scanner.inURL = true;\n        this.consumeToken(); // consume ()\n        node.addChild(this._parseURLArgument()); // argument is optional\n        this.scanner.inURL = false;\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseURLArgument = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString) && !this.acceptUnquotedString()) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseIdent = function (referenceTypes) {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Identifier\"]);\n        if (referenceTypes) {\n            node.referenceTypes = referenceTypes;\n        }\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^--/);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Function\"]);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseFunctionArgument())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionIdentifier = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Identifier\"]);\n        node.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Function];\n        if (this.acceptIdent('progid')) {\n            // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident) && this.acceptDelim('.')) {\n                    // loop\n                }\n            }\n            return this.finish(node);\n        }\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionArgument = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FunctionArgument\"]);\n        if (node.setValue(this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseHexColor = function () {\n        if (this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"HexColorValue\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    return Parser;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js ***!
  \**************************************************************************************************************/
/*! exports provided: TokenType, MultiLineStream, Scanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenType\", function() { return TokenType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MultiLineStream\", function() { return MultiLineStream; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scanner\", function() { return Scanner; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"Ident\"] = 0] = \"Ident\";\n    TokenType[TokenType[\"AtKeyword\"] = 1] = \"AtKeyword\";\n    TokenType[TokenType[\"String\"] = 2] = \"String\";\n    TokenType[TokenType[\"BadString\"] = 3] = \"BadString\";\n    TokenType[TokenType[\"UnquotedString\"] = 4] = \"UnquotedString\";\n    TokenType[TokenType[\"Hash\"] = 5] = \"Hash\";\n    TokenType[TokenType[\"Num\"] = 6] = \"Num\";\n    TokenType[TokenType[\"Percentage\"] = 7] = \"Percentage\";\n    TokenType[TokenType[\"Dimension\"] = 8] = \"Dimension\";\n    TokenType[TokenType[\"UnicodeRange\"] = 9] = \"UnicodeRange\";\n    TokenType[TokenType[\"CDO\"] = 10] = \"CDO\";\n    TokenType[TokenType[\"CDC\"] = 11] = \"CDC\";\n    TokenType[TokenType[\"Colon\"] = 12] = \"Colon\";\n    TokenType[TokenType[\"SemiColon\"] = 13] = \"SemiColon\";\n    TokenType[TokenType[\"CurlyL\"] = 14] = \"CurlyL\";\n    TokenType[TokenType[\"CurlyR\"] = 15] = \"CurlyR\";\n    TokenType[TokenType[\"ParenthesisL\"] = 16] = \"ParenthesisL\";\n    TokenType[TokenType[\"ParenthesisR\"] = 17] = \"ParenthesisR\";\n    TokenType[TokenType[\"BracketL\"] = 18] = \"BracketL\";\n    TokenType[TokenType[\"BracketR\"] = 19] = \"BracketR\";\n    TokenType[TokenType[\"Whitespace\"] = 20] = \"Whitespace\";\n    TokenType[TokenType[\"Includes\"] = 21] = \"Includes\";\n    TokenType[TokenType[\"Dashmatch\"] = 22] = \"Dashmatch\";\n    TokenType[TokenType[\"SubstringOperator\"] = 23] = \"SubstringOperator\";\n    TokenType[TokenType[\"PrefixOperator\"] = 24] = \"PrefixOperator\";\n    TokenType[TokenType[\"SuffixOperator\"] = 25] = \"SuffixOperator\";\n    TokenType[TokenType[\"Delim\"] = 26] = \"Delim\";\n    TokenType[TokenType[\"EMS\"] = 27] = \"EMS\";\n    TokenType[TokenType[\"EXS\"] = 28] = \"EXS\";\n    TokenType[TokenType[\"Length\"] = 29] = \"Length\";\n    TokenType[TokenType[\"Angle\"] = 30] = \"Angle\";\n    TokenType[TokenType[\"Time\"] = 31] = \"Time\";\n    TokenType[TokenType[\"Freq\"] = 32] = \"Freq\";\n    TokenType[TokenType[\"Exclamation\"] = 33] = \"Exclamation\";\n    TokenType[TokenType[\"Resolution\"] = 34] = \"Resolution\";\n    TokenType[TokenType[\"Comma\"] = 35] = \"Comma\";\n    TokenType[TokenType[\"Charset\"] = 36] = \"Charset\";\n    TokenType[TokenType[\"EscapedJavaScript\"] = 37] = \"EscapedJavaScript\";\n    TokenType[TokenType[\"BadEscapedJavaScript\"] = 38] = \"BadEscapedJavaScript\";\n    TokenType[TokenType[\"Comment\"] = 39] = \"Comment\";\n    TokenType[TokenType[\"SingleLineComment\"] = 40] = \"SingleLineComment\";\n    TokenType[TokenType[\"EOF\"] = 41] = \"EOF\";\n    TokenType[TokenType[\"CustomToken\"] = 42] = \"CustomToken\";\n})(TokenType || (TokenType = {}));\nvar MultiLineStream = /** @class */ (function () {\n    function MultiLineStream(source) {\n        this.source = source;\n        this.len = source.length;\n        this.position = 0;\n    }\n    MultiLineStream.prototype.substring = function (from, to) {\n        if (to === void 0) { to = this.position; }\n        return this.source.substring(from, to);\n    };\n    MultiLineStream.prototype.eos = function () {\n        return this.len <= this.position;\n    };\n    MultiLineStream.prototype.pos = function () {\n        return this.position;\n    };\n    MultiLineStream.prototype.goBackTo = function (pos) {\n        this.position = pos;\n    };\n    MultiLineStream.prototype.goBack = function (n) {\n        this.position -= n;\n    };\n    MultiLineStream.prototype.advance = function (n) {\n        this.position += n;\n    };\n    MultiLineStream.prototype.nextChar = function () {\n        return this.source.charCodeAt(this.position++) || 0;\n    };\n    MultiLineStream.prototype.peekChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position + n) || 0;\n    };\n    MultiLineStream.prototype.lookbackChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position - n) || 0;\n    };\n    MultiLineStream.prototype.advanceIfChar = function (ch) {\n        if (ch === this.source.charCodeAt(this.position)) {\n            this.position++;\n            return true;\n        }\n        return false;\n    };\n    MultiLineStream.prototype.advanceIfChars = function (ch) {\n        if (this.position + ch.length > this.source.length) {\n            return false;\n        }\n        var i = 0;\n        for (; i < ch.length; i++) {\n            if (this.source.charCodeAt(this.position + i) !== ch[i]) {\n                return false;\n            }\n        }\n        this.advance(i);\n        return true;\n    };\n    MultiLineStream.prototype.advanceWhileChar = function (condition) {\n        var posNow = this.position;\n        while (this.position < this.len && condition(this.source.charCodeAt(this.position))) {\n            this.position++;\n        }\n        return this.position - posNow;\n    };\n    return MultiLineStream;\n}());\n\nvar _a = 'a'.charCodeAt(0);\nvar _f = 'f'.charCodeAt(0);\nvar _z = 'z'.charCodeAt(0);\nvar _A = 'A'.charCodeAt(0);\nvar _F = 'F'.charCodeAt(0);\nvar _Z = 'Z'.charCodeAt(0);\nvar _0 = '0'.charCodeAt(0);\nvar _9 = '9'.charCodeAt(0);\nvar _TLD = '~'.charCodeAt(0);\nvar _HAT = '^'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _PIP = '|'.charCodeAt(0);\nvar _MIN = '-'.charCodeAt(0);\nvar _USC = '_'.charCodeAt(0);\nvar _PRC = '%'.charCodeAt(0);\nvar _MUL = '*'.charCodeAt(0);\nvar _LPA = '('.charCodeAt(0);\nvar _RPA = ')'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _ATS = '@'.charCodeAt(0);\nvar _HSH = '#'.charCodeAt(0);\nvar _DLR = '$'.charCodeAt(0);\nvar _BSL = '\\\\'.charCodeAt(0);\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _DQO = '\"'.charCodeAt(0);\nvar _SQO = '\\''.charCodeAt(0);\nvar _WSP = ' '.charCodeAt(0);\nvar _TAB = '\\t'.charCodeAt(0);\nvar _SEM = ';'.charCodeAt(0);\nvar _COL = ':'.charCodeAt(0);\nvar _CUL = '{'.charCodeAt(0);\nvar _CUR = '}'.charCodeAt(0);\nvar _BRL = '['.charCodeAt(0);\nvar _BRR = ']'.charCodeAt(0);\nvar _CMA = ','.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar _BNG = '!'.charCodeAt(0);\nvar staticTokenTable = {};\nstaticTokenTable[_SEM] = TokenType.SemiColon;\nstaticTokenTable[_COL] = TokenType.Colon;\nstaticTokenTable[_CUL] = TokenType.CurlyL;\nstaticTokenTable[_CUR] = TokenType.CurlyR;\nstaticTokenTable[_BRR] = TokenType.BracketR;\nstaticTokenTable[_BRL] = TokenType.BracketL;\nstaticTokenTable[_LPA] = TokenType.ParenthesisL;\nstaticTokenTable[_RPA] = TokenType.ParenthesisR;\nstaticTokenTable[_CMA] = TokenType.Comma;\nvar staticUnitTable = {};\nstaticUnitTable['em'] = TokenType.EMS;\nstaticUnitTable['ex'] = TokenType.EXS;\nstaticUnitTable['px'] = TokenType.Length;\nstaticUnitTable['cm'] = TokenType.Length;\nstaticUnitTable['mm'] = TokenType.Length;\nstaticUnitTable['in'] = TokenType.Length;\nstaticUnitTable['pt'] = TokenType.Length;\nstaticUnitTable['pc'] = TokenType.Length;\nstaticUnitTable['deg'] = TokenType.Angle;\nstaticUnitTable['rad'] = TokenType.Angle;\nstaticUnitTable['grad'] = TokenType.Angle;\nstaticUnitTable['ms'] = TokenType.Time;\nstaticUnitTable['s'] = TokenType.Time;\nstaticUnitTable['hz'] = TokenType.Freq;\nstaticUnitTable['khz'] = TokenType.Freq;\nstaticUnitTable['%'] = TokenType.Percentage;\nstaticUnitTable['fr'] = TokenType.Percentage;\nstaticUnitTable['dpi'] = TokenType.Resolution;\nstaticUnitTable['dpcm'] = TokenType.Resolution;\nvar Scanner = /** @class */ (function () {\n    function Scanner() {\n        this.stream = new MultiLineStream('');\n        this.ignoreComment = true;\n        this.ignoreWhitespace = true;\n        this.inURL = false;\n    }\n    Scanner.prototype.setSource = function (input) {\n        this.stream = new MultiLineStream(input);\n    };\n    Scanner.prototype.finishToken = function (offset, type, text) {\n        return {\n            offset: offset,\n            len: this.stream.pos() - offset,\n            type: type,\n            text: text || this.stream.substring(offset)\n        };\n    };\n    Scanner.prototype.substring = function (offset, len) {\n        return this.stream.substring(offset, offset + len);\n    };\n    Scanner.prototype.pos = function () {\n        return this.stream.pos();\n    };\n    Scanner.prototype.goBackTo = function (pos) {\n        this.stream.goBackTo(pos);\n    };\n    Scanner.prototype.scanUnquotedString = function () {\n        var offset = this.stream.pos();\n        var content = [];\n        if (this._unquotedString(content)) {\n            return this.finishToken(offset, TokenType.UnquotedString, content.join(''));\n        }\n        return null;\n    };\n    Scanner.prototype.scan = function () {\n        // processes all whitespaces and comments\n        var triviaToken = this.trivia();\n        if (triviaToken !== null) {\n            return triviaToken;\n        }\n        var offset = this.stream.pos();\n        // End of file/input\n        if (this.stream.eos()) {\n            return this.finishToken(offset, TokenType.EOF);\n        }\n        return this.scanNext(offset);\n    };\n    Scanner.prototype.scanNext = function (offset) {\n        // CDO <!--\n        if (this.stream.advanceIfChars([_LAN, _BNG, _MIN, _MIN])) {\n            return this.finishToken(offset, TokenType.CDO);\n        }\n        // CDC -->\n        if (this.stream.advanceIfChars([_MIN, _MIN, _RAN])) {\n            return this.finishToken(offset, TokenType.CDC);\n        }\n        var content = [];\n        if (this.ident(content)) {\n            return this.finishToken(offset, TokenType.Ident, content.join(''));\n        }\n        // at-keyword\n        if (this.stream.advanceIfChar(_ATS)) {\n            content = ['@'];\n            if (this._name(content)) {\n                var keywordText = content.join('');\n                if (keywordText === '@charset') {\n                    return this.finishToken(offset, TokenType.Charset, keywordText);\n                }\n                return this.finishToken(offset, TokenType.AtKeyword, keywordText);\n            }\n            else {\n                return this.finishToken(offset, TokenType.Delim);\n            }\n        }\n        // hash\n        if (this.stream.advanceIfChar(_HSH)) {\n            content = ['#'];\n            if (this._name(content)) {\n                return this.finishToken(offset, TokenType.Hash, content.join(''));\n            }\n            else {\n                return this.finishToken(offset, TokenType.Delim);\n            }\n        }\n        // Important\n        if (this.stream.advanceIfChar(_BNG)) {\n            return this.finishToken(offset, TokenType.Exclamation);\n        }\n        // Numbers\n        if (this._number()) {\n            var pos = this.stream.pos();\n            content = [this.stream.substring(offset, pos)];\n            if (this.stream.advanceIfChar(_PRC)) {\n                // Percentage 43%\n                return this.finishToken(offset, TokenType.Percentage);\n            }\n            else if (this.ident(content)) {\n                var dim = this.stream.substring(pos).toLowerCase();\n                var tokenType_1 = staticUnitTable[dim];\n                if (typeof tokenType_1 !== 'undefined') {\n                    // Known dimension 43px\n                    return this.finishToken(offset, tokenType_1, content.join(''));\n                }\n                else {\n                    // Unknown dimension 43ft\n                    return this.finishToken(offset, TokenType.Dimension, content.join(''));\n                }\n            }\n            return this.finishToken(offset, TokenType.Num);\n        }\n        // String, BadString\n        content = [];\n        var tokenType = this._string(content);\n        if (tokenType !== null) {\n            return this.finishToken(offset, tokenType, content.join(''));\n        }\n        // single character tokens\n        tokenType = staticTokenTable[this.stream.peekChar()];\n        if (typeof tokenType !== 'undefined') {\n            this.stream.advance(1);\n            return this.finishToken(offset, tokenType);\n        }\n        // includes ~=\n        if (this.stream.peekChar(0) === _TLD && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.Includes);\n        }\n        // DashMatch |=\n        if (this.stream.peekChar(0) === _PIP && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.Dashmatch);\n        }\n        // Substring operator *=\n        if (this.stream.peekChar(0) === _MUL && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.SubstringOperator);\n        }\n        // Substring operator ^=\n        if (this.stream.peekChar(0) === _HAT && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.PrefixOperator);\n        }\n        // Substring operator $=\n        if (this.stream.peekChar(0) === _DLR && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.SuffixOperator);\n        }\n        // Delim\n        this.stream.nextChar();\n        return this.finishToken(offset, TokenType.Delim);\n    };\n    Scanner.prototype._matchWordAnyCase = function (characters) {\n        var index = 0;\n        this.stream.advanceWhileChar(function (ch) {\n            var result = characters[index] === ch || characters[index + 1] === ch;\n            if (result) {\n                index += 2;\n            }\n            return result;\n        });\n        if (index === characters.length) {\n            return true;\n        }\n        else {\n            this.stream.goBack(index / 2);\n            return false;\n        }\n    };\n    Scanner.prototype.trivia = function () {\n        while (true) {\n            var offset = this.stream.pos();\n            if (this._whitespace()) {\n                if (!this.ignoreWhitespace) {\n                    return this.finishToken(offset, TokenType.Whitespace);\n                }\n            }\n            else if (this.comment()) {\n                if (!this.ignoreComment) {\n                    return this.finishToken(offset, TokenType.Comment);\n                }\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    Scanner.prototype.comment = function () {\n        if (this.stream.advanceIfChars([_FSL, _MUL])) {\n            var success_1 = false, hot_1 = false;\n            this.stream.advanceWhileChar(function (ch) {\n                if (hot_1 && ch === _FSL) {\n                    success_1 = true;\n                    return false;\n                }\n                hot_1 = ch === _MUL;\n                return true;\n            });\n            if (success_1) {\n                this.stream.advance(1);\n            }\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._number = function () {\n        var npeek = 0, ch;\n        if (this.stream.peekChar() === _DOT) {\n            npeek = 1;\n        }\n        ch = this.stream.peekChar(npeek);\n        if (ch >= _0 && ch <= _9) {\n            this.stream.advance(npeek + 1);\n            this.stream.advanceWhileChar(function (ch) {\n                return ch >= _0 && ch <= _9 || npeek === 0 && ch === _DOT;\n            });\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._newline = function (result) {\n        var ch = this.stream.peekChar();\n        switch (ch) {\n            case _CAR:\n            case _LFD:\n            case _NWL:\n                this.stream.advance(1);\n                result.push(String.fromCharCode(ch));\n                if (ch === _CAR && this.stream.advanceIfChar(_NWL)) {\n                    result.push('\\n');\n                }\n                return true;\n        }\n        return false;\n    };\n    Scanner.prototype._escape = function (result, includeNewLines) {\n        var ch = this.stream.peekChar();\n        if (ch === _BSL) {\n            this.stream.advance(1);\n            ch = this.stream.peekChar();\n            var hexNumCount = 0;\n            while (hexNumCount < 6 && (ch >= _0 && ch <= _9 || ch >= _a && ch <= _f || ch >= _A && ch <= _F)) {\n                this.stream.advance(1);\n                ch = this.stream.peekChar();\n                hexNumCount++;\n            }\n            if (hexNumCount > 0) {\n                try {\n                    var hexVal = parseInt(this.stream.substring(this.stream.pos() - hexNumCount), 16);\n                    if (hexVal) {\n                        result.push(String.fromCharCode(hexVal));\n                    }\n                }\n                catch (e) {\n                    // ignore\n                }\n                // optional whitespace or new line, not part of result text\n                if (ch === _WSP || ch === _TAB) {\n                    this.stream.advance(1);\n                }\n                else {\n                    this._newline([]);\n                }\n                return true;\n            }\n            if (ch !== _CAR && ch !== _LFD && ch !== _NWL) {\n                this.stream.advance(1);\n                result.push(String.fromCharCode(ch));\n                return true;\n            }\n            else if (includeNewLines) {\n                return this._newline(result);\n            }\n        }\n        return false;\n    };\n    Scanner.prototype._stringChar = function (closeQuote, result) {\n        // not closeQuote, not backslash, not newline\n        var ch = this.stream.peekChar();\n        if (ch !== 0 && ch !== closeQuote && ch !== _BSL && ch !== _CAR && ch !== _LFD && ch !== _NWL) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._string = function (result) {\n        if (this.stream.peekChar() === _SQO || this.stream.peekChar() === _DQO) {\n            var closeQuote = this.stream.nextChar();\n            result.push(String.fromCharCode(closeQuote));\n            while (this._stringChar(closeQuote, result) || this._escape(result, true)) {\n                // loop\n            }\n            if (this.stream.peekChar() === closeQuote) {\n                this.stream.nextChar();\n                result.push(String.fromCharCode(closeQuote));\n                return TokenType.String;\n            }\n            else {\n                return TokenType.BadString;\n            }\n        }\n        return null;\n    };\n    Scanner.prototype._unquotedChar = function (result) {\n        // not closeQuote, not backslash, not newline\n        var ch = this.stream.peekChar();\n        if (ch !== 0 && ch !== _BSL && ch !== _SQO && ch !== _DQO && ch !== _LPA && ch !== _RPA && ch !== _WSP && ch !== _TAB && ch !== _NWL && ch !== _LFD && ch !== _CAR) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._unquotedString = function (result) {\n        var hasContent = false;\n        while (this._unquotedChar(result) || this._escape(result)) {\n            hasContent = true;\n        }\n        return hasContent;\n    };\n    Scanner.prototype._whitespace = function () {\n        var n = this.stream.advanceWhileChar(function (ch) {\n            return ch === _WSP || ch === _TAB || ch === _NWL || ch === _LFD || ch === _CAR;\n        });\n        return n > 0;\n    };\n    Scanner.prototype._name = function (result) {\n        var matched = false;\n        while (this._identChar(result) || this._escape(result)) {\n            matched = true;\n        }\n        return matched;\n    };\n    Scanner.prototype.ident = function (result) {\n        var pos = this.stream.pos();\n        var hasMinus = this._minus(result);\n        if (hasMinus && this._minus(result) /* -- */) {\n            if (this._identFirstChar(result) || this._escape(result)) {\n                while (this._identChar(result) || this._escape(result)) {\n                    // loop\n                }\n                return true;\n            }\n        }\n        else if (this._identFirstChar(result) || this._escape(result)) {\n            while (this._identChar(result) || this._escape(result)) {\n                // loop\n            }\n            return true;\n        }\n        this.stream.goBackTo(pos);\n        return false;\n    };\n    Scanner.prototype._identFirstChar = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _USC || // _\n            ch >= _a && ch <= _z || // a-z\n            ch >= _A && ch <= _Z || // A-Z\n            ch >= 0x80 && ch <= 0xFFFF) { // nonascii\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._minus = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _MIN) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._identChar = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _USC || // _\n            ch === _MIN || // -\n            ch >= _a && ch <= _z || // a-z\n            ch >= _A && ch <= _Z || // A-Z\n            ch >= _0 && ch <= _9 || // 0/9\n            ch >= 0x80 && ch <= 0xFFFF) { // nonascii\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    return Scanner;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js ***!
  \******************************************************************************************************************/
/*! exports provided: Scope, GlobalScope, Symbol, ScopeBuilder, Symbols */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scope\", function() { return Scope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GlobalScope\", function() { return GlobalScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbol\", function() { return Symbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScopeBuilder\", function() { return ScopeBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbols\", function() { return Symbols; });\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/arrays.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar Scope = /** @class */ (function () {\n    function Scope(offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.symbols = [];\n        this.parent = null;\n        this.children = [];\n    }\n    Scope.prototype.addChild = function (scope) {\n        this.children.push(scope);\n        scope.setParent(this);\n    };\n    Scope.prototype.setParent = function (scope) {\n        this.parent = scope;\n    };\n    Scope.prototype.findScope = function (offset, length) {\n        if (length === void 0) { length = 0; }\n        if (this.offset <= offset && this.offset + this.length > offset + length || this.offset === offset && this.length === length) {\n            return this.findInScope(offset, length);\n        }\n        return null;\n    };\n    Scope.prototype.findInScope = function (offset, length) {\n        if (length === void 0) { length = 0; }\n        // find the first scope child that has an offset larger than offset + length\n        var end = offset + length;\n        var idx = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__[\"findFirst\"])(this.children, function (s) { return s.offset > end; });\n        if (idx === 0) {\n            // all scopes have offsets larger than our end\n            return this;\n        }\n        var res = this.children[idx - 1];\n        if (res.offset <= offset && res.offset + res.length >= offset + length) {\n            return res.findInScope(offset, length);\n        }\n        return this;\n    };\n    Scope.prototype.addSymbol = function (symbol) {\n        this.symbols.push(symbol);\n    };\n    Scope.prototype.getSymbol = function (name, type) {\n        for (var index = 0; index < this.symbols.length; index++) {\n            var symbol = this.symbols[index];\n            if (symbol.name === name && symbol.type === type) {\n                return symbol;\n            }\n        }\n        return null;\n    };\n    Scope.prototype.getSymbols = function () {\n        return this.symbols;\n    };\n    return Scope;\n}());\n\nvar GlobalScope = /** @class */ (function (_super) {\n    __extends(GlobalScope, _super);\n    function GlobalScope() {\n        return _super.call(this, 0, Number.MAX_VALUE) || this;\n    }\n    return GlobalScope;\n}(Scope));\n\nvar Symbol = /** @class */ (function () {\n    function Symbol(name, value, node, type) {\n        this.name = name;\n        this.value = value;\n        this.node = node;\n        this.type = type;\n    }\n    return Symbol;\n}());\n\nvar ScopeBuilder = /** @class */ (function () {\n    function ScopeBuilder(scope) {\n        this.scope = scope;\n    }\n    ScopeBuilder.prototype.addSymbol = function (node, name, value, type) {\n        if (node.offset !== -1) {\n            var current = this.scope.findScope(node.offset, node.length);\n            if (current) {\n                current.addSymbol(new Symbol(name, value, node, type));\n            }\n        }\n    };\n    ScopeBuilder.prototype.addScope = function (node) {\n        if (node.offset !== -1) {\n            var current = this.scope.findScope(node.offset, node.length);\n            if (current && (current.offset !== node.offset || current.length !== node.length)) { // scope already known?\n                var newScope = new Scope(node.offset, node.length);\n                current.addChild(newScope);\n                return newScope;\n            }\n            return current;\n        }\n        return null;\n    };\n    ScopeBuilder.prototype.addSymbolToChildScope = function (scopeNode, node, name, value, type) {\n        if (scopeNode && scopeNode.offset !== -1) {\n            var current = this.addScope(scopeNode); // create the scope or gets the existing one\n            if (current) {\n                current.addSymbol(new Symbol(name, value, node, type));\n            }\n        }\n    };\n    ScopeBuilder.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Keyframe:\n                this.addSymbol(node, node.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Keyframe);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].CustomPropertyDeclaration:\n                return this.visitCustomPropertyDeclarationNode(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].VariableDeclaration:\n                return this.visitVariableDeclarationNode(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset:\n                return this.visitRuleSet(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n                this.addSymbol(node, node.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Mixin);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionDeclaration:\n                this.addSymbol(node, node.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter: {\n                return this.visitFunctionParameterNode(node);\n            }\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declarations:\n                this.addScope(node);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].For:\n                var forNode = node;\n                var scopeNode = forNode.getDeclarations();\n                if (scopeNode) {\n                    this.addSymbolToChildScope(scopeNode, forNode.variable, forNode.variable.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n                }\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Each: {\n                var eachNode = node;\n                var scopeNode_1 = eachNode.getDeclarations();\n                if (scopeNode_1) {\n                    var variables = eachNode.getVariables().getChildren();\n                    for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n                        var variable = variables_1[_i];\n                        this.addSymbolToChildScope(scopeNode_1, variable, variable.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n                    }\n                }\n                return true;\n            }\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitRuleSet = function (node) {\n        var current = this.scope.findScope(node.offset, node.length);\n        if (current) {\n            for (var _i = 0, _a = node.getSelectors().getChildren(); _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                    if (child.getChildren().length === 1) { // only selectors with a single element can be extended\n                        current.addSymbol(new Symbol(child.getChild(0).getText(), void 0, child, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule));\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitVariableDeclarationNode = function (node) {\n        var value = node.getValue() ? node.getValue().getText() : void 0;\n        this.addSymbol(node, node.getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        return true;\n    };\n    ScopeBuilder.prototype.visitFunctionParameterNode = function (node) {\n        // parameters are part of the body scope\n        var scopeNode = node.getParent().getDeclarations();\n        if (scopeNode) {\n            var valueNode = node.getDefaultValue();\n            var value = valueNode ? valueNode.getText() : void 0;\n            this.addSymbolToChildScope(scopeNode, node, node.getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitCustomPropertyDeclarationNode = function (node) {\n        var value = node.getValue() ? node.getValue().getText() : '';\n        this.addCSSVariable(node.getProperty(), node.getProperty().getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        return true;\n    };\n    ScopeBuilder.prototype.addCSSVariable = function (node, name, value, type) {\n        if (node.offset !== -1) {\n            this.scope.addSymbol(new Symbol(name, value, node, type));\n        }\n    };\n    return ScopeBuilder;\n}());\n\nvar Symbols = /** @class */ (function () {\n    function Symbols(node) {\n        this.global = new GlobalScope();\n        node.acceptVisitor(new ScopeBuilder(this.global));\n    }\n    Symbols.prototype.findSymbolsAtOffset = function (offset, referenceType) {\n        var scope = this.global.findScope(offset, 0);\n        var result = [];\n        var names = {};\n        while (scope) {\n            var symbols = scope.getSymbols();\n            for (var i = 0; i < symbols.length; i++) {\n                var symbol = symbols[i];\n                if (symbol.type === referenceType && !names[symbol.name]) {\n                    result.push(symbol);\n                    names[symbol.name] = true;\n                }\n            }\n            scope = scope.parent;\n        }\n        return result;\n    };\n    Symbols.prototype.internalFindSymbol = function (node, referenceTypes) {\n        var scopeNode = node;\n        if (node.parent instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionParameter\"] && node.parent.getParent() instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"BodyDeclaration\"]) {\n            scopeNode = node.parent.getParent().getDeclarations();\n        }\n        if (node.parent instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"] && node.parent.getParent() instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"]) {\n            var funcId = node.parent.getParent().getIdentifier();\n            if (funcId) {\n                var functionSymbol = this.internalFindSymbol(funcId, [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function]);\n                if (functionSymbol) {\n                    scopeNode = functionSymbol.node.getDeclarations();\n                }\n            }\n        }\n        if (!scopeNode) {\n            return null;\n        }\n        var name = node.getText();\n        var scope = this.global.findScope(scopeNode.offset, scopeNode.length);\n        while (scope) {\n            for (var index = 0; index < referenceTypes.length; index++) {\n                var type = referenceTypes[index];\n                var symbol = scope.getSymbol(name, type);\n                if (symbol) {\n                    return symbol;\n                }\n            }\n            scope = scope.parent;\n        }\n        return null;\n    };\n    Symbols.prototype.evaluateReferenceTypes = function (node) {\n        if (node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n            var referenceTypes = node.referenceTypes;\n            if (referenceTypes) {\n                return referenceTypes;\n            }\n            else {\n                if (node.isCustomProperty) {\n                    return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable];\n                }\n                // are a reference to a keyframe?\n                var decl = _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getParentDeclaration\"](node);\n                if (decl) {\n                    var propertyName = decl.getNonPrefixedPropertyName();\n                    if ((propertyName === 'animation' || propertyName === 'animation-name')\n                        && decl.getValue() && decl.getValue().offset === node.offset) {\n                        return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Keyframe];\n                    }\n                }\n            }\n        }\n        else if (node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Variable\"]) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable];\n        }\n        var selector = node.findAParent(_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Selector, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference);\n        if (selector) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule];\n        }\n        return null;\n    };\n    Symbols.prototype.findSymbolFromNode = function (node) {\n        if (!node) {\n            return null;\n        }\n        while (node.type === _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Interpolation) {\n            node = node.getParent();\n        }\n        var referenceTypes = this.evaluateReferenceTypes(node);\n        if (referenceTypes) {\n            return this.internalFindSymbol(node, referenceTypes);\n        }\n        return null;\n    };\n    Symbols.prototype.matchesSymbol = function (node, symbol) {\n        if (!node) {\n            return false;\n        }\n        while (node.type === _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Interpolation) {\n            node = node.getParent();\n        }\n        if (symbol.name.length !== node.length || symbol.name !== node.getText()) {\n            return false;\n        }\n        var referenceTypes = this.evaluateReferenceTypes(node);\n        if (!referenceTypes || referenceTypes.indexOf(symbol.type) === -1) {\n            return false;\n        }\n        var nodeSymbol = this.internalFindSymbol(node, referenceTypes);\n        return nodeSymbol === symbol;\n    };\n    Symbols.prototype.findSymbol = function (name, type, offset) {\n        var scope = this.global.findScope(offset);\n        while (scope) {\n            var symbol = scope.getSymbol(name, type);\n            if (symbol) {\n                return symbol;\n            }\n            scope = scope.parent;\n        }\n        return null;\n    };\n    return Symbols;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js ***!
  \**************************************************************************************************************/
/*! exports provided: LESSParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSParser\", function() { return LESSParser; });\n/* harmony import */ var _lessScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lessScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\");\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n/// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\nvar LESSParser = /** @class */ (function (_super) {\n    __extends(LESSParser, _super);\n    function LESSParser() {\n        return _super.call(this, new _lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"LESSScanner\"]()) || this;\n    }\n    LESSParser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseVariableDeclaration()\n                || this._parsePlugin()\n                || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseFunction()\n            || this._parseRuleset(true);\n    };\n    LESSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once') /* deprecated in less 1.4.1 */) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Import\"]);\n        this.consumeToken();\n        // less 1.4.1: @import (css) \"lib\"\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n            }\n            do {\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    break;\n                }\n            } while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident));\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n            }\n        }\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].URIOrStringExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parsePlugin = function () {\n        if (!this.peekKeyword('@plugin')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Plugin);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].StringLiteralExpected);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n        var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n        if (!node) {\n            var node_1 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MediaQuery\"]);\n            if (node_1.addChild(this._parseVariable())) {\n                return this.finish(node_1);\n            }\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._tryParseRuleset(isNested)\n            || this._tryToParseDeclaration()\n            || this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseDetachedRuleSetMixin()\n            || this._parseStylesheetStatement(isNested);\n    };\n    LESSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent() || this._parseVariable();\n    };\n    LESSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"VariableDeclaration\"]);\n        var mark = this.mark();\n        if (!this.peekDelim('@') && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword) || !node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            node.colonPosition = this.prevToken.offset;\n            if (node.setValue(this._parseDetachedRuleSet())) {\n                node.needsSemicolon = false;\n            }\n            else if (!node.setValue(this._parseExpr())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].VariableValueExpected, [], panic);\n            }\n            node.addChild(this._parsePrio());\n        }\n        else {\n            this.restoreAtMark(mark);\n            return null; // at keyword, but no ':', not a variable declaration but some at keyword\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSet = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            return null;\n        }\n        var content = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"BodyDeclaration\"]);\n        this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n        return this.finish(content);\n    };\n    LESSParser.prototype._parseDetachedRuleSetBody = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._parseVariable = function () {\n        if (!this.peekDelim('@') && !this.peekDelim('$') && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Variable\"]);\n        var mark = this.mark();\n        while (this.acceptDelim('@') || this.acceptDelim('$')) {\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseTerm = function () {\n        var term = _super.prototype._parseTerm.call(this);\n        if (term) {\n            return term;\n        }\n        term = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Term\"]);\n        if (term.setExpression(this._parseVariable()) ||\n            term.setExpression(this._parseEscaped()) ||\n            term.setExpression(this._tryParseMixinReference())) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseEscaped = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EscapedJavaScript) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BadEscapedJavaScript)) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].EscapedValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        if (this.peekDelim('~')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].EscapedValue);\n            this.consumeToken();\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].String) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EscapedJavaScript)) {\n                return this.finish(node);\n            }\n            else {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].TermExpected);\n            }\n        }\n        return null;\n    };\n    LESSParser.prototype._parseOperator = function () {\n        var node = this._parseGuardOperator();\n        if (node) {\n            return node;\n        }\n        else {\n            return _super.prototype._parseOperator.call(this);\n        }\n    };\n    LESSParser.prototype._parseGuardOperator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        else if (this.peekDelim('=')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('<');\n            return node;\n        }\n        else if (this.peekDelim('<')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        return null;\n    };\n    LESSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseKeyframe()\n                || this._parseMedia(true)\n                || this._parseImport()\n                || this._parseSupports(true) // @supports\n                || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n                || this._parseVariableDeclaration() // Variable declarations\n                || this._parseUnknownAtRule();\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseRuleset(true) // nested ruleset\n            || this._tryParseMixinReference() // less mixin reference\n            || this._parseFunction()\n            || this._parseExtend() // less extend declaration\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n    };\n    LESSParser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Keyframe]) || this._parseVariable();\n    };\n    LESSParser.prototype._parseKeyframeSelector = function () {\n        return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n            || _super.prototype._parseKeyframeSelector.call(this);\n    };\n    LESSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    LESSParser.prototype._parseSelector = function (isNested) {\n        // CSS Guards\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Selector\"]);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            var mark = this.mark();\n            if (node.addChild(this._parseGuard()) && this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                break;\n            }\n            this.restoreAtMark(mark);\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseSelectorIdent = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorInterpolation);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parsePropertyIdentifier = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^--/);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        if (hasContent && !this.hasWhitespace()) {\n            this.acceptDelim('+');\n            if (!this.hasWhitespace()) {\n                this.acceptIdent('_');\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype.peekInterpolatedIdent = function () {\n        return this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) ||\n            this.peekDelim('@') ||\n            this.peekDelim('$') ||\n            this.peekDelim('-');\n    };\n    LESSParser.prototype._acceptInterpolatedIdent = function (node) {\n        var _this = this;\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) || node.addChild(indentInterpolation()) || (hasContent && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num)))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent;\n    };\n    LESSParser.prototype._parseInterpolation = function () {\n        // @{name} Variable or \n        // ${name} Property\n        var mark = this.mark();\n        if (this.peekDelim('@') || this.peekDelim('$')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Interpolation);\n            this.consumeToken();\n            if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected);\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._tryParseMixinDeclaration = function () {\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n        if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        node.setGuard(this._parseGuard());\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n    };\n    LESSParser.prototype._parseMixInBodyDeclaration = function () {\n        return this._parseFontFace() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n        var identifier;\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            identifier = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            this.consumeToken(); // # or .\n            if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n                return null;\n            }\n        }\n        else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Hash)) {\n            identifier = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            this.consumeToken(); // TokenType.Hash\n        }\n        else {\n            return null;\n        }\n        identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin];\n        return this.finish(identifier);\n    };\n    LESSParser.prototype._parsePseudo = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n        this.consumeToken(); // :\n        if (this.acceptIdent('extend')) {\n            return this._completeExtends(node);\n        }\n        this.restoreAtMark(mark);\n        return _super.prototype._parsePseudo.call(this);\n    };\n    LESSParser.prototype._parseExtend = function () {\n        if (!this.peekDelim('&')) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n        this.consumeToken(); // &\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon) || !this.acceptIdent('extend')) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._completeExtends(node);\n    };\n    LESSParser.prototype._completeExtends = function (node) {\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].LeftParenthesisExpected);\n        }\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SelectorExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!selectors.addChild(this._parseSelector(true))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SelectorExpected);\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        if (node.addChild(this._parseVariable()) && (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL))) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._tryParseMixinReference = function () {\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        var identifier = this._parseMixinDeclarationIdentifier();\n        while (identifier) {\n            this.acceptDelim('>');\n            var nextId = this._parseMixinDeclarationIdentifier();\n            if (nextId) {\n                node.getNamespaces().addChild(identifier);\n                identifier = nextId;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node.setIdentifier(identifier)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        var hasArguments = false;\n        if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            hasArguments = true;\n            if (node.getArguments().addChild(this._parseMixinArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n            }\n            identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin];\n        }\n        else {\n            identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin, _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Rule];\n        }\n        node.addChild(this._parsePrio());\n        if (!hasArguments && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMixinArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionArgument\"]);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n                this.restoreAtMark(pos);\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        this.restoreAtMark(pos);\n        return null;\n    };\n    LESSParser.prototype._parseMixinParameter = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionParameter\"]);\n        // special rest variable: @rest...\n        if (this.peekKeyword('@rest')) {\n            var restNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            if (!this.accept(_lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].DotExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n            }\n            node.setIdentifier(this.finish(restNode));\n            return this.finish(node);\n        }\n        // special const args: ...\n        if (this.peek(_lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n            var varargsNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            node.setIdentifier(this.finish(varargsNode));\n            return this.finish(node);\n        }\n        var hasContent = false;\n        // default variable declaration: @param: 12 or @name\n        if (node.setIdentifier(this._parseVariable())) {\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon);\n            hasContent = true;\n        }\n        if (!node.setDefaultValue(this._parseDetachedRuleSet() || this._parseExpr(true)) && !hasContent) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuard = function () {\n        if (!this.peekIdent('when')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"LessGuard\"]);\n        this.consumeToken(); // when\n        node.isNegated = this.acceptIdent('not');\n        if (!node.getConditions().addChild(this._parseGuardCondition())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ConditionExpected);\n        }\n        while (this.acceptIdent('and') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!node.getConditions().addChild(this._parseGuardCondition())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ConditionExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuardCondition = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"GuardCondition\"]);\n        this.consumeToken(); // ParenthesisL\n        if (!node.addChild(this._parseExpr())) {\n            // empty (?)\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Function\"]);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseMixinArgument())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunctionIdentifier = function () {\n        if (this.peekDelim('%')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            node.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Function];\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseFunctionIdentifier.call(this);\n    };\n    LESSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_2 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            node_2.addChild(this._parseBinaryExpr());\n            return this.finish(node_2);\n        }\n        return node;\n    };\n    return LESSParser;\n}(_cssParser_js__WEBPACK_IMPORTED_MODULE_2__[\"Parser\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js ***!
  \***************************************************************************************************************/
/*! exports provided: Ellipsis, LESSScanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipsis\", function() { return Ellipsis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSScanner\", function() { return LESSScanner; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _TIC = '`'.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar customTokenValue = _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CustomToken;\nvar Ellipsis = customTokenValue++;\nvar LESSScanner = /** @class */ (function (_super) {\n    __extends(LESSScanner, _super);\n    function LESSScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LESSScanner.prototype.scanNext = function (offset) {\n        // LESS: escaped JavaScript code `const a = \"dddd\"`\n        var tokenType = this.escapedJavaScript();\n        if (tokenType !== null) {\n            return this.finishToken(offset, tokenType);\n        }\n        if (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\n            return this.finishToken(offset, Ellipsis);\n        }\n        return _super.prototype.scanNext.call(this, offset);\n    };\n    LESSScanner.prototype.comment = function () {\n        if (_super.prototype.comment.call(this)) {\n            return true;\n        }\n        if (!this.inURL && this.stream.advanceIfChars([_FSL, _FSL])) {\n            this.stream.advanceWhileChar(function (ch) {\n                switch (ch) {\n                    case _NWL:\n                    case _CAR:\n                    case _LFD:\n                        return false;\n                    default:\n                        return true;\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    LESSScanner.prototype.escapedJavaScript = function () {\n        var ch = this.stream.peekChar();\n        if (ch === _TIC) {\n            this.stream.advance(1);\n            this.stream.advanceWhileChar(function (ch) { return ch !== _TIC; });\n            return this.stream.advanceIfChar(_TIC) ? _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EscapedJavaScript : _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadEscapedJavaScript;\n        }\n        return null;\n    };\n    return LESSScanner;\n}(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9sZXNzU2Nhbm5lci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvcGFyc2VyL2xlc3NTY2FubmVyLmpzPzczODIiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCAqIGFzIHNjYW5uZXIgZnJvbSAnLi9jc3NTY2FubmVyLmpzJztcbnZhciBfRlNMID0gJy8nLmNoYXJDb2RlQXQoMCk7XG52YXIgX05XTCA9ICdcXG4nLmNoYXJDb2RlQXQoMCk7XG52YXIgX0NBUiA9ICdcXHInLmNoYXJDb2RlQXQoMCk7XG52YXIgX0xGRCA9ICdcXGYnLmNoYXJDb2RlQXQoMCk7XG52YXIgX1RJQyA9ICdgJy5jaGFyQ29kZUF0KDApO1xudmFyIF9ET1QgPSAnLicuY2hhckNvZGVBdCgwKTtcbnZhciBjdXN0b21Ub2tlblZhbHVlID0gc2Nhbm5lci5Ub2tlblR5cGUuQ3VzdG9tVG9rZW47XG5leHBvcnQgdmFyIEVsbGlwc2lzID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xudmFyIExFU1NTY2FubmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhMRVNTU2Nhbm5lciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBMRVNTU2Nhbm5lcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBMRVNTU2Nhbm5lci5wcm90b3R5cGUuc2Nhbk5leHQgPSBmdW5jdGlvbiAob2Zmc2V0KSB7XG4gICAgICAgIC8vIExFU1M6IGVzY2FwZWQgSmF2YVNjcmlwdCBjb2RlIGBjb25zdCBhID0gXCJkZGRkXCJgXG4gICAgICAgIHZhciB0b2tlblR5cGUgPSB0aGlzLmVzY2FwZWRKYXZhU2NyaXB0KCk7XG4gICAgICAgIGlmICh0b2tlblR5cGUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgdG9rZW5UeXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcnMoW19ET1QsIF9ET1QsIF9ET1RdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4ob2Zmc2V0LCBFbGxpcHNpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuc2Nhbk5leHQuY2FsbCh0aGlzLCBvZmZzZXQpO1xuICAgIH07XG4gICAgTEVTU1NjYW5uZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfc3VwZXIucHJvdG90eXBlLmNvbW1lbnQuY2FsbCh0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmluVVJMICYmIHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfRlNMLCBfRlNMXSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyZWFtLmFkdmFuY2VXaGlsZUNoYXIoZnVuY3Rpb24gKGNoKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChjaCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIF9OV0w6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgX0NBUjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBfTEZEOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgTEVTU1NjYW5uZXIucHJvdG90eXBlLmVzY2FwZWRKYXZhU2NyaXB0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY2ggPSB0aGlzLnN0cmVhbS5wZWVrQ2hhcigpO1xuICAgICAgICBpZiAoY2ggPT09IF9USUMpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyZWFtLmFkdmFuY2UoMSk7XG4gICAgICAgICAgICB0aGlzLnN0cmVhbS5hZHZhbmNlV2hpbGVDaGFyKGZ1bmN0aW9uIChjaCkgeyByZXR1cm4gY2ggIT09IF9USUM7IH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX1RJQykgPyBzY2FubmVyLlRva2VuVHlwZS5Fc2NhcGVkSmF2YVNjcmlwdCA6IHNjYW5uZXIuVG9rZW5UeXBlLkJhZEVzY2FwZWRKYXZhU2NyaXB0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIExFU1NTY2FubmVyO1xufShzY2FubmVyLlNjYW5uZXIpKTtcbmV4cG9ydCB7IExFU1NTY2FubmVyIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js ***!
  \**************************************************************************************************************/
/*! exports provided: SCSSIssueType, SCSSParseError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSIssueType\", function() { return SCSSIssueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSParseError\", function() { return SCSSParseError; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar SCSSIssueType = /** @class */ (function () {\n    function SCSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return SCSSIssueType;\n}());\n\nvar SCSSParseError = {\n    FromExpected: new SCSSIssueType('scss-fromexpected', localize('expected.from', \"'from' expected\")),\n    ThroughOrToExpected: new SCSSIssueType('scss-throughexpected', localize('expected.through', \"'through' or 'to' expected\")),\n    InExpected: new SCSSIssueType('scss-fromexpected', localize('expected.in', \"'in' expected\")),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9zY3NzRXJyb3JzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9wYXJzZXIvc2Nzc0Vycm9ycy5qcz83YTY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0ICogYXMgbmxzIGZyb20gJy4uLy4uLy4uL2ZpbGxlcnMvdnNjb2RlLW5scy5qcyc7XG52YXIgbG9jYWxpemUgPSBubHMubG9hZE1lc3NhZ2VCdW5kbGUoKTtcbnZhciBTQ1NTSXNzdWVUeXBlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNDU1NJc3N1ZVR5cGUoaWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gU0NTU0lzc3VlVHlwZTtcbn0oKSk7XG5leHBvcnQgeyBTQ1NTSXNzdWVUeXBlIH07XG5leHBvcnQgdmFyIFNDU1NQYXJzZUVycm9yID0ge1xuICAgIEZyb21FeHBlY3RlZDogbmV3IFNDU1NJc3N1ZVR5cGUoJ3Njc3MtZnJvbWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLmZyb20nLCBcIidmcm9tJyBleHBlY3RlZFwiKSksXG4gICAgVGhyb3VnaE9yVG9FeHBlY3RlZDogbmV3IFNDU1NJc3N1ZVR5cGUoJ3Njc3MtdGhyb3VnaGV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnRocm91Z2gnLCBcIid0aHJvdWdoJyBvciAndG8nIGV4cGVjdGVkXCIpKSxcbiAgICBJbkV4cGVjdGVkOiBuZXcgU0NTU0lzc3VlVHlwZSgnc2Nzcy1mcm9tZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuaW4nLCBcIidpbicgZXhwZWN0ZWRcIikpLFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js ***!
  \**************************************************************************************************************/
/*! exports provided: SCSSParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSParser\", function() { return SCSSParser; });\n/* harmony import */ var _scssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\");\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n/// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nvar SCSSParser = /** @class */ (function (_super) {\n    __extends(SCSSParser, _super);\n    function SCSSParser() {\n        return _super.call(this, new _scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"SCSSScanner\"]()) || this;\n    }\n    SCSSParser.prototype._parseStylesheetStatement = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseWarnAndDebug()\n                || this._parseControlStatement()\n                || this._parseMixinDeclaration()\n                || this._parseMixinContent()\n                || this._parseMixinReference() // @include\n                || this._parseFunctionDeclaration()\n                || _super.prototype._parseStylesheetAtStatement.call(this);\n        }\n        return this._parseRuleset(true) || this._parseVariableDeclaration();\n    };\n    SCSSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Import\"]);\n        this.consumeToken();\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].URIOrStringExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].URIOrStringExpected);\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    // scss variables: $font-size: 12px;\n    SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        if (!this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableName\"])) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"VariableDeclaration\"]);\n        if (!node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ColonExpected);\n        }\n        node.colonPosition = this.prevToken.offset;\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], panic);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Exclamation)) {\n            if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^(default|global)$/)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n            }\n            this.consumeToken();\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseFunction() || this._parseIdent() || this._parseVariable(); // first function, the indent\n    };\n    SCSSParser.prototype._parseKeyframeSelector = function () {\n        return this._tryParseKeyframeSelector()\n            || this._parseControlStatement(this._parseKeyframeSelector.bind(this))\n            || this._parseVariableDeclaration()\n            || this._parseMixinContent();\n    };\n    SCSSParser.prototype._parseVariable = function () {\n        if (!this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableName\"])) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Variable\"]);\n        this.consumeToken();\n        return node;\n    };\n    SCSSParser.prototype._parseIdent = function (referenceTypes) {\n        var _this = this;\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) && !this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"InterpolationFunction\"]) && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n        node.referenceTypes = referenceTypes;\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^--/);\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) || node.addChild(indentInterpolation()) || (hasContent && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num)))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    SCSSParser.prototype._parseTerm = function () {\n        var term = _super.prototype._parseTerm.call(this);\n        if (term) {\n            return term;\n        }\n        term = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Term\"]);\n        if (term.setExpression(this._parseVariable())\n            || term.setExpression(this._parseSelectorCombinator())\n            || term.setExpression(this._tryParsePrio())) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseInterpolation = function () {\n        if (this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"InterpolationFunction\"])) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Interpolation\"]);\n            this.consumeToken();\n            if (!node.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {\n                if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                    return this.finish(node);\n                }\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseOperator = function () {\n        if (this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"EqualsOperator\"]) || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"NotEqualsOperator\"])\n            || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"GreaterEqualsOperator\"]) || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"SmallerEqualsOperator\"])\n            || this.peekDelim('>') || this.peekDelim('<')\n            || this.peekIdent('and') || this.peekIdent('or')\n            || this.peekDelim('%')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseOperator.call(this);\n    };\n    SCSSParser.prototype._parseUnaryOperator = function () {\n        if (this.peekIdent('not')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseUnaryOperator.call(this);\n    };\n    SCSSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseKeyframe() // nested @keyframe\n                || this._parseImport() // nested @import\n                || this._parseMedia(true) // nested @media\n                || this._parseFontFace() // nested @font-face\n                || this._parseWarnAndDebug() // @warn, @debug and @error statements\n                || this._parseControlStatement() // @if, @while, @for, @each\n                || this._parseFunctionDeclaration() // @function\n                || this._parseExtends() // @extends\n                || this._parseMixinReference() // @include\n                || this._parseMixinContent() // @content\n                || this._parseMixinDeclaration() // nested @mixin\n                || this._parseRuleset(true) // @at-rule\n                || this._parseSupports(true); // @supports\n        }\n        return this._parseVariableDeclaration() // variable declaration\n            || this._tryParseRuleset(true) // nested ruleset\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n    };\n    SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Declaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon], resyncStopTokens);\n        }\n        node.colonPosition = this.prevToken.offset;\n        var hasContent = false;\n        if (node.setValue(this._parseExpr())) {\n            hasContent = true;\n            node.addChild(this._parsePrio());\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            node.setNestedProperties(this._parseNestedProperties());\n        }\n        else {\n            if (!hasContent) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].PropertyValueExpected);\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseNestedProperties = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NestedProperties\"]);\n        return this._parseBody(node, this._parseDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseExtends = function () {\n        if (this.peekKeyword('@extend')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n            this.consumeToken();\n            if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].SelectorExpected);\n            }\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                node.getSelectors().addChild(this._parseSimpleSelector());\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Exclamation)) {\n                if (!this.acceptIdent('optional')) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    SCSSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo-1\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSelectorPlaceholder = function () {\n        if (this.peekDelim('%')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorPlaceholder);\n            this.consumeToken();\n            this._parseIdent();\n            return this.finish(node);\n        }\n        else if (this.peekKeyword('@at-root')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorPlaceholder);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseElementName = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseElementName.call(this);\n        if (node && !this.hasWhitespace() && this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) { // for #49589\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    SCSSParser.prototype._tryParsePseudoIdentifier = function () {\n        return this._parseInterpolation() || _super.prototype._tryParsePseudoIdentifier.call(this); // for #49589\n    };\n    SCSSParser.prototype._parseWarnAndDebug = function () {\n        if (!this.peekKeyword('@debug')\n            && !this.peekKeyword('@warn')\n            && !this.peekKeyword('@error')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Debug);\n        this.consumeToken(); // @debug, @warn or @error\n        node.addChild(this._parseExpr()); // optional\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n        if (parseStatement === void 0) { parseStatement = this._parseRuleSetDeclaration.bind(this); }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\n            || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n    };\n    SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n        if (!this.peekKeyword('@if')) {\n            return null;\n        }\n        return this._internalParseIfStatement(parseStatement);\n    };\n    SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"IfStatement\"]);\n        this.consumeToken(); // @if or if\n        if (!node.setExpression(this._parseExpr(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n        }\n        this._parseBody(node, parseStatement);\n        if (this.acceptKeyword('@else')) {\n            if (this.peekIdent('if')) {\n                node.setElseClause(this._internalParseIfStatement(parseStatement));\n            }\n            else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                var elseNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ElseStatement\"]);\n                this._parseBody(elseNode, parseStatement);\n                node.setElseClause(elseNode);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForStatement = function (parseStatement) {\n        if (!this.peekKeyword('@for')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ForStatement\"]);\n        this.consumeToken(); // @for\n        if (!node.setVariable(this._parseVariable())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.acceptIdent('from')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].FromExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].ThroughOrToExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n        if (!this.peekKeyword('@each')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"EachStatement\"]);\n        this.consumeToken(); // @each\n        var variables = node.getVariables();\n        if (!variables.addChild(this._parseVariable())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!variables.addChild(this._parseVariable())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n        }\n        this.finish(variables);\n        if (!this.acceptIdent('in')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].InExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n        if (!this.peekKeyword('@while')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"WhileStatement\"]);\n        this.consumeToken(); // @while\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n        return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug()\n            || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseFunctionDeclaration = function () {\n        if (!this.peekKeyword('@function')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionDeclaration\"]);\n        this.consumeToken(); // @function\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Function]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].LeftParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseReturnStatement = function () {\n        if (!this.peekKeyword('@return')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].ReturnStatement);\n        this.consumeToken(); // @function\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinDeclaration = function () {\n        if (!this.peekKeyword('@mixin')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseParameterDeclaration = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionParameter\"]);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n            // ok\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            if (!node.setDefaultValue(this._parseExpr(true))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinContent = function () {\n        if (!this.peekKeyword('@content')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].MixinContent);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReference = function () {\n        if (!this.peekKeyword('@include')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getArguments().addChild(this._parseFunctionArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            var content = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"BodyDeclaration\"]);\n            this._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n            node.setContent(content);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    SCSSParser.prototype._parseFunctionArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionArgument\"]);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n                if (this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) { // optional\n                    node.setValue(argument);\n                    return this.finish(node);\n                }\n                else {\n                    this.restoreAtMark(pos);\n                }\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseExpr(true))) {\n            this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"]); // #43746\n            node.addChild(this._parsePrio()); // #9859\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_1 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            node_1.addChild(this._parseBinaryExpr());\n            return this.finish(node_1);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseOperation = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n        this.consumeToken();\n        while (node.addChild(this._parseListElement())) {\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma); // optional\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseListElement = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ListEntry\"]);\n        var child = this._parseBinaryExpr();\n        if (!child) {\n            return null;\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            node.setKey(child);\n            if (!node.setValue(this._parseBinaryExpr())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n            }\n        }\n        else {\n            node.setValue(child);\n        }\n        return this.finish(node);\n    };\n    return SCSSParser;\n}(_cssParser_js__WEBPACK_IMPORTED_MODULE_2__[\"Parser\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js ***!
  \***************************************************************************************************************/
/*! exports provided: VariableName, InterpolationFunction, Default, EqualsOperator, NotEqualsOperator, GreaterEqualsOperator, SmallerEqualsOperator, Ellipsis, SCSSScanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableName\", function() { return VariableName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InterpolationFunction\", function() { return InterpolationFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Default\", function() { return Default; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EqualsOperator\", function() { return EqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NotEqualsOperator\", function() { return NotEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GreaterEqualsOperator\", function() { return GreaterEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SmallerEqualsOperator\", function() { return SmallerEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipsis\", function() { return Ellipsis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSScanner\", function() { return SCSSScanner; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _DLR = '$'.charCodeAt(0);\nvar _HSH = '#'.charCodeAt(0);\nvar _CUL = '{'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _BNG = '!'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar customTokenValue = _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CustomToken;\nvar VariableName = customTokenValue++;\nvar InterpolationFunction = customTokenValue++;\nvar Default = customTokenValue++;\nvar EqualsOperator = customTokenValue++;\nvar NotEqualsOperator = customTokenValue++;\nvar GreaterEqualsOperator = customTokenValue++;\nvar SmallerEqualsOperator = customTokenValue++;\nvar Ellipsis = customTokenValue++;\nvar SCSSScanner = /** @class */ (function (_super) {\n    __extends(SCSSScanner, _super);\n    function SCSSScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SCSSScanner.prototype.scanNext = function (offset) {\n        // scss variable\n        if (this.stream.advanceIfChar(_DLR)) {\n            var content = ['$'];\n            if (this.ident(content)) {\n                return this.finishToken(offset, VariableName, content.join(''));\n            }\n            else {\n                this.stream.goBackTo(offset);\n            }\n        }\n        // scss: interpolation function #{..})\n        if (this.stream.advanceIfChars([_HSH, _CUL])) {\n            return this.finishToken(offset, InterpolationFunction);\n        }\n        // operator ==\n        if (this.stream.advanceIfChars([_EQS, _EQS])) {\n            return this.finishToken(offset, EqualsOperator);\n        }\n        // operator !=\n        if (this.stream.advanceIfChars([_BNG, _EQS])) {\n            return this.finishToken(offset, NotEqualsOperator);\n        }\n        // operators <, <=\n        if (this.stream.advanceIfChar(_LAN)) {\n            if (this.stream.advanceIfChar(_EQS)) {\n                return this.finishToken(offset, SmallerEqualsOperator);\n            }\n            return this.finishToken(offset, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim);\n        }\n        // ooperators >, >=\n        if (this.stream.advanceIfChar(_RAN)) {\n            if (this.stream.advanceIfChar(_EQS)) {\n                return this.finishToken(offset, GreaterEqualsOperator);\n            }\n            return this.finishToken(offset, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim);\n        }\n        // ellipis\n        if (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\n            return this.finishToken(offset, Ellipsis);\n        }\n        return _super.prototype.scanNext.call(this, offset);\n    };\n    SCSSScanner.prototype.comment = function () {\n        if (_super.prototype.comment.call(this)) {\n            return true;\n        }\n        if (!this.inURL && this.stream.advanceIfChars([_FSL, _FSL])) {\n            this.stream.advanceWhileChar(function (ch) {\n                switch (ch) {\n                    case _NWL:\n                    case _CAR:\n                    case _LFD:\n                        return false;\n                    default:\n                        return true;\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return SCSSScanner;\n}(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9zY3NzU2Nhbm5lci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvcGFyc2VyL3Njc3NTY2FubmVyLmpzPzM4NWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCB7IFRva2VuVHlwZSwgU2Nhbm5lciB9IGZyb20gJy4vY3NzU2Nhbm5lci5qcyc7XG52YXIgX0ZTTCA9ICcvJy5jaGFyQ29kZUF0KDApO1xudmFyIF9OV0wgPSAnXFxuJy5jaGFyQ29kZUF0KDApO1xudmFyIF9DQVIgPSAnXFxyJy5jaGFyQ29kZUF0KDApO1xudmFyIF9MRkQgPSAnXFxmJy5jaGFyQ29kZUF0KDApO1xudmFyIF9ETFIgPSAnJCcuY2hhckNvZGVBdCgwKTtcbnZhciBfSFNIID0gJyMnLmNoYXJDb2RlQXQoMCk7XG52YXIgX0NVTCA9ICd7Jy5jaGFyQ29kZUF0KDApO1xudmFyIF9FUVMgPSAnPScuY2hhckNvZGVBdCgwKTtcbnZhciBfQk5HID0gJyEnLmNoYXJDb2RlQXQoMCk7XG52YXIgX0xBTiA9ICc8Jy5jaGFyQ29kZUF0KDApO1xudmFyIF9SQU4gPSAnPicuY2hhckNvZGVBdCgwKTtcbnZhciBfRE9UID0gJy4nLmNoYXJDb2RlQXQoMCk7XG52YXIgY3VzdG9tVG9rZW5WYWx1ZSA9IFRva2VuVHlwZS5DdXN0b21Ub2tlbjtcbmV4cG9ydCB2YXIgVmFyaWFibGVOYW1lID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xuZXhwb3J0IHZhciBJbnRlcnBvbGF0aW9uRnVuY3Rpb24gPSBjdXN0b21Ub2tlblZhbHVlKys7XG5leHBvcnQgdmFyIERlZmF1bHQgPSBjdXN0b21Ub2tlblZhbHVlKys7XG5leHBvcnQgdmFyIEVxdWFsc09wZXJhdG9yID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xuZXhwb3J0IHZhciBOb3RFcXVhbHNPcGVyYXRvciA9IGN1c3RvbVRva2VuVmFsdWUrKztcbmV4cG9ydCB2YXIgR3JlYXRlckVxdWFsc09wZXJhdG9yID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xuZXhwb3J0IHZhciBTbWFsbGVyRXF1YWxzT3BlcmF0b3IgPSBjdXN0b21Ub2tlblZhbHVlKys7XG5leHBvcnQgdmFyIEVsbGlwc2lzID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xudmFyIFNDU1NTY2FubmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTQ1NTU2Nhbm5lciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTQ1NTU2Nhbm5lcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBTQ1NTU2Nhbm5lci5wcm90b3R5cGUuc2Nhbk5leHQgPSBmdW5jdGlvbiAob2Zmc2V0KSB7XG4gICAgICAgIC8vIHNjc3MgdmFyaWFibGVcbiAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX0RMUikpIHtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gWyckJ107XG4gICAgICAgICAgICBpZiAodGhpcy5pZGVudChjb250ZW50KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgVmFyaWFibGVOYW1lLCBjb250ZW50LmpvaW4oJycpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtLmdvQmFja1RvKG9mZnNldCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gc2NzczogaW50ZXJwb2xhdGlvbiBmdW5jdGlvbiAjey4ufSlcbiAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfSFNILCBfQ1VMXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgSW50ZXJwb2xhdGlvbkZ1bmN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBvcGVyYXRvciA9PVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcnMoW19FUVMsIF9FUVNdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4ob2Zmc2V0LCBFcXVhbHNPcGVyYXRvcik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb3BlcmF0b3IgIT1cbiAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfQk5HLCBfRVFTXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgTm90RXF1YWxzT3BlcmF0b3IpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG9wZXJhdG9ycyA8LCA8PVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcihfTEFOKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX0VRUykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIFNtYWxsZXJFcXVhbHNPcGVyYXRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIFRva2VuVHlwZS5EZWxpbSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb29wZXJhdG9ycyA+LCA+PVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcihfUkFOKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX0VRUykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIEdyZWF0ZXJFcXVhbHNPcGVyYXRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIFRva2VuVHlwZS5EZWxpbSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZWxsaXBpc1xuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcnMoW19ET1QsIF9ET1QsIF9ET1RdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4ob2Zmc2V0LCBFbGxpcHNpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuc2Nhbk5leHQuY2FsbCh0aGlzLCBvZmZzZXQpO1xuICAgIH07XG4gICAgU0NTU1NjYW5uZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfc3VwZXIucHJvdG90eXBlLmNvbW1lbnQuY2FsbCh0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmluVVJMICYmIHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfRlNMLCBfRlNMXSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyZWFtLmFkdmFuY2VXaGlsZUNoYXIoZnVuY3Rpb24gKGNoKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChjaCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIF9OV0w6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgX0NBUjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBfTEZEOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFNDU1NTY2FubmVyO1xufShTY2FubmVyKSk7XG5leHBvcnQgeyBTQ1NTU2Nhbm5lciB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js ***!
  \********************************************************************************************************************/
/*! exports provided: CSSCodeActions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSCodeActions\", function() { return CSSCodeActions; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _services_lintRules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/lintRules.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar CSSCodeActions = /** @class */ (function () {\n    function CSSCodeActions() {\n    }\n    CSSCodeActions.prototype.doCodeActions = function (document, range, context, stylesheet) {\n        return this.doCodeActions2(document, range, context, stylesheet).map(function (ca) {\n            return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Command\"].create(ca.title, '_css.applyCodeAction', document.uri, document.version, ca.edit.documentChanges[0].edits);\n        });\n    };\n    CSSCodeActions.prototype.doCodeActions2 = function (document, range, context, stylesheet) {\n        var result = [];\n        if (context.diagnostics) {\n            for (var _i = 0, _a = context.diagnostics; _i < _a.length; _i++) {\n                var diagnostic = _a[_i];\n                this.appendFixesForMarker(document, stylesheet, diagnostic, result);\n            }\n        }\n        return result;\n    };\n    CSSCodeActions.prototype.getFixesForUnknownProperty = function (document, property, marker, result) {\n        var propertyName = property.getName();\n        var candidates = [];\n        _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__[\"cssDataManager\"].getProperties().forEach(function (p) {\n            var score = Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"difference\"])(propertyName, p.name);\n            if (score >= propertyName.length / 2 /*score_lim*/) {\n                candidates.push({ property: p.name, score: score });\n            }\n        });\n        // Sort in descending order.\n        candidates.sort(function (a, b) {\n            return b.score - a.score;\n        });\n        var maxActions = 3;\n        for (var _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) {\n            var candidate = candidates_1[_i];\n            var propertyName_1 = candidate.property;\n            var title = localize('css.codeaction.rename', \"Rename to '{0}'\", propertyName_1);\n            var edit = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(marker.range, propertyName_1);\n            var documentIdentifier = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"VersionedTextDocumentIdentifier\"].create(document.uri, document.version);\n            var workspaceEdit = { documentChanges: [_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextDocumentEdit\"].create(documentIdentifier, [edit])] };\n            var codeAction = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CodeAction\"].create(title, workspaceEdit, _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CodeActionKind\"].QuickFix);\n            codeAction.diagnostics = [marker];\n            result.push(codeAction);\n            if (--maxActions <= 0) {\n                return;\n            }\n        }\n    };\n    CSSCodeActions.prototype.appendFixesForMarker = function (document, stylesheet, marker, result) {\n        if (marker.code !== _services_lintRules_js__WEBPACK_IMPORTED_MODULE_3__[\"Rules\"].UnknownProperty.id) {\n            return;\n        }\n        var offset = document.offsetAt(marker.range.start);\n        var end = document.offsetAt(marker.range.end);\n        var nodepath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](stylesheet, offset);\n        for (var i = nodepath.length - 1; i >= 0; i--) {\n            var node = nodepath[i];\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                var property = node.getProperty();\n                if (property && property.offset === offset && property.end === end) {\n                    this.getFixesForUnknownProperty(document, property, marker, result);\n                    return;\n                }\n            }\n        }\n    };\n    return CSSCodeActions;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc0NvZGVBY3Rpb25zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9zZXJ2aWNlcy9jc3NDb2RlQWN0aW9ucy5qcz8yMTZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0ICogYXMgbm9kZXMgZnJvbSAnLi4vcGFyc2VyL2Nzc05vZGVzLmpzJztcbmltcG9ydCAqIGFzIGxhbmd1YWdlRmFjdHMgZnJvbSAnLi4vbGFuZ3VhZ2VGYWN0cy9mYWN0cy5qcyc7XG5pbXBvcnQgeyBkaWZmZXJlbmNlIH0gZnJvbSAnLi4vdXRpbHMvc3RyaW5ncy5qcyc7XG5pbXBvcnQgeyBSdWxlcyB9IGZyb20gJy4uL3NlcnZpY2VzL2xpbnRSdWxlcy5qcyc7XG5pbXBvcnQgeyBDb21tYW5kLCBUZXh0RWRpdCwgQ29kZUFjdGlvbiwgQ29kZUFjdGlvbktpbmQsIFRleHREb2N1bWVudEVkaXQsIFZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXIgfSBmcm9tICcuLi8uLi92c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXMvbWFpbi5qcyc7XG5pbXBvcnQgKiBhcyBubHMgZnJvbSAnLi4vLi4vLi4vZmlsbGVycy92c2NvZGUtbmxzLmpzJztcbnZhciBsb2NhbGl6ZSA9IG5scy5sb2FkTWVzc2FnZUJ1bmRsZSgpO1xudmFyIENTU0NvZGVBY3Rpb25zID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENTU0NvZGVBY3Rpb25zKCkge1xuICAgIH1cbiAgICBDU1NDb2RlQWN0aW9ucy5wcm90b3R5cGUuZG9Db2RlQWN0aW9ucyA9IGZ1bmN0aW9uIChkb2N1bWVudCwgcmFuZ2UsIGNvbnRleHQsIHN0eWxlc2hlZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZG9Db2RlQWN0aW9uczIoZG9jdW1lbnQsIHJhbmdlLCBjb250ZXh0LCBzdHlsZXNoZWV0KS5tYXAoZnVuY3Rpb24gKGNhKSB7XG4gICAgICAgICAgICByZXR1cm4gQ29tbWFuZC5jcmVhdGUoY2EudGl0bGUsICdfY3NzLmFwcGx5Q29kZUFjdGlvbicsIGRvY3VtZW50LnVyaSwgZG9jdW1lbnQudmVyc2lvbiwgY2EuZWRpdC5kb2N1bWVudENoYW5nZXNbMF0uZWRpdHMpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENTU0NvZGVBY3Rpb25zLnByb3RvdHlwZS5kb0NvZGVBY3Rpb25zMiA9IGZ1bmN0aW9uIChkb2N1bWVudCwgcmFuZ2UsIGNvbnRleHQsIHN0eWxlc2hlZXQpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICBpZiAoY29udGV4dC5kaWFnbm9zdGljcykge1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IGNvbnRleHQuZGlhZ25vc3RpY3M7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpYWdub3N0aWMgPSBfYVtfaV07XG4gICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRGaXhlc0Zvck1hcmtlcihkb2N1bWVudCwgc3R5bGVzaGVldCwgZGlhZ25vc3RpYywgcmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgQ1NTQ29kZUFjdGlvbnMucHJvdG90eXBlLmdldEZpeGVzRm9yVW5rbm93blByb3BlcnR5ID0gZnVuY3Rpb24gKGRvY3VtZW50LCBwcm9wZXJ0eSwgbWFya2VyLCByZXN1bHQpIHtcbiAgICAgICAgdmFyIHByb3BlcnR5TmFtZSA9IHByb3BlcnR5LmdldE5hbWUoKTtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZXMgPSBbXTtcbiAgICAgICAgbGFuZ3VhZ2VGYWN0cy5jc3NEYXRhTWFuYWdlci5nZXRQcm9wZXJ0aWVzKCkuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgdmFyIHNjb3JlID0gZGlmZmVyZW5jZShwcm9wZXJ0eU5hbWUsIHAubmFtZSk7XG4gICAgICAgICAgICBpZiAoc2NvcmUgPj0gcHJvcGVydHlOYW1lLmxlbmd0aCAvIDIgLypzY29yZV9saW0qLykge1xuICAgICAgICAgICAgICAgIGNhbmRpZGF0ZXMucHVzaCh7IHByb3BlcnR5OiBwLm5hbWUsIHNjb3JlOiBzY29yZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIFNvcnQgaW4gZGVzY2VuZGluZyBvcmRlci5cbiAgICAgICAgY2FuZGlkYXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYi5zY29yZSAtIGEuc2NvcmU7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgbWF4QWN0aW9ucyA9IDM7XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgY2FuZGlkYXRlc18xID0gY2FuZGlkYXRlczsgX2kgPCBjYW5kaWRhdGVzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgY2FuZGlkYXRlID0gY2FuZGlkYXRlc18xW19pXTtcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0eU5hbWVfMSA9IGNhbmRpZGF0ZS5wcm9wZXJ0eTtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGxvY2FsaXplKCdjc3MuY29kZWFjdGlvbi5yZW5hbWUnLCBcIlJlbmFtZSB0byAnezB9J1wiLCBwcm9wZXJ0eU5hbWVfMSk7XG4gICAgICAgICAgICB2YXIgZWRpdCA9IFRleHRFZGl0LnJlcGxhY2UobWFya2VyLnJhbmdlLCBwcm9wZXJ0eU5hbWVfMSk7XG4gICAgICAgICAgICB2YXIgZG9jdW1lbnRJZGVudGlmaWVyID0gVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllci5jcmVhdGUoZG9jdW1lbnQudXJpLCBkb2N1bWVudC52ZXJzaW9uKTtcbiAgICAgICAgICAgIHZhciB3b3Jrc3BhY2VFZGl0ID0geyBkb2N1bWVudENoYW5nZXM6IFtUZXh0RG9jdW1lbnRFZGl0LmNyZWF0ZShkb2N1bWVudElkZW50aWZpZXIsIFtlZGl0XSldIH07XG4gICAgICAgICAgICB2YXIgY29kZUFjdGlvbiA9IENvZGVBY3Rpb24uY3JlYXRlKHRpdGxlLCB3b3Jrc3BhY2VFZGl0LCBDb2RlQWN0aW9uS2luZC5RdWlja0ZpeCk7XG4gICAgICAgICAgICBjb2RlQWN0aW9uLmRpYWdub3N0aWNzID0gW21hcmtlcl07XG4gICAgICAgICAgICByZXN1bHQucHVzaChjb2RlQWN0aW9uKTtcbiAgICAgICAgICAgIGlmICgtLW1heEFjdGlvbnMgPD0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgQ1NTQ29kZUFjdGlvbnMucHJvdG90eXBlLmFwcGVuZEZpeGVzRm9yTWFya2VyID0gZnVuY3Rpb24gKGRvY3VtZW50LCBzdHlsZXNoZWV0LCBtYXJrZXIsIHJlc3VsdCkge1xuICAgICAgICBpZiAobWFya2VyLmNvZGUgIT09IFJ1bGVzLlVua25vd25Qcm9wZXJ0eS5pZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBvZmZzZXQgPSBkb2N1bWVudC5vZmZzZXRBdChtYXJrZXIucmFuZ2Uuc3RhcnQpO1xuICAgICAgICB2YXIgZW5kID0gZG9jdW1lbnQub2Zmc2V0QXQobWFya2VyLnJhbmdlLmVuZCk7XG4gICAgICAgIHZhciBub2RlcGF0aCA9IG5vZGVzLmdldE5vZGVQYXRoKHN0eWxlc2hlZXQsIG9mZnNldCk7XG4gICAgICAgIGZvciAodmFyIGkgPSBub2RlcGF0aC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgdmFyIG5vZGUgPSBub2RlcGF0aFtpXTtcbiAgICAgICAgICAgIGlmIChub2RlIGluc3RhbmNlb2Ygbm9kZXMuRGVjbGFyYXRpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgcHJvcGVydHkgPSBub2RlLmdldFByb3BlcnR5KCk7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BlcnR5ICYmIHByb3BlcnR5Lm9mZnNldCA9PT0gb2Zmc2V0ICYmIHByb3BlcnR5LmVuZCA9PT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0Rml4ZXNGb3JVbmtub3duUHJvcGVydHkoZG9jdW1lbnQsIHByb3BlcnR5LCBtYXJrZXIsIHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBDU1NDb2RlQWN0aW9ucztcbn0oKSk7XG5leHBvcnQgeyBDU1NDb2RlQWN0aW9ucyB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js ***!
  \*******************************************************************************************************************/
/*! exports provided: CSSCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSCompletion\", function() { return CSSCompletion; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssSymbolScope.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar SnippetFormat = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet;\nvar CSSCompletion = /** @class */ (function () {\n    function CSSCompletion(variablePrefix) {\n        if (variablePrefix === void 0) { variablePrefix = null; }\n        this.completionParticipants = [];\n        this.valueTypes = [\n            _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Value, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].StringLiteral, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].URILiteral, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].NumericValue,\n            _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].VariableName, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Prio\n        ];\n        this.variablePrefix = variablePrefix;\n    }\n    CSSCompletion.prototype.getSymbolContext = function () {\n        if (!this.symbolContext) {\n            this.symbolContext = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"](this.styleSheet);\n        }\n        return this.symbolContext;\n    };\n    CSSCompletion.prototype.setCompletionParticipants = function (registeredCompletionParticipants) {\n        this.completionParticipants = registeredCompletionParticipants || [];\n    };\n    CSSCompletion.prototype.doComplete = function (document, position, styleSheet) {\n        this.offset = document.offsetAt(position);\n        this.position = position;\n        this.currentWord = getCurrentWord(document, this.offset);\n        this.defaultReplaceRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Position\"].create(this.position.line, this.position.character - this.currentWord.length), this.position);\n        this.textDocument = document;\n        this.styleSheet = styleSheet;\n        try {\n            var result = { isIncomplete: false, items: [] };\n            this.nodePath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](this.styleSheet, this.offset);\n            for (var i = this.nodePath.length - 1; i >= 0; i--) {\n                var node = this.nodePath[i];\n                if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Property\"]) {\n                    this.getCompletionsForDeclarationProperty(node.getParent(), result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Expression\"]) {\n                    if (node.parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Interpolation\"]) {\n                        this.getVariableProposals(null, result);\n                    }\n                    else {\n                        this.getCompletionsForExpression(node, result);\n                    }\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                    var parentRef = node.findAParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset);\n                    if (parentRef) {\n                        if (parentRef.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference) {\n                            this.getCompletionsForExtendsReference(parentRef, node, result);\n                        }\n                        else {\n                            var parentRuleSet = parentRef;\n                            this.getCompletionsForSelector(parentRuleSet, parentRuleSet && parentRuleSet.isNested(), result);\n                        }\n                    }\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"]) {\n                    this.getCompletionsForFunctionArgument(node, node.getParent(), result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declarations\"]) {\n                    this.getCompletionsForDeclarations(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableDeclaration\"]) {\n                    this.getCompletionsForVariableDeclaration(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n                    this.getCompletionsForRuleSet(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Interpolation\"]) {\n                    this.getCompletionsForInterpolation(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                    this.getCompletionsForFunctionDeclaration(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinReference\"]) {\n                    this.getCompletionsForMixinReference(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"]) {\n                    this.getCompletionsForFunctionArgument(null, node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Supports\"]) {\n                    this.getCompletionsForSupports(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                    this.getCompletionsForSupportsCondition(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ExtendsReference\"]) {\n                    this.getCompletionsForExtendsReference(node, null, result);\n                }\n                else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].URILiteral) {\n                    this.getCompletionForUriLiteralValue(node, result);\n                }\n                else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].StringLiteral && node.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Import) {\n                    this.getCompletionForImportPath(node, result);\n                }\n                else if (node.parent === null) {\n                    this.getCompletionForTopLevel(result);\n                    // } else if (node instanceof nodes.Variable) {\n                    // this.getCompletionsForVariableDeclaration()\n                }\n                else {\n                    continue;\n                }\n                if (result.items.length > 0 || this.offset > node.offset) {\n                    return this.finalize(result);\n                }\n            }\n            this.getCompletionsForStylesheet(result);\n            if (result.items.length === 0) {\n                if (this.variablePrefix && this.currentWord.indexOf(this.variablePrefix) === 0) {\n                    this.getVariableProposals(null, result);\n                }\n            }\n            return this.finalize(result);\n        }\n        finally {\n            // don't hold on any state, clear symbolContext\n            this.position = null;\n            this.currentWord = null;\n            this.textDocument = null;\n            this.styleSheet = null;\n            this.symbolContext = null;\n            this.defaultReplaceRange = null;\n            this.nodePath = null;\n        }\n    };\n    CSSCompletion.prototype.finalize = function (result) {\n        var needsSortText = result.items.some(function (i) { return !!i.sortText; });\n        if (needsSortText) {\n            for (var _i = 0, _a = result.items; _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (!i.sortText) {\n                    i.sortText = 'd';\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.findInNodePath = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        for (var i = this.nodePath.length - 1; i >= 0; i--) {\n            var node = this.nodePath[i];\n            if (types.indexOf(node.type) !== -1) {\n                return node;\n            }\n        }\n        return null;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        return this.getPropertyProposals(declaration, result);\n    };\n    CSSCompletion.prototype.getPropertyProposals = function (declaration, result) {\n        var _this = this;\n        var properties = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssDataManager\"].getProperties();\n        properties.forEach(function (entry) {\n            var range;\n            var insertText;\n            var retrigger = false;\n            if (declaration) {\n                range = _this.getCompletionRange(declaration.getProperty());\n                insertText = entry.name;\n                if (!isDefined(declaration.colonPosition)) {\n                    insertText += ': ';\n                    retrigger = true;\n                }\n            }\n            else {\n                range = _this.getCompletionRange(null);\n                insertText = entry.name + ': ';\n                retrigger = true;\n            }\n            var item = {\n                label: entry.name,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(range, insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property\n            };\n            if (!entry.restrictions) {\n                retrigger = false;\n            }\n            if (retrigger) {\n                item.command = {\n                    title: 'Suggest',\n                    command: 'editor.action.triggerSuggest'\n                };\n            }\n            if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, '-')) {\n                item.sortText = 'x';\n            }\n            result.items.push(item);\n        });\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssProperty) {\n                participant.onCssProperty({\n                    propertyName: _this.currentWord,\n                    range: _this.defaultReplaceRange\n                });\n            }\n        });\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarationValue = function (node, result) {\n        var _this = this;\n        var propertyName = node.getFullPropertyName();\n        var entry = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssDataManager\"].getProperty(propertyName);\n        var existingNode = node.getValue();\n        while (existingNode && existingNode.hasChildren()) {\n            existingNode = existingNode.findChildAtOffset(this.offset, false);\n        }\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssPropertyValue) {\n                participant.onCssPropertyValue({\n                    propertyName: propertyName,\n                    propertyValue: _this.currentWord,\n                    range: _this.getCompletionRange(existingNode)\n                });\n            }\n        });\n        if (entry) {\n            if (entry.restrictions) {\n                for (var _i = 0, _a = entry.restrictions; _i < _a.length; _i++) {\n                    var restriction = _a[_i];\n                    switch (restriction) {\n                        case 'color':\n                            this.getColorProposals(entry, existingNode, result);\n                            break;\n                        case 'position':\n                            this.getPositionProposals(entry, existingNode, result);\n                            break;\n                        case 'repeat':\n                            this.getRepeatStyleProposals(entry, existingNode, result);\n                            break;\n                        case 'line-style':\n                            this.getLineStyleProposals(entry, existingNode, result);\n                            break;\n                        case 'line-width':\n                            this.getLineWidthProposals(entry, existingNode, result);\n                            break;\n                        case 'geometry-box':\n                            this.getGeometryBoxProposals(entry, existingNode, result);\n                            break;\n                        case 'box':\n                            this.getBoxProposals(entry, existingNode, result);\n                            break;\n                        case 'image':\n                            this.getImageProposals(entry, existingNode, result);\n                            break;\n                        case 'timing-function':\n                            this.getTimingFunctionProposals(entry, existingNode, result);\n                            break;\n                        case 'shape':\n                            this.getBasicShapeProposals(entry, existingNode, result);\n                            break;\n                    }\n                }\n            }\n            this.getValueEnumProposals(entry, existingNode, result);\n            this.getCSSWideKeywordProposals(entry, existingNode, result);\n            this.getUnitProposals(entry, existingNode, result);\n        }\n        else {\n            var existingValues = collectValues(this.styleSheet, node);\n            for (var _b = 0, _c = existingValues.getEntries(); _b < _c.length; _b++) {\n                var existingValue = _c[_b];\n                result.items.push({\n                    label: existingValue,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), existingValue),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n                });\n            }\n        }\n        this.getVariableProposals(existingNode, result);\n        this.getTermProposals(entry, existingNode, result);\n        return result;\n    };\n    CSSCompletion.prototype.getValueEnumProposals = function (entry, existingNode, result) {\n        if (entry.values) {\n            for (var _i = 0, _a = entry.values; _i < _a.length; _i++) {\n                var value = _a[_i];\n                if (_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"supportedInMoreThanOneBrowser\"](value)) {\n                    var insertString = value.name;\n                    var insertTextFormat = void 0;\n                    if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"endsWith\"](insertString, ')')) {\n                        var from = insertString.lastIndexOf('(');\n                        if (from !== -1) {\n                            insertString = insertString.substr(0, from) + '($1)';\n                            insertTextFormat = SnippetFormat;\n                        }\n                    }\n                    var item = {\n                        label: value.name,\n                        documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](value),\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertString),\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value,\n                        insertTextFormat: insertTextFormat\n                    };\n                    result.items.push(item);\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCSSWideKeywordProposals = function (entry, existingNode, result) {\n        for (var keywords in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"]) {\n            result.items.push({\n                label: keywords,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"][keywords],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), keywords),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForInterpolation = function (node, result) {\n        if (this.offset >= node.offset + 2) {\n            this.getVariableProposals(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getVariableProposals = function (existingNode, result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var insertText = _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](symbol.name, '--') ? \"var(\" + symbol.name + \")\" : symbol.name;\n            var suggest = {\n                label: symbol.name,\n                documentation: symbol.value ? _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"getLimitedString\"](symbol.value) : symbol.value,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Variable,\n                sortText: 'z'\n            };\n            if (symbol.node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter) {\n                var mixinNode = (symbol.node.getParent());\n                if (mixinNode.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration) {\n                    suggest.detail = localize('completion.argument', 'argument from \\'{0}\\'', mixinNode.getName());\n                }\n            }\n            result.items.push(suggest);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getVariableProposalsForCSSVarFunction = function (result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        symbols = symbols.filter(function (symbol) {\n            return _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](symbol.name, '--');\n        });\n        for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.items.push({\n                label: symbol.name,\n                documentation: symbol.value ? _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"getLimitedString\"](symbol.value) : symbol.value,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(null), symbol.name),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Variable\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getUnitProposals = function (entry, existingNode, result) {\n        var currentWord = '0';\n        if (this.currentWord.length > 0) {\n            var numMatch = this.currentWord.match(/^-?\\d[\\.\\d+]*/);\n            if (numMatch) {\n                currentWord = numMatch[0];\n                result.isIncomplete = currentWord.length === this.currentWord.length;\n            }\n        }\n        else if (this.currentWord.length === 0) {\n            result.isIncomplete = true;\n        }\n        if (existingNode && existingNode.parent && existingNode.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            existingNode = existingNode.getParent(); // include the unary operator\n        }\n        if (entry.restrictions) {\n            for (var _i = 0, _a = entry.restrictions; _i < _a.length; _i++) {\n                var restriction = _a[_i];\n                var units = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"units\"][restriction];\n                if (units) {\n                    for (var _b = 0, units_1 = units; _b < units_1.length; _b++) {\n                        var unit = units_1[_b];\n                        var insertText = currentWord + unit;\n                        result.items.push({\n                            label: insertText,\n                            textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Unit\n                        });\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionRange = function (existingNode) {\n        if (existingNode && existingNode.offset <= this.offset) {\n            var end = existingNode.end !== -1 ? this.textDocument.positionAt(existingNode.end) : this.position;\n            return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(this.textDocument.positionAt(existingNode.offset), end);\n        }\n        return this.defaultReplaceRange;\n    };\n    CSSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        for (var color in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"]) {\n            result.items.push({\n                label: color,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"][color],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color\n            });\n        }\n        for (var color in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorKeywords\"]) {\n            result.items.push({\n                label: color,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorKeywords\"][color],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        var colorValues = new Set();\n        this.styleSheet.acceptVisitor(new ColorValueCollector(colorValues, this.offset));\n        for (var _i = 0, _a = colorValues.getEntries(); _i < _a.length; _i++) {\n            var color = _a[_i];\n            result.items.push({\n                label: color,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color\n            });\n        }\n        var _loop_1 = function (p) {\n            var tabStop = 1;\n            var replaceFunction = function (match, p1) { return '${' + tabStop++ + ':' + p1 + '}'; };\n            var insertText = p.func.replace(/\\[?\\$(\\w+)\\]?/g, replaceFunction);\n            result.items.push({\n                label: p.func.substr(0, p.func.indexOf('(')),\n                detail: p.func,\n                documentation: p.desc,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this_1.getCompletionRange(existingNode), insertText),\n                insertTextFormat: SnippetFormat,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function\n            });\n        };\n        var this_1 = this;\n        for (var _b = 0, _c = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorFunctions\"]; _b < _c.length; _b++) {\n            var p = _c[_b];\n            _loop_1(p);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getPositionProposals = function (entry, existingNode, result) {\n        for (var position in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"]) {\n            result.items.push({\n                label: position,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"][position],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), position),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getRepeatStyleProposals = function (entry, existingNode, result) {\n        for (var repeat in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"]) {\n            result.items.push({\n                label: repeat,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"][repeat],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), repeat),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getLineStyleProposals = function (entry, existingNode, result) {\n        for (var lineStyle in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"]) {\n            result.items.push({\n                label: lineStyle,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"][lineStyle],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), lineStyle),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getLineWidthProposals = function (entry, existingNode, result) {\n        for (var _i = 0, _a = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineWidthKeywords\"]; _i < _a.length; _i++) {\n            var lineWidth = _a[_i];\n            result.items.push({\n                label: lineWidth,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), lineWidth),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getGeometryBoxProposals = function (entry, existingNode, result) {\n        for (var box in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"]) {\n            result.items.push({\n                label: box,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"][box],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), box),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getBoxProposals = function (entry, existingNode, result) {\n        for (var box in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"]) {\n            result.items.push({\n                label: box,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"][box],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), box),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getImageProposals = function (entry, existingNode, result) {\n        for (var image in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(image);\n            result.items.push({\n                label: image,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"][image],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: image !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getTimingFunctionProposals = function (entry, existingNode, result) {\n        for (var timing in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(timing);\n            result.items.push({\n                label: timing,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"][timing],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: timing !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getBasicShapeProposals = function (entry, existingNode, result) {\n        for (var shape in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(shape);\n            result.items.push({\n                label: shape,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"][shape],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: shape !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForStylesheet = function (result) {\n        var node = this.styleSheet.findFirstChildBeforeOffset(this.offset);\n        if (!node) {\n            return this.getCompletionForTopLevel(result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n            return this.getCompletionsForRuleSet(node, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Supports\"]) {\n            return this.getCompletionsForSupports(node, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForTopLevel = function (result) {\n        var _this = this;\n        _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssDataManager\"].getAtDirectives().forEach(function (entry) {\n            result.items.push({\n                label: entry.name,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(null), entry.name),\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n            });\n        });\n        this.getCompletionsForSelector(null, false, result);\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForRuleSet = function (ruleSet, result) {\n        var declarations = ruleSet.getDeclarations();\n        var isAfter = declarations && declarations.endsWith('}') && this.offset >= declarations.end;\n        if (isAfter) {\n            return this.getCompletionForTopLevel(result);\n        }\n        var isInSelectors = !declarations || this.offset <= declarations.offset;\n        if (isInSelectors) {\n            return this.getCompletionsForSelector(ruleSet, ruleSet.isNested(), result);\n        }\n        return this.getCompletionsForDeclarations(ruleSet.getDeclarations(), result);\n    };\n    CSSCompletion.prototype.getCompletionsForSelector = function (ruleSet, isNested, result) {\n        var _this = this;\n        var existingNode = this.findInNodePath(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector);\n        if (!existingNode && this.offset - this.currentWord.length > 0 && this.textDocument.getText()[this.offset - this.currentWord.length - 1] === ':') {\n            // after the ':' of a pseudo selector, no node generated for just ':'\n            this.currentWord = ':' + this.currentWord;\n            this.defaultReplaceRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Position\"].create(this.position.line, this.position.character - this.currentWord.length), this.position);\n        }\n        var pseudoClasses = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssDataManager\"].getPseudoClasses();\n        pseudoClasses.forEach(function (entry) {\n            var insertText = moveCursorInsideParenthesis(entry.name);\n            var item = {\n                label: entry.name,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), insertText),\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: entry.name !== insertText ? SnippetFormat : void 0\n            };\n            if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, ':-')) {\n                item.sortText = 'x';\n            }\n            result.items.push(item);\n        });\n        var pseudoElements = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssDataManager\"].getPseudoElements();\n        pseudoElements.forEach(function (entry) {\n            var insertText = moveCursorInsideParenthesis(entry.name);\n            var item = {\n                label: entry.name,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), insertText),\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: entry.name !== insertText ? SnippetFormat : void 0\n            };\n            if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, '::-')) {\n                item.sortText = 'x';\n            }\n            result.items.push(item);\n        });\n        if (!isNested) { // show html tags only for top level\n            for (var _i = 0, _a = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"html5Tags\"]; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                result.items.push({\n                    label: entry,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n            for (var _b = 0, _c = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"svgElements\"]; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                result.items.push({\n                    label: entry,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n        }\n        var visited = {};\n        visited[this.currentWord] = true;\n        var textProvider = this.styleSheet.getTextProvider();\n        this.styleSheet.accept(function (n) {\n            if (n.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SimpleSelector && n.length > 0) {\n                var selector = textProvider(n.offset, n.length);\n                if (selector.charAt(0) === '.' && !visited[selector]) {\n                    visited[selector] = true;\n                    result.items.push({\n                        label: selector,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), selector),\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                    });\n                }\n                return false;\n            }\n            return true;\n        });\n        if (ruleSet && ruleSet.isNested()) {\n            var selector = ruleSet.getSelectors().findFirstChildBeforeOffset(this.offset);\n            if (selector && ruleSet.getSelectors().getChildren().indexOf(selector) === 0) {\n                this.getPropertyProposals(null, result);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarations = function (declarations, result) {\n        if (!declarations || this.offset === declarations.offset) { // incomplete nodes\n            return result;\n        }\n        var node = declarations.findFirstChildBeforeOffset(this.offset);\n        if (!node) {\n            return this.getCompletionsForDeclarationProperty(null, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"AbstractDeclaration\"]) {\n            var declaration = node;\n            if (!isDefined(declaration.colonPosition) || this.offset <= declaration.colonPosition) {\n                // complete property\n                return this.getCompletionsForDeclarationProperty(declaration, result);\n            }\n            else if ((isDefined(declaration.semicolonPosition) && declaration.semicolonPosition < this.offset)) {\n                if (this.offset === declaration.semicolonPosition + 1) {\n                    return result; // don't show new properties right after semicolon (see Bug 15421:[intellisense] [css] Be less aggressive when manually typing CSS)\n                }\n                // complete next property\n                return this.getCompletionsForDeclarationProperty(null, result);\n            }\n            if (declaration instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                // complete value\n                return this.getCompletionsForDeclarationValue(declaration, result);\n            }\n        }\n        else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ExtendsReference\"]) {\n            this.getCompletionsForExtendsReference(node, null, result);\n        }\n        else if (this.currentWord && this.currentWord[0] === '@') {\n            this.getCompletionsForDeclarationProperty(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForVariableDeclaration = function (declaration, result) {\n        if (this.offset > declaration.colonPosition) {\n            this.getVariableProposals(declaration.getValue(), result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForExpression = function (expression, result) {\n        if (expression.getParent() instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"]) {\n            this.getCompletionsForFunctionArgument(expression.getParent(), expression.getParent().getParent(), result);\n            return result;\n        }\n        var declaration = expression.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declaration);\n        if (!declaration) {\n            this.getTermProposals(null, null, result);\n            return result;\n        }\n        var node = expression.findChildAtOffset(this.offset, true);\n        if (!node) {\n            return this.getCompletionsForDeclarationValue(declaration, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NumericValue\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n            return this.getCompletionsForDeclarationValue(declaration, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForFunctionArgument = function (arg, func, result) {\n        if (func.getIdentifier().getText() === 'var') {\n            if (!func.getArguments().hasChildren() || func.getArguments().getChild(0) === arg) {\n                this.getVariableProposalsForCSSVarFunction(result);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForFunctionDeclaration = function (decl, result) {\n        var declarations = decl.getDeclarations();\n        if (declarations && this.offset > declarations.offset && this.offset < declarations.end) {\n            this.getTermProposals(null, null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForMixinReference = function (ref, result) {\n        var allMixins = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Mixin);\n        for (var _i = 0, allMixins_1 = allMixins; _i < allMixins_1.length; _i++) {\n            var mixinSymbol = allMixins_1[_i];\n            if (mixinSymbol.node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinDeclaration\"]) {\n                result.items.push(this.makeTermProposal(mixinSymbol, mixinSymbol.node.getParameters(), null));\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var allFunctions = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function);\n        for (var _i = 0, allFunctions_1 = allFunctions; _i < allFunctions_1.length; _i++) {\n            var functionSymbol = allFunctions_1[_i];\n            if (functionSymbol.node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                result.items.push(this.makeTermProposal(functionSymbol, functionSymbol.node.getParameters(), existingNode));\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.makeTermProposal = function (symbol, parameters, existingNode) {\n        var decl = symbol.node;\n        var params = parameters.getChildren().map(function (c) {\n            return (c instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionParameter\"]) ? c.getName() : c.getText();\n        });\n        var insertText = symbol.name + '(' + params.map(function (p, index) { return '${' + (index + 1) + ':' + p + '}'; }).join(', ') + ')';\n        return {\n            label: symbol.name,\n            detail: symbol.name + '(' + params.join(', ') + ')',\n            textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n            insertTextFormat: SnippetFormat,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n            sortText: 'z'\n        };\n    };\n    CSSCompletion.prototype.getCompletionsForSupportsCondition = function (supportsCondition, result) {\n        var child = supportsCondition.findFirstChildBeforeOffset(this.offset);\n        if (child) {\n            if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                if (!isDefined(child.colonPosition || this.offset <= child.colonPosition)) {\n                    return this.getCompletionsForDeclarationProperty(child, result);\n                }\n                else {\n                    return this.getCompletionsForDeclarationValue(child, result);\n                }\n            }\n            else if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                return this.getCompletionsForSupportsCondition(child, result);\n            }\n        }\n        if (isDefined(supportsCondition.lParent) && this.offset > supportsCondition.lParent && (!isDefined(supportsCondition.rParent) || this.offset <= supportsCondition.rParent)) {\n            return this.getCompletionsForDeclarationProperty(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForSupports = function (supports, result) {\n        var declarations = supports.getDeclarations();\n        var inInCondition = !declarations || this.offset <= declarations.offset;\n        if (inInCondition) {\n            var child = supports.findFirstChildBeforeOffset(this.offset);\n            if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                return this.getCompletionsForSupportsCondition(child, result);\n            }\n            return result;\n        }\n        return this.getCompletionForTopLevel(result);\n    };\n    CSSCompletion.prototype.getCompletionsForExtendsReference = function (extendsRef, existingNode, result) {\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForUriLiteralValue = function (uriLiteralNode, result) {\n        var uriValue;\n        var position;\n        var range;\n        // No children, empty value\n        if (uriLiteralNode.getChildren().length === 0) {\n            uriValue = '';\n            position = this.position;\n            var emptyURIValuePosition = this.textDocument.positionAt(uriLiteralNode.offset + 'url('.length);\n            range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(emptyURIValuePosition, emptyURIValuePosition);\n        }\n        else {\n            var uriValueNode = uriLiteralNode.getChild(0);\n            uriValue = uriValueNode.getText();\n            position = this.position;\n            range = this.getCompletionRange(uriValueNode);\n        }\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssURILiteralValue) {\n                participant.onCssURILiteralValue({\n                    uriValue: uriValue,\n                    position: position,\n                    range: range\n                });\n            }\n        });\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForImportPath = function (importPathNode, result) {\n        var _this = this;\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssImportPath) {\n                participant.onCssImportPath({\n                    pathValue: importPathNode.getText(),\n                    position: _this.position,\n                    range: _this.getCompletionRange(importPathNode)\n                });\n            }\n        });\n        return result;\n    };\n    return CSSCompletion;\n}());\n\nvar Set = /** @class */ (function () {\n    function Set() {\n        this.entries = {};\n    }\n    Set.prototype.add = function (entry) {\n        this.entries[entry] = true;\n    };\n    Set.prototype.getEntries = function () {\n        return Object.keys(this.entries);\n    };\n    return Set;\n}());\nfunction moveCursorInsideParenthesis(text) {\n    return text.replace(/\\(\\)$/, \"($1)\");\n}\nfunction collectValues(styleSheet, declaration) {\n    var fullPropertyName = declaration.getFullPropertyName();\n    var entries = new Set();\n    function visitValue(node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NumericValue\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"HexColorValue\"]) {\n            entries.add(node.getText());\n        }\n        return true;\n    }\n    function matchesProperty(decl) {\n        var propertyName = decl.getFullPropertyName();\n        return fullPropertyName === propertyName;\n    }\n    function vistNode(node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"] && node !== declaration) {\n            if (matchesProperty(node)) {\n                var value = node.getValue();\n                if (value) {\n                    value.accept(visitValue);\n                }\n            }\n        }\n        return true;\n    }\n    styleSheet.accept(vistNode);\n    return entries;\n}\nvar ColorValueCollector = /** @class */ (function () {\n    function ColorValueCollector(entries, currentOffset) {\n        this.entries = entries;\n        this.currentOffset = currentOffset;\n        // nothing to do\n    }\n    ColorValueCollector.prototype.visitNode = function (node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"HexColorValue\"] || (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"] && _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"isColorConstructor\"](node))) {\n            if (this.currentOffset < node.offset || node.end < this.currentOffset) {\n                this.entries.add(node.getText());\n            }\n        }\n        return true;\n    };\n    return ColorValueCollector;\n}());\nfunction isDefined(obj) {\n    return typeof obj !== 'undefined';\n}\nfunction getCurrentWord(document, offset) {\n    var i = offset - 1;\n    var text = document.getText();\n    while (i >= 0 && ' \\t\\n\\r\":{[()]},*>+'.indexOf(text.charAt(i)) === -1) {\n        i--;\n    }\n    return text.substring(i + 1, offset);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js ***!
  \****************************************************************************************************************/
/*! exports provided: getFoldingRanges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFoldingRanges\", function() { return getFoldingRanges; });\n/* harmony import */ var _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _parser_scssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/scssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\");\n/* harmony import */ var _parser_lessScanner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/lessScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction getFoldingRanges(document, context) {\n    var ranges = computeFoldingRanges(document);\n    return limitFoldingRanges(ranges, context);\n}\nfunction computeFoldingRanges(document) {\n    function getStartLine(t) {\n        return document.positionAt(t.offset).line;\n    }\n    function getEndLine(t) {\n        return document.positionAt(t.offset + t.len).line;\n    }\n    function getScanner() {\n        switch (document.languageId) {\n            case 'scss':\n                return new _parser_scssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"SCSSScanner\"]();\n            case 'less':\n                return new _parser_lessScanner_js__WEBPACK_IMPORTED_MODULE_2__[\"LESSScanner\"]();\n            default:\n                return new _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]();\n        }\n    }\n    function tokenToRange(t, kind) {\n        var startLine = getStartLine(t);\n        var endLine = getEndLine(t);\n        if (startLine !== endLine) {\n            return {\n                startLine: startLine,\n                endLine: endLine,\n                kind: kind\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    var ranges = [];\n    var delimiterStack = [];\n    var scanner = getScanner();\n    scanner.ignoreComment = false;\n    scanner.setSource(document.getText());\n    var token = scanner.scan();\n    var prevToken;\n    var _loop_1 = function () {\n        switch (token.type) {\n            case _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n            case _parser_scssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"InterpolationFunction\"]:\n                {\n                    delimiterStack.push({ line: getStartLine(token), type: 'brace', isStart: true });\n                    break;\n                }\n            case _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR: {\n                if (delimiterStack.length !== 0) {\n                    var prevDelimiter = popPrevStartDelimiterOfType(delimiterStack, 'brace');\n                    if (!prevDelimiter) {\n                        break;\n                    }\n                    var endLine = getEndLine(token);\n                    if (prevDelimiter.type === 'brace') {\n                        /**\n                         * Other than the case when curly brace is not on a new line by itself, for example\n                         * .foo {\n                         *   color: red; }\n                         * Use endLine minus one to show ending curly brace\n                         */\n                        if (getEndLine(prevToken) !== endLine) {\n                            endLine--;\n                        }\n                        if (prevDelimiter.line !== endLine) {\n                            ranges.push({\n                                startLine: prevDelimiter.line,\n                                endLine: endLine,\n                                kind: undefined\n                            });\n                        }\n                    }\n                }\n                break;\n            }\n            /**\n             * In CSS, there is no single line comment prefixed with //\n             * All comments are marked as `Comment`\n             */\n            case _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comment: {\n                var commentRegionMarkerToDelimiter_1 = function (marker) {\n                    if (marker === '#region') {\n                        return { line: getStartLine(token), type: 'comment', isStart: true };\n                    }\n                    else {\n                        return { line: getEndLine(token), type: 'comment', isStart: false };\n                    }\n                };\n                var getCurrDelimiter = function (token) {\n                    var matches = token.text.match(/^\\s*\\/\\*\\s*(#region|#endregion)\\b\\s*(.*?)\\s*\\*\\//);\n                    if (matches) {\n                        return commentRegionMarkerToDelimiter_1(matches[1]);\n                    }\n                    else if (document.languageId === 'scss' || document.languageId === 'less') {\n                        var matches_1 = token.text.match(/^\\s*\\/\\/\\s*(#region|#endregion)\\b\\s*(.*?)\\s*/);\n                        if (matches_1) {\n                            return commentRegionMarkerToDelimiter_1(matches_1[1]);\n                        }\n                    }\n                    return null;\n                };\n                var currDelimiter = getCurrDelimiter(token);\n                // /* */ comment region folding\n                // All #region and #endregion cases\n                if (currDelimiter) {\n                    if (currDelimiter.isStart) {\n                        delimiterStack.push(currDelimiter);\n                    }\n                    else {\n                        var prevDelimiter = popPrevStartDelimiterOfType(delimiterStack, 'comment');\n                        if (!prevDelimiter) {\n                            break;\n                        }\n                        if (prevDelimiter.type === 'comment') {\n                            if (prevDelimiter.line !== currDelimiter.line) {\n                                ranges.push({\n                                    startLine: prevDelimiter.line,\n                                    endLine: currDelimiter.line,\n                                    kind: 'region'\n                                });\n                            }\n                        }\n                    }\n                }\n                // Multiline comment case\n                else {\n                    var range = tokenToRange(token, 'comment');\n                    if (range) {\n                        ranges.push(range);\n                    }\n                }\n                break;\n            }\n        }\n        prevToken = token;\n        token = scanner.scan();\n    };\n    while (token.type !== _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) {\n        _loop_1();\n    }\n    return ranges;\n}\nfunction popPrevStartDelimiterOfType(stack, type) {\n    if (stack.length === 0) {\n        return null;\n    }\n    for (var i = stack.length - 1; i >= 0; i--) {\n        if (stack[i].type === type && stack[i].isStart) {\n            return stack.splice(i, 1)[0];\n        }\n    }\n    return null;\n}\n/**\n * - Sort regions\n * - Remove invalid regions (intersections)\n * - If limit exceeds, only return `rangeLimit` amount of ranges\n */\nfunction limitFoldingRanges(ranges, context) {\n    var maxRanges = context && context.rangeLimit || Number.MAX_VALUE;\n    var sortedRanges = ranges.sort(function (r1, r2) {\n        var diff = r1.startLine - r2.startLine;\n        if (diff === 0) {\n            diff = r1.endLine - r2.endLine;\n        }\n        return diff;\n    });\n    var validRanges = [];\n    var prevEndLine = -1;\n    sortedRanges.forEach(function (r) {\n        if (!(r.startLine < prevEndLine && prevEndLine < r.endLine)) {\n            validRanges.push(r);\n            prevEndLine = r.endLine;\n        }\n    });\n    if (validRanges.length < maxRanges) {\n        return validRanges;\n    }\n    else {\n        return validRanges.slice(0, maxRanges);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js ***!
  \**************************************************************************************************************/
/*! exports provided: CSSHover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSHover\", function() { return CSSHover; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _selectorPrinting_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selectorPrinting.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar CSSHover = /** @class */ (function () {\n    function CSSHover() {\n    }\n    CSSHover.prototype.doHover = function (document, position, stylesheet) {\n        function getRange(node) {\n            return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.end));\n        }\n        var offset = document.offsetAt(position);\n        var nodepath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](stylesheet, offset);\n        for (var i = 0; i < nodepath.length; i++) {\n            var node = nodepath[i];\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                return {\n                    contents: Object(_selectorPrinting_js__WEBPACK_IMPORTED_MODULE_3__[\"selectorToMarkedString\"])(node),\n                    range: getRange(node)\n                };\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                return {\n                    contents: Object(_selectorPrinting_js__WEBPACK_IMPORTED_MODULE_3__[\"simpleSelectorToMarkedString\"])(node),\n                    range: getRange(node)\n                };\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                var propertyName = node.getFullPropertyName();\n                var entry = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__[\"cssDataManager\"].getProperty(propertyName);\n                if (entry) {\n                    var contents = [];\n                    if (entry.description) {\n                        contents.push(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"MarkedString\"].fromPlainText(entry.description));\n                    }\n                    var browserLabel = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__[\"getBrowserLabel\"](entry.browsers);\n                    if (browserLabel) {\n                        contents.push(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"MarkedString\"].fromPlainText(browserLabel));\n                    }\n                    if (contents.length) {\n                        return {\n                            contents: contents,\n                            range: getRange(node)\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    return CSSHover;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc0hvdmVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9zZXJ2aWNlcy9jc3NIb3Zlci5qcz9mOGRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0ICogYXMgbm9kZXMgZnJvbSAnLi4vcGFyc2VyL2Nzc05vZGVzLmpzJztcbmltcG9ydCAqIGFzIGxhbmd1YWdlRmFjdHMgZnJvbSAnLi4vbGFuZ3VhZ2VGYWN0cy9mYWN0cy5qcyc7XG5pbXBvcnQgeyBSYW5nZSwgTWFya2VkU3RyaW5nIH0gZnJvbSAnLi4vLi4vdnNjb2RlLWxhbmd1YWdlc2VydmVyLXR5cGVzL21haW4uanMnO1xuaW1wb3J0IHsgc2VsZWN0b3JUb01hcmtlZFN0cmluZywgc2ltcGxlU2VsZWN0b3JUb01hcmtlZFN0cmluZyB9IGZyb20gJy4vc2VsZWN0b3JQcmludGluZy5qcyc7XG52YXIgQ1NTSG92ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ1NTSG92ZXIoKSB7XG4gICAgfVxuICAgIENTU0hvdmVyLnByb3RvdHlwZS5kb0hvdmVyID0gZnVuY3Rpb24gKGRvY3VtZW50LCBwb3NpdGlvbiwgc3R5bGVzaGVldCkge1xuICAgICAgICBmdW5jdGlvbiBnZXRSYW5nZShub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gUmFuZ2UuY3JlYXRlKGRvY3VtZW50LnBvc2l0aW9uQXQobm9kZS5vZmZzZXQpLCBkb2N1bWVudC5wb3NpdGlvbkF0KG5vZGUuZW5kKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG9mZnNldCA9IGRvY3VtZW50Lm9mZnNldEF0KHBvc2l0aW9uKTtcbiAgICAgICAgdmFyIG5vZGVwYXRoID0gbm9kZXMuZ2V0Tm9kZVBhdGgoc3R5bGVzaGVldCwgb2Zmc2V0KTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2RlcGF0aC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIG5vZGUgPSBub2RlcGF0aFtpXTtcbiAgICAgICAgICAgIGlmIChub2RlIGluc3RhbmNlb2Ygbm9kZXMuU2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50czogc2VsZWN0b3JUb01hcmtlZFN0cmluZyhub2RlKSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2U6IGdldFJhbmdlKG5vZGUpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChub2RlIGluc3RhbmNlb2Ygbm9kZXMuU2ltcGxlU2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50czogc2ltcGxlU2VsZWN0b3JUb01hcmtlZFN0cmluZyhub2RlKSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2U6IGdldFJhbmdlKG5vZGUpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChub2RlIGluc3RhbmNlb2Ygbm9kZXMuRGVjbGFyYXRpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgcHJvcGVydHlOYW1lID0gbm9kZS5nZXRGdWxsUHJvcGVydHlOYW1lKCk7XG4gICAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gbGFuZ3VhZ2VGYWN0cy5jc3NEYXRhTWFuYWdlci5nZXRQcm9wZXJ0eShwcm9wZXJ0eU5hbWUpO1xuICAgICAgICAgICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29udGVudHMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJ5LmRlc2NyaXB0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50cy5wdXNoKE1hcmtlZFN0cmluZy5mcm9tUGxhaW5UZXh0KGVudHJ5LmRlc2NyaXB0aW9uKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGJyb3dzZXJMYWJlbCA9IGxhbmd1YWdlRmFjdHMuZ2V0QnJvd3NlckxhYmVsKGVudHJ5LmJyb3dzZXJzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXJMYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudHMucHVzaChNYXJrZWRTdHJpbmcuZnJvbVBsYWluVGV4dChicm93c2VyTGFiZWwpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRzOiBjb250ZW50cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZTogZ2V0UmFuZ2Uobm9kZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICByZXR1cm4gQ1NTSG92ZXI7XG59KCkpO1xuZXhwb3J0IHsgQ1NTSG92ZXIgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js ***!
  \*******************************************************************************************************************/
/*! exports provided: CSSNavigation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSNavigation\", function() { return CSSNavigation; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/cssSymbolScope.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar CSSNavigation = /** @class */ (function () {\n    function CSSNavigation() {\n    }\n    CSSNavigation.prototype.findDefinition = function (document, position, stylesheet) {\n        var symbols = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_3__[\"Symbols\"](stylesheet);\n        var offset = document.offsetAt(position);\n        var node = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"getNodeAtOffset\"](stylesheet, offset);\n        if (!node) {\n            return null;\n        }\n        var symbol = symbols.findSymbolFromNode(node);\n        if (!symbol) {\n            return null;\n        }\n        return {\n            uri: document.uri,\n            range: getRange(symbol.node, document)\n        };\n    };\n    CSSNavigation.prototype.findReferences = function (document, position, stylesheet) {\n        var highlights = this.findDocumentHighlights(document, position, stylesheet);\n        return highlights.map(function (h) {\n            return {\n                uri: document.uri,\n                range: h.range\n            };\n        });\n    };\n    CSSNavigation.prototype.findDocumentHighlights = function (document, position, stylesheet) {\n        var result = [];\n        var offset = document.offsetAt(position);\n        var node = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"getNodeAtOffset\"](stylesheet, offset);\n        if (!node || node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Stylesheet || node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Declarations) {\n            return result;\n        }\n        if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Identifier && node.parent && node.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].ClassSelector) {\n            node = node.parent;\n        }\n        var symbols = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_3__[\"Symbols\"](stylesheet);\n        var symbol = symbols.findSymbolFromNode(node);\n        var name = node.getText();\n        stylesheet.accept(function (candidate) {\n            if (symbol) {\n                if (symbols.matchesSymbol(candidate, symbol)) {\n                    result.push({\n                        kind: getHighlightKind(candidate),\n                        range: getRange(candidate, document)\n                    });\n                    return false;\n                }\n            }\n            else if (node.type === candidate.type && node.length === candidate.length && name === candidate.getText()) {\n                // Same node type and data\n                result.push({\n                    kind: getHighlightKind(candidate),\n                    range: getRange(candidate, document)\n                });\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentLinks = function (document, stylesheet, documentContext) {\n        var result = [];\n        stylesheet.accept(function (candidate) {\n            if (candidate.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].URILiteral) {\n                var link = uriLiteralNodeToDocumentLink(document, candidate, documentContext);\n                if (link) {\n                    result.push(link);\n                }\n                return false;\n            }\n            /**\n             * In @import, it is possible to include links that do not use `url()`\n             * For example, `@import 'foo.css';`\n             */\n            if (candidate.parent && candidate.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Import) {\n                var rawText = candidate.getText();\n                if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawText, \"'\") || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawText, \"\\\"\")) {\n                    result.push(uriStringNodeToDocumentLink(document, candidate, documentContext));\n                }\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentSymbols = function (document, stylesheet) {\n        var result = [];\n        stylesheet.accept(function (node) {\n            var entry = {\n                name: null,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Class,\n                location: null\n            };\n            var locationNode = node;\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Selector\"]) {\n                entry.name = node.getText();\n                locationNode = node.findAParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Ruleset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].ExtendsReference);\n                if (locationNode) {\n                    entry.location = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Location\"].create(document.uri, getRange(locationNode, document));\n                    result.push(entry);\n                }\n                return false;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"VariableDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Variable;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"MixinDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Method;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"FunctionDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Function;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Keyframe\"]) {\n                entry.name = localize('literal.keyframes', \"@keyframes {0}\", node.getName());\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"FontFace\"]) {\n                entry.name = localize('literal.fontface', \"@font-face\");\n            }\n            if (entry.name) {\n                entry.location = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Location\"].create(document.uri, getRange(locationNode, document));\n                result.push(entry);\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentColors = function (document, stylesheet) {\n        var result = [];\n        stylesheet.accept(function (node) {\n            var colorInfo = getColorInformation(node, document);\n            if (colorInfo) {\n                result.push(colorInfo);\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.getColorPresentations = function (document, stylesheet, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        var label;\n        if (color.alpha === 1) {\n            label = \"rgb(\" + red256 + \", \" + green256 + \", \" + blue256 + \")\";\n        }\n        else {\n            label = \"rgba(\" + red256 + \", \" + green256 + \", \" + blue256 + \", \" + color.alpha + \")\";\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label) });\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label) });\n        var hsl = Object(_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_4__[\"hslFromColor\"])(color);\n        if (hsl.a === 1) {\n            label = \"hsl(\" + hsl.h + \", \" + Math.round(hsl.s * 100) + \"%, \" + Math.round(hsl.l * 100) + \"%)\";\n        }\n        else {\n            label = \"hsla(\" + hsl.h + \", \" + Math.round(hsl.s * 100) + \"%, \" + Math.round(hsl.l * 100) + \"%, \" + hsl.a + \")\";\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label) });\n        return result;\n    };\n    CSSNavigation.prototype.doRename = function (document, position, newName, stylesheet) {\n        var _a;\n        var highlights = this.findDocumentHighlights(document, position, stylesheet);\n        var edits = highlights.map(function (h) { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(h.range, newName); });\n        return {\n            changes: (_a = {}, _a[document.uri] = edits, _a)\n        };\n    };\n    return CSSNavigation;\n}());\n\nfunction getColorInformation(node, document) {\n    var color = Object(_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_4__[\"getColorValue\"])(node);\n    if (color) {\n        var range = getRange(node, document);\n        return { color: color, range: range };\n    }\n    return null;\n}\nfunction uriLiteralNodeToDocumentLink(document, uriLiteralNode, documentContext) {\n    if (uriLiteralNode.getChildren().length === 0) {\n        return null;\n    }\n    var uriStringNode = uriLiteralNode.getChild(0);\n    return uriStringNodeToDocumentLink(document, uriStringNode, documentContext);\n}\nfunction uriStringNodeToDocumentLink(document, uriStringNode, documentContext) {\n    var rawUri = uriStringNode.getText();\n    var range = getRange(uriStringNode, document);\n    // Make sure the range is not empty\n    if (range.start.line === range.end.line && range.start.character === range.end.character) {\n        return null;\n    }\n    if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, \"'\") || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, \"\\\"\")) {\n        rawUri = rawUri.slice(1, -1);\n    }\n    var target;\n    if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, 'http://') || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, 'https://')) {\n        target = rawUri;\n    }\n    else if (/^\\w+:\\/\\//g.test(rawUri)) {\n        target = rawUri;\n    }\n    else {\n        /**\n         * In SCSS, @import 'foo' could be referring to `_foo.scss`, if none of the following is true:\n         * - The file's extension is .css.\n         * - The filename begins with http://.\n         * - The filename is a url().\n         * - The @import has any media queries.\n         */\n        if (document.languageId === 'scss') {\n            if (!Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"endsWith\"])(rawUri, '.css') &&\n                !Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, 'http://') && !Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, 'https://') &&\n                !(uriStringNode.parent && uriStringNode.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].URILiteral) &&\n                uriStringNode.parent.getChildren().length === 1) {\n                target = toScssPartialUri(documentContext.resolveReference(rawUri, document.uri));\n            }\n            else {\n                target = documentContext.resolveReference(rawUri, document.uri);\n            }\n        }\n        else {\n            target = documentContext.resolveReference(rawUri, document.uri);\n        }\n    }\n    return {\n        range: range,\n        target: target\n    };\n}\nfunction toScssPartialUri(uri) {\n    return uri.replace(/\\/(\\w+)(.scss)?$/gm, function (match, fileName) {\n        return '/_' + fileName + '.scss';\n    });\n}\nfunction getRange(node, document) {\n    return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.end));\n}\nfunction getHighlightKind(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Selector) {\n        return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write;\n    }\n    if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Identifier\"]) {\n        if (node.parent && node.parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Property\"]) {\n            if (node.isCustomProperty) {\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write;\n            }\n        }\n    }\n    if (node.parent) {\n        switch (node.parent.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FunctionDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].MixinDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Keyframe:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].VariableDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FunctionParameter:\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write;\n        }\n    }\n    return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Read;\n}\nfunction toTwoDigitHex(n) {\n    var r = n.toString(16);\n    return r.length !== 2 ? '0' + r : r;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js ***!
  \***********************************************************************************************************************/
/*! exports provided: getSelectionRanges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSelectionRanges\", function() { return getSelectionRanges; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cssLanguageTypes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction getSelectionRanges(document, positions, stylesheet) {\n    function getSelectionRange(position) {\n        var applicableRanges = getApplicableRanges(position);\n        var ranges = applicableRanges.map(function (pair) {\n            return {\n                range: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(document.positionAt(pair[0]), document.positionAt(pair[1])),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"SelectionRangeKind\"].Statement\n            };\n        });\n        return ranges;\n    }\n    return positions.map(getSelectionRange);\n    function getApplicableRanges(position) {\n        var currNode = stylesheet.findChildAtOffset(document.offsetAt(position), true);\n        if (!currNode) {\n            return [];\n        }\n        var result = [];\n        while (currNode) {\n            if (currNode.parent &&\n                currNode.offset === currNode.parent.offset &&\n                currNode.end === currNode.parent.end) {\n                currNode = currNode.parent;\n                continue;\n            }\n            if (currNode.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Declarations) {\n                result.push([currNode.offset + 1, currNode.end - 1]);\n            }\n            else {\n                result.push([currNode.offset, currNode.end]);\n            }\n            currNode = currNode.parent;\n        }\n        return result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc1NlbGVjdGlvblJhbmdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9zZXJ2aWNlcy9jc3NTZWxlY3Rpb25SYW5nZS5qcz9jOTgwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUmFuZ2UgfSBmcm9tICcuLi8uLi92c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXMvbWFpbi5qcyc7XG5pbXBvcnQgeyBOb2RlVHlwZSB9IGZyb20gJy4uL3BhcnNlci9jc3NOb2Rlcy5qcyc7XG5pbXBvcnQgeyBTZWxlY3Rpb25SYW5nZUtpbmQgfSBmcm9tICcuLi9jc3NMYW5ndWFnZVR5cGVzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRTZWxlY3Rpb25SYW5nZXMoZG9jdW1lbnQsIHBvc2l0aW9ucywgc3R5bGVzaGVldCkge1xuICAgIGZ1bmN0aW9uIGdldFNlbGVjdGlvblJhbmdlKHBvc2l0aW9uKSB7XG4gICAgICAgIHZhciBhcHBsaWNhYmxlUmFuZ2VzID0gZ2V0QXBwbGljYWJsZVJhbmdlcyhwb3NpdGlvbik7XG4gICAgICAgIHZhciByYW5nZXMgPSBhcHBsaWNhYmxlUmFuZ2VzLm1hcChmdW5jdGlvbiAocGFpcikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByYW5nZTogUmFuZ2UuY3JlYXRlKGRvY3VtZW50LnBvc2l0aW9uQXQocGFpclswXSksIGRvY3VtZW50LnBvc2l0aW9uQXQocGFpclsxXSkpLFxuICAgICAgICAgICAgICAgIGtpbmQ6IFNlbGVjdGlvblJhbmdlS2luZC5TdGF0ZW1lbnRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmFuZ2VzO1xuICAgIH1cbiAgICByZXR1cm4gcG9zaXRpb25zLm1hcChnZXRTZWxlY3Rpb25SYW5nZSk7XG4gICAgZnVuY3Rpb24gZ2V0QXBwbGljYWJsZVJhbmdlcyhwb3NpdGlvbikge1xuICAgICAgICB2YXIgY3Vyck5vZGUgPSBzdHlsZXNoZWV0LmZpbmRDaGlsZEF0T2Zmc2V0KGRvY3VtZW50Lm9mZnNldEF0KHBvc2l0aW9uKSwgdHJ1ZSk7XG4gICAgICAgIGlmICghY3Vyck5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICAgIHdoaWxlIChjdXJyTm9kZSkge1xuICAgICAgICAgICAgaWYgKGN1cnJOb2RlLnBhcmVudCAmJlxuICAgICAgICAgICAgICAgIGN1cnJOb2RlLm9mZnNldCA9PT0gY3Vyck5vZGUucGFyZW50Lm9mZnNldCAmJlxuICAgICAgICAgICAgICAgIGN1cnJOb2RlLmVuZCA9PT0gY3Vyck5vZGUucGFyZW50LmVuZCkge1xuICAgICAgICAgICAgICAgIGN1cnJOb2RlID0gY3Vyck5vZGUucGFyZW50O1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGN1cnJOb2RlLnR5cGUgPT09IE5vZGVUeXBlLkRlY2xhcmF0aW9ucykge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKFtjdXJyTm9kZS5vZmZzZXQgKyAxLCBjdXJyTm9kZS5lbmQgLSAxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChbY3Vyck5vZGUub2Zmc2V0LCBjdXJyTm9kZS5lbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN1cnJOb2RlID0gY3Vyck5vZGUucGFyZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js ***!
  \*******************************************************************************************************************/
/*! exports provided: CSSValidation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSValidation\", function() { return CSSValidation; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _lintRules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lintRules.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _lint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lint.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar CSSValidation = /** @class */ (function () {\n    function CSSValidation() {\n    }\n    CSSValidation.prototype.configure = function (settings) {\n        this.settings = settings;\n    };\n    CSSValidation.prototype.doValidation = function (document, stylesheet, settings) {\n        if (settings === void 0) { settings = this.settings; }\n        if (settings && settings.validate === false) {\n            return [];\n        }\n        var entries = [];\n        entries.push.apply(entries, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ParseErrorCollector\"].entries(stylesheet));\n        entries.push.apply(entries, _lint_js__WEBPACK_IMPORTED_MODULE_3__[\"LintVisitor\"].entries(stylesheet, document, new _lintRules_js__WEBPACK_IMPORTED_MODULE_2__[\"LintConfigurationSettings\"](settings && settings.lint)));\n        var ruleIds = [];\n        for (var r in _lintRules_js__WEBPACK_IMPORTED_MODULE_2__[\"Rules\"]) {\n            ruleIds.push(_lintRules_js__WEBPACK_IMPORTED_MODULE_2__[\"Rules\"][r].id);\n        }\n        function toDiagnostic(marker) {\n            var range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"].create(document.positionAt(marker.getOffset()), document.positionAt(marker.getOffset() + marker.getLength()));\n            var source = document.languageId;\n            return {\n                code: marker.getRule().id,\n                source: source,\n                message: marker.getMessage(),\n                severity: marker.getLevel() === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning ? _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticSeverity\"].Warning : _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticSeverity\"].Error,\n                range: range\n            };\n        }\n        return entries.filter(function (entry) { return entry.getLevel() !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore; }).map(toDiagnostic);\n    };\n    return CSSValidation;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc1ZhbGlkYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc1ZhbGlkYXRpb24uanM/ODNiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIG5vZGVzIGZyb20gJy4uL3BhcnNlci9jc3NOb2Rlcy5qcyc7XG5pbXBvcnQgeyBSYW5nZSwgRGlhZ25vc3RpY1NldmVyaXR5IH0gZnJvbSAnLi4vLi4vdnNjb2RlLWxhbmd1YWdlc2VydmVyLXR5cGVzL21haW4uanMnO1xuaW1wb3J0IHsgTGludENvbmZpZ3VyYXRpb25TZXR0aW5ncywgUnVsZXMgfSBmcm9tICcuL2xpbnRSdWxlcy5qcyc7XG5pbXBvcnQgeyBMaW50VmlzaXRvciB9IGZyb20gJy4vbGludC5qcyc7XG52YXIgQ1NTVmFsaWRhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDU1NWYWxpZGF0aW9uKCkge1xuICAgIH1cbiAgICBDU1NWYWxpZGF0aW9uLnByb3RvdHlwZS5jb25maWd1cmUgPSBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgIH07XG4gICAgQ1NTVmFsaWRhdGlvbi5wcm90b3R5cGUuZG9WYWxpZGF0aW9uID0gZnVuY3Rpb24gKGRvY3VtZW50LCBzdHlsZXNoZWV0LCBzZXR0aW5ncykge1xuICAgICAgICBpZiAoc2V0dGluZ3MgPT09IHZvaWQgMCkgeyBzZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3M7IH1cbiAgICAgICAgaWYgKHNldHRpbmdzICYmIHNldHRpbmdzLnZhbGlkYXRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgICAgIGVudHJpZXMucHVzaC5hcHBseShlbnRyaWVzLCBub2Rlcy5QYXJzZUVycm9yQ29sbGVjdG9yLmVudHJpZXMoc3R5bGVzaGVldCkpO1xuICAgICAgICBlbnRyaWVzLnB1c2guYXBwbHkoZW50cmllcywgTGludFZpc2l0b3IuZW50cmllcyhzdHlsZXNoZWV0LCBkb2N1bWVudCwgbmV3IExpbnRDb25maWd1cmF0aW9uU2V0dGluZ3Moc2V0dGluZ3MgJiYgc2V0dGluZ3MubGludCkpKTtcbiAgICAgICAgdmFyIHJ1bGVJZHMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgciBpbiBSdWxlcykge1xuICAgICAgICAgICAgcnVsZUlkcy5wdXNoKFJ1bGVzW3JdLmlkKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b0RpYWdub3N0aWMobWFya2VyKSB7XG4gICAgICAgICAgICB2YXIgcmFuZ2UgPSBSYW5nZS5jcmVhdGUoZG9jdW1lbnQucG9zaXRpb25BdChtYXJrZXIuZ2V0T2Zmc2V0KCkpLCBkb2N1bWVudC5wb3NpdGlvbkF0KG1hcmtlci5nZXRPZmZzZXQoKSArIG1hcmtlci5nZXRMZW5ndGgoKSkpO1xuICAgICAgICAgICAgdmFyIHNvdXJjZSA9IGRvY3VtZW50Lmxhbmd1YWdlSWQ7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGNvZGU6IG1hcmtlci5nZXRSdWxlKCkuaWQsXG4gICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogbWFya2VyLmdldE1lc3NhZ2UoKSxcbiAgICAgICAgICAgICAgICBzZXZlcml0eTogbWFya2VyLmdldExldmVsKCkgPT09IG5vZGVzLkxldmVsLldhcm5pbmcgPyBEaWFnbm9zdGljU2V2ZXJpdHkuV2FybmluZyA6IERpYWdub3N0aWNTZXZlcml0eS5FcnJvcixcbiAgICAgICAgICAgICAgICByYW5nZTogcmFuZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVudHJpZXMuZmlsdGVyKGZ1bmN0aW9uIChlbnRyeSkgeyByZXR1cm4gZW50cnkuZ2V0TGV2ZWwoKSAhPT0gbm9kZXMuTGV2ZWwuSWdub3JlOyB9KS5tYXAodG9EaWFnbm9zdGljKTtcbiAgICB9O1xuICAgIHJldHVybiBDU1NWYWxpZGF0aW9uO1xufSgpKTtcbmV4cG9ydCB7IENTU1ZhbGlkYXRpb24gfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js ***!
  \********************************************************************************************************************/
/*! exports provided: LESSCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSCompletion\", function() { return LESSCompletion; });\n/* harmony import */ var _cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar LESSCompletion = /** @class */ (function (_super) {\n    __extends(LESSCompletion, _super);\n    function LESSCompletion() {\n        return _super.call(this, '@') || this;\n    }\n    LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var item = {\n                label: p.name,\n                detail: p.example,\n                documentation: p.description,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"InsertTextFormat\"].Snippet,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"CompletionItemKind\"].Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = LESSCompletion.builtInProposals;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    LESSCompletion.builtInProposals = [\n        // Boolean functions\n        {\n            'name': 'if',\n            'example': 'if(condition, trueValue [, falseValue]);',\n            'description': localize('less.builtin.if', 'returns one of two values depending on a condition.')\n        },\n        {\n            'name': 'boolean',\n            'example': 'boolean(condition);',\n            'description': localize('less.builtin.boolean', '\"store\" a boolean test for later evaluation in a guard or if().')\n        },\n        // List functions\n        {\n            'name': 'length',\n            'example': 'length(@list);',\n            'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n        },\n        {\n            'name': 'extract',\n            'example': 'extract(@list, index);',\n            'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n        },\n        {\n            'name': 'range',\n            'example': 'range([start, ] end [, step]);',\n            'description': localize('less.builtin.range', 'generate a list spanning a range of values')\n        },\n        {\n            'name': 'each',\n            'example': 'each(@list, ruleset);',\n            'description': localize('less.builtin.each', 'bind the evaluation of a ruleset to each member of a list.')\n        },\n        // Other built-ins\n        {\n            'name': 'escape',\n            'example': 'escape(@string);',\n            'description': localize('less.builtin.escape', 'URL encodes a string')\n        },\n        {\n            'name': 'e',\n            'example': 'e(@string);',\n            'description': localize('less.builtin.e', 'escape string content')\n        },\n        {\n            'name': 'replace',\n            'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n            'description': localize('less.builtin.replace', 'string replace')\n        },\n        {\n            'name': 'unit',\n            'example': 'unit(@dimension, [@unit: \\'\\']);',\n            'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n        },\n        {\n            'name': 'color',\n            'example': 'color(@string);',\n            'description': localize('less.builtin.color', 'parses a string to a color'),\n            'type': 'color'\n        },\n        {\n            'name': 'convert',\n            'example': 'convert(@value, unit);',\n            'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n        },\n        {\n            'name': 'data-uri',\n            'example': 'data-uri([mimetype,] url);',\n            'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n            'type': 'url'\n        },\n        {\n            'name': 'abs',\n            'description': localize('less.builtin.abs', 'absolute value of a number'),\n            'example': 'abs(number);'\n        },\n        {\n            'name': 'acos',\n            'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n            'example': 'acos(number);'\n        },\n        {\n            'name': 'asin',\n            'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n            'example': 'asin(number);'\n        },\n        {\n            'name': 'ceil',\n            'example': 'ceil(@number);',\n            'description': localize('less.builtin.ceil', 'rounds up to an integer')\n        },\n        {\n            'name': 'cos',\n            'description': localize('less.builtin.cos', 'cosine function'),\n            'example': 'cos(number);'\n        },\n        {\n            'name': 'floor',\n            'description': localize('less.builtin.floor', 'rounds down to an integer'),\n            'example': 'floor(@number);'\n        },\n        {\n            'name': 'percentage',\n            'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n            'example': 'percentage(@number);',\n            'type': 'percentage'\n        },\n        {\n            'name': 'round',\n            'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n            'example': 'round(number, [places: 0]);'\n        },\n        {\n            'name': 'sqrt',\n            'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n            'example': 'sqrt(number);'\n        },\n        {\n            'name': 'sin',\n            'description': localize('less.builtin.sin', 'sine function'),\n            'example': 'sin(number);'\n        },\n        {\n            'name': 'tan',\n            'description': localize('less.builtin.tan', 'tangent function'),\n            'example': 'tan(number);'\n        },\n        {\n            'name': 'atan',\n            'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n            'example': 'atan(number);'\n        },\n        {\n            'name': 'pi',\n            'description': localize('less.builtin.pi', 'returns pi'),\n            'example': 'pi();'\n        },\n        {\n            'name': 'pow',\n            'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n            'example': 'pow(@base, @exponent);'\n        },\n        {\n            'name': 'mod',\n            'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n            'example': 'mod(number, number);'\n        },\n        {\n            'name': 'min',\n            'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n            'example': 'min(@x, @y);'\n        },\n        {\n            'name': 'max',\n            'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n            'example': 'max(@x, @y);'\n        }\n    ];\n    LESSCompletion.colorProposals = [\n        {\n            'name': 'argb',\n            'example': 'argb(@color);',\n            'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n        },\n        {\n            'name': 'hsl',\n            'example': 'hsl(@hue, @saturation, @lightness);',\n            'description': localize('less.builtin.hsl', 'creates a color')\n        },\n        {\n            'name': 'hsla',\n            'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n            'description': localize('less.builtin.hsla', 'creates a color')\n        },\n        {\n            'name': 'hsv',\n            'example': 'hsv(@hue, @saturation, @value);',\n            'description': localize('less.builtin.hsv', 'creates a color')\n        },\n        {\n            'name': 'hsva',\n            'example': 'hsva(@hue, @saturation, @value, @alpha);',\n            'description': localize('less.builtin.hsva', 'creates a color')\n        },\n        {\n            'name': 'hue',\n            'example': 'hue(@color);',\n            'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'saturation',\n            'example': 'saturation(@color);',\n            'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'lightness',\n            'example': 'lightness(@color);',\n            'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'hsvhue',\n            'example': 'hsvhue(@color);',\n            'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvsaturation',\n            'example': 'hsvsaturation(@color);',\n            'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvvalue',\n            'example': 'hsvvalue(@color);',\n            'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'red',\n            'example': 'red(@color);',\n            'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n        },\n        {\n            'name': 'green',\n            'example': 'green(@color);',\n            'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n        },\n        {\n            'name': 'blue',\n            'example': 'blue(@color);',\n            'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n        },\n        {\n            'name': 'alpha',\n            'example': 'alpha(@color);',\n            'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n        },\n        {\n            'name': 'luma',\n            'example': 'luma(@color);',\n            'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n        },\n        {\n            'name': 'saturate',\n            'example': 'saturate(@color, 10%);',\n            'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n        },\n        {\n            'name': 'desaturate',\n            'example': 'desaturate(@color, 10%);',\n            'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n        },\n        {\n            'name': 'lighten',\n            'example': 'lighten(@color, 10%);',\n            'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n        },\n        {\n            'name': 'darken',\n            'example': 'darken(@color, 10%);',\n            'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n        },\n        {\n            'name': 'fadein',\n            'example': 'fadein(@color, 10%);',\n            'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n        },\n        {\n            'name': 'fadeout',\n            'example': 'fadeout(@color, 10%);',\n            'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n        },\n        {\n            'name': 'fade',\n            'example': 'fade(@color, 50%);',\n            'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n        },\n        {\n            'name': 'spin',\n            'example': 'spin(@color, 10);',\n            'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n        },\n        {\n            'name': 'mix',\n            'example': 'mix(@color1, @color2, [@weight: 50%]);',\n            'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n        },\n        {\n            'name': 'greyscale',\n            'example': 'greyscale(@color);',\n            'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color'),\n        },\n        {\n            'name': 'contrast',\n            'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n            'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n        },\n        {\n            'name': 'multiply',\n            'example': 'multiply(@color1, @color2);'\n        },\n        {\n            'name': 'screen',\n            'example': 'screen(@color1, @color2);'\n        },\n        {\n            'name': 'overlay',\n            'example': 'overlay(@color1, @color2);'\n        },\n        {\n            'name': 'softlight',\n            'example': 'softlight(@color1, @color2);'\n        },\n        {\n            'name': 'hardlight',\n            'example': 'hardlight(@color1, @color2);'\n        },\n        {\n            'name': 'difference',\n            'example': 'difference(@color1, @color2);'\n        },\n        {\n            'name': 'exclusion',\n            'example': 'exclusion(@color1, @color2);'\n        },\n        {\n            'name': 'average',\n            'example': 'average(@color1, @color2);'\n        },\n        {\n            'name': 'negation',\n            'example': 'negation(@color1, @color2);'\n        }\n    ];\n    return LESSCompletion;\n}(_cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSCompletion\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js ***!
  \**********************************************************************************************************/
/*! exports provided: LintVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LintVisitor\", function() { return LintVisitor; });\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../languageFacts/facts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _lintRules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lintRules.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _lintUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lintUtil.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/arrays.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar NodesByRootMap = /** @class */ (function () {\n    function NodesByRootMap() {\n        this.data = {};\n    }\n    NodesByRootMap.prototype.add = function (root, name, node) {\n        var entry = this.data[root];\n        if (!entry) {\n            entry = { nodes: [], names: [] };\n            this.data[root] = entry;\n        }\n        entry.names.push(name);\n        if (node) {\n            entry.nodes.push(node);\n        }\n    };\n    return NodesByRootMap;\n}());\nvar LintVisitor = /** @class */ (function () {\n    function LintVisitor(document, settings) {\n        var _this = this;\n        this.warnings = [];\n        this.settings = settings;\n        this.documentText = document.getText();\n        this.keyframes = new NodesByRootMap();\n        this.validProperties = {};\n        var properties = settings.getSetting(_lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].ValidProperties);\n        if (Array.isArray(properties)) {\n            properties.forEach(function (p) {\n                if (typeof p === 'string') {\n                    var name = p.trim().toLowerCase();\n                    if (name.length) {\n                        _this.validProperties[name] = true;\n                    }\n                }\n            });\n        }\n    }\n    LintVisitor.entries = function (node, document, settings, entryFilter) {\n        var visitor = new LintVisitor(document, settings);\n        node.acceptVisitor(visitor);\n        visitor.completeValidations();\n        return visitor.getEntries(entryFilter);\n    };\n    LintVisitor.prototype.isValidPropertyDeclaration = function (decl) {\n        var propertyName = decl.getFullPropertyName().toLowerCase();\n        return this.validProperties[propertyName];\n    };\n    LintVisitor.prototype.fetch = function (input, s) {\n        var elements = [];\n        for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\n            var curr = input_1[_i];\n            if (curr.name === s) {\n                elements.push(curr);\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.fetchWithValue = function (input, s, v) {\n        var elements = [];\n        for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\n            var inputElement = input_2[_i];\n            if (inputElement.name === s) {\n                var expression = inputElement.node.getValue();\n                if (expression && this.findValueInExpression(expression, v)) {\n                    elements.push(inputElement);\n                }\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.findValueInExpression = function (expression, v) {\n        var found = false;\n        expression.accept(function (node) {\n            if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Identifier && node.getText() === v) {\n                found = true;\n            }\n            return !found;\n        });\n        return found;\n    };\n    LintVisitor.prototype.getEntries = function (filter) {\n        if (filter === void 0) { filter = (_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Level\"].Warning | _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Level\"].Error); }\n        return this.warnings.filter(function (entry) {\n            return (entry.getLevel() & filter) !== 0;\n        });\n    };\n    LintVisitor.prototype.addEntry = function (node, rule, details) {\n        var entry = new _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Marker\"](node, rule, this.settings.getRule(rule), details);\n        this.warnings.push(entry);\n    };\n    LintVisitor.prototype.getMissingNames = function (expected, actual) {\n        expected = expected.slice(0); // clone\n        for (var i = 0; i < actual.length; i++) {\n            var k = expected.indexOf(actual[i]);\n            if (k !== -1) {\n                expected[k] = null;\n            }\n        }\n        var result = null;\n        for (var i = 0; i < expected.length; i++) {\n            var curr = expected[i];\n            if (curr) {\n                if (result === null) {\n                    result = localize('namelist.single', \"'{0}'\", curr);\n                }\n                else {\n                    result = localize('namelist.concatenated', \"{0}, '{1}'\", result, curr);\n                }\n            }\n        }\n        return result;\n    };\n    LintVisitor.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].UnknownAtRule:\n                return this.visitUnknownAtRule(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Keyframe:\n                return this.visitKeyframe(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FontFace:\n                return this.visitFontFace(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Ruleset:\n                return this.visitRuleSet(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].SimpleSelector:\n                return this.visitSimpleSelector(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Function:\n                return this.visitFunction(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].NumericValue:\n                return this.visitNumericValue(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Import:\n                return this.visitImport(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].HexColorValue:\n                return this.visitHexColorValue(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Prio:\n                return this.visitPrio(node);\n        }\n        return true;\n    };\n    LintVisitor.prototype.completeValidations = function () {\n        this.validateKeyframes();\n    };\n    LintVisitor.prototype.visitUnknownAtRule = function (node) {\n        var atRuleName = node.getChild(0);\n        if (!atRuleName) {\n            return false;\n        }\n        this.addEntry(atRuleName, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownAtRules, \"Unknown at rule \" + atRuleName.getText());\n        return true;\n    };\n    LintVisitor.prototype.visitKeyframe = function (node) {\n        var keyword = node.getKeyword();\n        var text = keyword.getText();\n        this.keyframes.add(node.getName(), text, (text !== '@keyframes') ? keyword : null);\n        return true;\n    };\n    LintVisitor.prototype.validateKeyframes = function () {\n        // @keyframe and it's vendor specific alternatives\n        // @keyframe should be included\n        var expected = ['@-webkit-keyframes', '@-moz-keyframes', '@-o-keyframes'];\n        for (var name in this.keyframes.data) {\n            var actual = this.keyframes.data[name].names;\n            var needsStandard = (actual.indexOf('@keyframes') === -1);\n            if (!needsStandard && actual.length === 1) {\n                continue; // only the non-vendor specific keyword is used, that's fine, no warning\n            }\n            var missingVendorSpecific = this.getMissingNames(expected, actual);\n            if (missingVendorSpecific || needsStandard) {\n                for (var _i = 0, _a = this.keyframes.data[name].nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    if (needsStandard) {\n                        var message = localize('keyframes.standardrule.missing', \"Always define standard rule '@keyframes' when defining keyframes.\");\n                        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                    }\n                    if (missingVendorSpecific) {\n                        var message = localize('keyframes.vendorspecific.missing', \"Always include all vendor specific rules: Missing: {0}\", missingVendorSpecific);\n                        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AllVendorPrefixes, message);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitSimpleSelector = function (node) {\n        var firstChar = this.documentText.charAt(node.offset);\n        /////////////////////////////////////////////////////////////\n        //\tLint - The universal selector (*) is known to be slow.\n        /////////////////////////////////////////////////////////////\n        if (node.length === 1 && firstChar === '*') {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UniversalSelector);\n        }\n        /////////////////////////////////////////////////////////////\n        //\tLint - Avoid id selectors\n        /////////////////////////////////////////////////////////////\n        if (firstChar === '#') {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidIdSelector);\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitImport = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Import statements shouldn't be used, because they aren't offering parallel downloads.\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ImportStatemement);\n        return true;\n    };\n    LintVisitor.prototype.visitRuleSet = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Don't use empty rulesets.\n        /////////////////////////////////////////////////////////////\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return false;\n        }\n        if (!declarations.hasChildren()) {\n            this.addEntry(node.getSelectors(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].EmptyRuleSet);\n        }\n        var propertyTable = [];\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (element instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Declaration\"]) {\n                var decl = element;\n                propertyTable.push(new _lintUtil_js__WEBPACK_IMPORTED_MODULE_3__[\"Element\"](decl.getFullPropertyName().toLowerCase(), decl));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        // the rule warns when it finds:\n        // width being used with border, border-left, border-right, padding, padding-left, or padding-right\n        // height being used with border, border-top, border-bottom, padding, padding-top, or padding-bottom\n        // No error when box-sizing property is specified, as it assumes the user knows what he's doing.\n        // see https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\n        /////////////////////////////////////////////////////////////\n        var boxModel = Object(_lintUtil_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(propertyTable);\n        if (boxModel.width) {\n            var properties = [];\n            if (boxModel.right.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.right.properties);\n            }\n            if (boxModel.left.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.left.properties);\n            }\n            if (properties.length !== 0) {\n                for (var _b = 0, properties_1 = properties; _b < properties_1.length; _b++) {\n                    var item = properties_1[_b];\n                    this.addEntry(item.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                }\n                this.addEntry(boxModel.width.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n            }\n        }\n        if (boxModel.height) {\n            var properties = [];\n            if (boxModel.top.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.top.properties);\n            }\n            if (boxModel.bottom.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.bottom.properties);\n            }\n            if (properties.length !== 0) {\n                for (var _c = 0, properties_2 = properties; _c < properties_2.length; _c++) {\n                    var item = properties_2[_c];\n                    this.addEntry(item.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                }\n                this.addEntry(boxModel.height.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tProperties ignored due to display\n        /////////////////////////////////////////////////////////////\n        // With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect\n        var displayElems = this.fetchWithValue(propertyTable, 'display', 'inline');\n        if (displayElems.length > 0) {\n            for (var _d = 0, _e = ['width', 'height', 'margin-top', 'margin-bottom', 'float']; _d < _e.length; _d++) {\n                var prop = _e[_d];\n                var elem = this.fetch(propertyTable, prop);\n                for (var index = 0; index < elem.length; index++) {\n                    var node_1 = elem[index].node;\n                    var value = node_1.getValue();\n                    if (prop === 'float' && (!value || value.matches('none'))) {\n                        continue;\n                    }\n                    this.addEntry(node_1, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInline', \"Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect.\"));\n                }\n            }\n        }\n        // With 'display: inline-block', 'float' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'inline-block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'float');\n            for (var index = 0; index < elem.length; index++) {\n                var node_2 = elem[index].node;\n                var value = node_2.getValue();\n                if (value && !value.matches('none')) {\n                    this.addEntry(node_2, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInlineBlock', \"inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'\"));\n                }\n            }\n        }\n        // With 'display: block', 'vertical-align' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'vertical-align');\n            for (var index = 0; index < elem.length; index++) {\n                this.addEntry(elem[index].node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayBlock', \"Property is ignored due to the display. With 'display: block', vertical-align should not be used.\"));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tAvoid 'float'\n        /////////////////////////////////////////////////////////////\n        var elements = this.fetch(propertyTable, 'float');\n        for (var index = 0; index < elements.length; index++) {\n            var decl = elements[index].node;\n            if (!this.isValidPropertyDeclaration(decl)) {\n                this.addEntry(decl, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidFloat);\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tDon't use duplicate declarations.\n        /////////////////////////////////////////////////////////////\n        for (var i = 0; i < propertyTable.length; i++) {\n            var element = propertyTable[i];\n            if (element.name !== 'background' && !this.validProperties[element.name]) {\n                var value = element.node.getValue();\n                if (value && this.documentText.charAt(value.offset) !== '-') {\n                    var elements_1 = this.fetch(propertyTable, element.name);\n                    if (elements_1.length > 1) {\n                        for (var k = 0; k < elements_1.length; k++) {\n                            var value_1 = elements_1[k].node.getValue();\n                            if (value_1 && this.documentText.charAt(value_1.offset) !== '-' && elements_1[k] !== element) {\n                                this.addEntry(element.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].DuplicateDeclarations);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tUnknown propery & When using a vendor-prefixed gradient, make sure to use them all.\n        /////////////////////////////////////////////////////////////\n        var isExportBlock = node.getSelectors().getText() === \":export\";\n        if (!isExportBlock) {\n            var propertiesBySuffix = new NodesByRootMap();\n            var containsUnknowns = false;\n            for (var _f = 0, _g = declarations.getChildren(); _f < _g.length; _f++) {\n                var node_3 = _g[_f];\n                if (this.isCSSDeclaration(node_3)) {\n                    var decl = node_3;\n                    var name = decl.getFullPropertyName().toLowerCase();\n                    var firstChar = name.charAt(0);\n                    if (firstChar === '-') {\n                        if (name.charAt(1) !== '-') { // avoid css variables\n                            if (!_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"cssDataManager\"].isKnownProperty(name) && !this.validProperties[name]) {\n                                this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownVendorSpecificProperty);\n                            }\n                            var nonPrefixedName = decl.getNonPrefixedPropertyName();\n                            propertiesBySuffix.add(nonPrefixedName, name, decl.getProperty());\n                        }\n                    }\n                    else {\n                        var fullName = name;\n                        if (firstChar === '*' || firstChar === '_') {\n                            this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IEStarHack);\n                            name = name.substr(1);\n                        }\n                        // _property and *property might be contributed via custom data\n                        if (!_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"cssDataManager\"].isKnownProperty(fullName) && !_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"cssDataManager\"].isKnownProperty(name)) {\n                            if (!this.validProperties[name]) {\n                                this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownProperty, localize('property.unknownproperty.detailed', \"Unknown property: '{0}'\", name));\n                            }\n                        }\n                        propertiesBySuffix.add(name, name, null); // don't pass the node as we don't show errors on the standard\n                    }\n                }\n                else {\n                    containsUnknowns = true;\n                }\n            }\n            if (!containsUnknowns) { // don't perform this test if there are\n                for (var suffix in propertiesBySuffix.data) {\n                    var entry = propertiesBySuffix.data[suffix];\n                    var actual = entry.names;\n                    var needsStandard = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"cssDataManager\"].isStandardProperty(suffix) && (actual.indexOf(suffix) === -1);\n                    if (!needsStandard && actual.length === 1) {\n                        continue; // only the non-vendor specific rule is used, that's fine, no warning\n                    }\n                    var expected = [];\n                    for (var i = 0, len = LintVisitor.prefixes.length; i < len; i++) {\n                        var prefix = LintVisitor.prefixes[i];\n                        if (_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"cssDataManager\"].isStandardProperty(prefix + suffix)) {\n                            expected.push(prefix + suffix);\n                        }\n                    }\n                    var missingVendorSpecific = this.getMissingNames(expected, actual);\n                    if (missingVendorSpecific || needsStandard) {\n                        for (var _h = 0, _j = entry.nodes; _h < _j.length; _h++) {\n                            var node_4 = _j[_h];\n                            if (needsStandard) {\n                                var message = localize('property.standard.missing', \"Also define the standard property '{0}' for compatibility\", suffix);\n                                this.addEntry(node_4, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                            }\n                            if (missingVendorSpecific) {\n                                var message = localize('property.vendorspecific.missing', \"Always include all vendor specific properties: Missing: {0}\", missingVendorSpecific);\n                                this.addEntry(node_4, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AllVendorPrefixes, message);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitPrio = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tDon't use !important\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidImportant);\n        return true;\n    };\n    LintVisitor.prototype.visitNumericValue = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\t0 has no following unit\n        /////////////////////////////////////////////////////////////\n        var funcDecl = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Function);\n        if (funcDecl && funcDecl.getName() === 'calc') {\n            return true;\n        }\n        var decl = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Declaration);\n        if (decl) {\n            var declValue = decl.getValue();\n            if (declValue) {\n                var value = node.getValue();\n                if (!value.unit || _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"units\"].length.indexOf(value.unit.toLowerCase()) === -1) {\n                    return true;\n                }\n                if (parseFloat(value.value) === 0.0 && !!value.unit && !this.validProperties[decl.getFullPropertyName()]) {\n                    this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ZeroWithUnit);\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitFontFace = function (node) {\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return;\n        }\n        var definesSrc = false, definesFontFamily = false;\n        var containsUnknowns = false;\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var node_5 = _a[_i];\n            if (this.isCSSDeclaration(node_5)) {\n                var name = (node_5.getProperty().getName().toLowerCase());\n                if (name === 'src') {\n                    definesSrc = true;\n                }\n                if (name === 'font-family') {\n                    definesFontFamily = true;\n                }\n            }\n            else {\n                containsUnknowns = true;\n            }\n        }\n        if (!containsUnknowns && (!definesSrc || !definesFontFamily)) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].RequiredPropertiesForFontFace);\n        }\n        return true;\n    };\n    LintVisitor.prototype.isCSSDeclaration = function (node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Declaration\"]) {\n            if (!node.getValue()) {\n                return false;\n            }\n            var property = node.getProperty();\n            if (!property || property.getIdentifier().containsInterpolation()) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitHexColorValue = function (node) {\n        // Rule: #eeff0011 or #eeff00 or #ef01 or #ef0\n        var length = node.length;\n        if (length !== 9 && length !== 7 && length !== 5 && length !== 4) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].HexColorLength);\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitFunction = function (node) {\n        var fnName = node.getName().toLowerCase();\n        var expectedAttrCount = -1;\n        var actualAttrCount = 0;\n        switch (fnName) {\n            case 'rgb(':\n            case 'hsl(':\n                expectedAttrCount = 3;\n                break;\n            case 'rgba(':\n            case 'hsla(':\n                expectedAttrCount = 4;\n                break;\n        }\n        if (expectedAttrCount !== -1) {\n            node.getArguments().accept(function (n) {\n                if (n instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"BinaryExpression\"]) {\n                    actualAttrCount += 1;\n                    return false;\n                }\n                return true;\n            });\n            if (actualAttrCount !== expectedAttrCount) {\n                this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ArgsInColorFunction);\n            }\n        }\n        return true;\n    };\n    LintVisitor.prefixes = [\n        '-ms-', '-moz-', '-o-', '-webkit-',\n    ];\n    return LintVisitor;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js ***!
  \***************************************************************************************************************/
/*! exports provided: Rule, Setting, Rules, Settings, LintConfigurationSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rule\", function() { return Rule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Setting\", function() { return Setting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rules\", function() { return Rules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return Settings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LintConfigurationSettings\", function() { return LintConfigurationSettings; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar Warning = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning;\nvar Error = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Error;\nvar Ignore = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore;\nvar Rule = /** @class */ (function () {\n    function Rule(id, message, defaultValue) {\n        this.id = id;\n        this.message = message;\n        this.defaultValue = defaultValue;\n        // nothing to do\n    }\n    return Rule;\n}());\n\nvar Setting = /** @class */ (function () {\n    function Setting(id, message, defaultValue) {\n        this.id = id;\n        this.message = message;\n        this.defaultValue = defaultValue;\n        // nothing to do\n    }\n    return Setting;\n}());\n\nvar Rules = {\n    AllVendorPrefixes: new Rule('compatibleVendorPrefixes', localize('rule.vendorprefixes.all', \"When using a vendor-specific prefix make sure to also include all other vendor-specific properties\"), Ignore),\n    IncludeStandardPropertyWhenUsingVendorPrefix: new Rule('vendorPrefix', localize('rule.standardvendorprefix.all', \"When using a vendor-specific prefix also include the standard property\"), Warning),\n    DuplicateDeclarations: new Rule('duplicateProperties', localize('rule.duplicateDeclarations', \"Do not use duplicate style definitions\"), Ignore),\n    EmptyRuleSet: new Rule('emptyRules', localize('rule.emptyRuleSets', \"Do not use empty rulesets\"), Warning),\n    ImportStatemement: new Rule('importStatement', localize('rule.importDirective', \"Import statements do not load in parallel\"), Ignore),\n    BewareOfBoxModelSize: new Rule('boxModel', localize('rule.bewareOfBoxModelSize', \"Do not use width or height when using padding or border\"), Ignore),\n    UniversalSelector: new Rule('universalSelector', localize('rule.universalSelector', \"The universal selector (*) is known to be slow\"), Ignore),\n    ZeroWithUnit: new Rule('zeroUnits', localize('rule.zeroWidthUnit', \"No unit for zero needed\"), Ignore),\n    RequiredPropertiesForFontFace: new Rule('fontFaceProperties', localize('rule.fontFaceProperties', \"@font-face rule must define 'src' and 'font-family' properties\"), Warning),\n    HexColorLength: new Rule('hexColorLength', localize('rule.hexColor', \"Hex colors must consist of three, four, six or eight hex numbers\"), Error),\n    ArgsInColorFunction: new Rule('argumentsInColorFunction', localize('rule.colorFunction', \"Invalid number of parameters\"), Error),\n    UnknownProperty: new Rule('unknownProperties', localize('rule.unknownProperty', \"Unknown property.\"), Warning),\n    UnknownAtRules: new Rule('unknownAtRules', localize('rule.unknownAtRules', \"Unknown at-rule.\"), Warning),\n    IEStarHack: new Rule('ieHack', localize('rule.ieHack', \"IE hacks are only necessary when supporting IE7 and older\"), Ignore),\n    UnknownVendorSpecificProperty: new Rule('unknownVendorSpecificProperties', localize('rule.unknownVendorSpecificProperty', \"Unknown vendor specific property.\"), Ignore),\n    PropertyIgnoredDueToDisplay: new Rule('propertyIgnoredDueToDisplay', localize('rule.propertyIgnoredDueToDisplay', \"Property is ignored due to the display.\"), Warning),\n    AvoidImportant: new Rule('important', localize('rule.avoidImportant', \"Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.\"), Ignore),\n    AvoidFloat: new Rule('float', localize('rule.avoidFloat', \"Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.\"), Ignore),\n    AvoidIdSelector: new Rule('idSelector', localize('rule.avoidIdSelector', \"Selectors should not contain IDs because these rules are too tightly coupled with the HTML.\"), Ignore),\n};\nvar Settings = {\n    ValidProperties: new Setting('validProperties', localize('rule.validProperties', \"A list of properties that are not validated against the `unknownProperties` rule.\"), [])\n};\nvar LintConfigurationSettings = /** @class */ (function () {\n    function LintConfigurationSettings(conf) {\n        if (conf === void 0) { conf = {}; }\n        this.conf = conf;\n    }\n    LintConfigurationSettings.prototype.getRule = function (rule) {\n        if (this.conf.hasOwnProperty(rule.id)) {\n            var level = toLevel(this.conf[rule.id]);\n            if (level) {\n                return level;\n            }\n        }\n        return rule.defaultValue;\n    };\n    LintConfigurationSettings.prototype.getSetting = function (setting) {\n        return this.conf[setting.id];\n    };\n    return LintConfigurationSettings;\n}());\n\nfunction toLevel(level) {\n    switch (level) {\n        case 'ignore': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore;\n        case 'warning': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning;\n        case 'error': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Error;\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js ***!
  \**************************************************************************************************************/
/*! exports provided: Element, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return calculateBoxModel; });\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/arrays.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar Element = /** @class */ (function () {\n    function Element(text, data) {\n        this.name = text;\n        this.node = data;\n    }\n    return Element;\n}());\n\nfunction setSide(model, side, value, property) {\n    var state = model[side];\n    state.value = value;\n    if (value) {\n        if (!Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__[\"includes\"])(state.properties, property)) {\n            state.properties.push(property);\n        }\n    }\n}\nfunction setAllSides(model, value, property) {\n    setSide(model, 'top', value, property);\n    setSide(model, 'right', value, property);\n    setSide(model, 'bottom', value, property);\n    setSide(model, 'left', value, property);\n}\nfunction updateModelWithValue(model, side, value, property) {\n    if (side === 'top' || side === 'right' ||\n        side === 'bottom' || side === 'left') {\n        setSide(model, side, value, property);\n    }\n    else {\n        setAllSides(model, value, property);\n    }\n}\nfunction updateModelWithList(model, values, property) {\n    switch (values.length) {\n        case 1:\n            updateModelWithValue(model, undefined, values[0], property);\n            break;\n        case 2:\n            updateModelWithValue(model, 'top', values[0], property);\n            updateModelWithValue(model, 'bottom', values[0], property);\n            updateModelWithValue(model, 'right', values[1], property);\n            updateModelWithValue(model, 'left', values[1], property);\n            break;\n        case 3:\n            updateModelWithValue(model, 'top', values[0], property);\n            updateModelWithValue(model, 'right', values[1], property);\n            updateModelWithValue(model, 'left', values[1], property);\n            updateModelWithValue(model, 'bottom', values[2], property);\n            break;\n        case 4:\n            updateModelWithValue(model, 'top', values[0], property);\n            updateModelWithValue(model, 'right', values[1], property);\n            updateModelWithValue(model, 'bottom', values[2], property);\n            updateModelWithValue(model, 'left', values[3], property);\n            break;\n    }\n}\n/**\n * @param allowsKeywords whether the initial value of property is zero, so keywords `initial` and `unset` count as zero\n * @return `true` if this node represents a non-zero border; otherwise, `false`\n */\nfunction checkLineWidth(value, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    if (allowsKeywords && Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__[\"includes\"])(['initial', 'unset'], value)) {\n        return false;\n    }\n    // a <length> is a value and a unit\n    // so use `parseFloat` to strip the unit\n    return parseFloat(value) !== 0;\n}\nfunction checkLineWidthList(nodes, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    return nodes.map(function (node) { return checkLineWidth(node.getText(), allowsKeywords); });\n}\n/**\n * @param allowsKeywords whether keywords `initial` and `unset` count as zero\n * @return `true` if this node represents a non-zero border; otherwise, `false`\n */\nfunction checkLineStyle(value, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    if (Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__[\"includes\"])(['none', 'hidden'], value)) {\n        return false;\n    }\n    if (allowsKeywords && Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__[\"includes\"])(['initial', 'unset'], value)) {\n        return false;\n    }\n    return true;\n}\nfunction checkLineStyleList(nodes, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    return nodes.map(function (node) { return checkLineStyle(node.getText(), allowsKeywords); });\n}\nfunction checkBorderShorthand(node) {\n    var children = node.getChildren();\n    // the only child can be a keyword, a <line-width>, or a <line-style>\n    // if either check returns false, the result is no border\n    if (children.length === 1) {\n        var value = children[0].getText();\n        return checkLineWidth(value) && checkLineStyle(value);\n    }\n    // multiple children can't contain keywords\n    // if any child means no border, the result is no border\n    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n        var child = children_1[_i];\n        var value = child.getText();\n        if (!checkLineWidth(value, /* allowsKeywords: */ false) ||\n            !checkLineStyle(value, /* allowsKeywords: */ false)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction calculateBoxModel(propertyTable) {\n    var model = {\n        top: { value: false, properties: [] },\n        right: { value: false, properties: [] },\n        bottom: { value: false, properties: [] },\n        left: { value: false, properties: [] },\n    };\n    for (var _i = 0, propertyTable_1 = propertyTable; _i < propertyTable_1.length; _i++) {\n        var property = propertyTable_1[_i];\n        var value = property.node.value;\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        switch (property.name) {\n            case 'box-sizing':\n                // has `box-sizing`, bail out\n                return {\n                    top: { value: false, properties: [] },\n                    right: { value: false, properties: [] },\n                    bottom: { value: false, properties: [] },\n                    left: { value: false, properties: [] },\n                };\n            case 'width':\n                model.width = property;\n                break;\n            case 'height':\n                model.height = property;\n                break;\n            default:\n                var segments = property.name.split('-');\n                switch (segments[0]) {\n                    case 'border':\n                        switch (segments[1]) {\n                            case undefined:\n                            case 'top':\n                            case 'right':\n                            case 'bottom':\n                            case 'left':\n                                switch (segments[2]) {\n                                    case undefined:\n                                        updateModelWithValue(model, segments[1], checkBorderShorthand(value), property);\n                                        break;\n                                    case 'width':\n                                        // the initial value of `border-width` is `medium`, not zero\n                                        updateModelWithValue(model, segments[1], checkLineWidth(value.getText(), false), property);\n                                        break;\n                                    case 'style':\n                                        // the initial value of `border-style` is `none`\n                                        updateModelWithValue(model, segments[1], checkLineStyle(value.getText(), true), property);\n                                        break;\n                                }\n                                break;\n                            case 'width':\n                                // the initial value of `border-width` is `medium`, not zero\n                                updateModelWithList(model, checkLineWidthList(value.getChildren(), false), property);\n                                break;\n                            case 'style':\n                                // the initial value of `border-style` is `none`\n                                updateModelWithList(model, checkLineStyleList(value.getChildren(), true), property);\n                                break;\n                        }\n                        break;\n                    case 'padding':\n                        if (segments.length === 1) {\n                            // the initial value of `padding` is zero\n                            updateModelWithList(model, checkLineWidthList(value.getChildren(), true), property);\n                        }\n                        else {\n                            // the initial value of `padding` is zero\n                            updateModelWithValue(model, segments[1], checkLineWidth(value.getText(), true), property);\n                        }\n                        break;\n                }\n                break;\n        }\n    }\n    return model;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js ***!
  \********************************************************************************************************************/
/*! exports provided: SCSSCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSCompletion\", function() { return SCSSCompletion; });\n/* harmony import */ var _cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__[\"loadMessageBundle\"]();\nvar SCSSCompletion = /** @class */ (function (_super) {\n    __extends(SCSSCompletion, _super);\n    function SCSSCompletion() {\n        return _super.call(this, '$') || this;\n    }\n    SCSSCompletion.prototype.createReplaceFunction = function () {\n        var tabStopCounter = 1;\n        return function (_match, p1) {\n            return '\\\\' + p1 + ': ${' + tabStopCounter++ + ':' + (SCSSCompletion.variableDefaults[p1] || '') + '}';\n        };\n    };\n    SCSSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var insertText = p.func.replace(/\\[?(\\$\\w+)\\]?/g, this.createReplaceFunction());\n            var label = p.func.substr(0, p.func.indexOf('('));\n            var item = {\n                label: label,\n                detail: p.func,\n                documentation: p.desc,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionsForSelector = function (ruleSet, isNested, result) {\n        this.createFunctionProposals(SCSSCompletion.selectorFuncs, void 0, true, result);\n        return _super.prototype.getCompletionsForSelector.call(this, ruleSet, isNested, result);\n    };\n    SCSSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = SCSSCompletion.builtInFuncs;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    SCSSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(SCSSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    SCSSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionForAtDirectives(result);\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    SCSSCompletion.prototype.getCompletionsForExtendsReference = function (_extendsRef, existingNode, result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Rule);\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var suggest = {\n                label: symbol.name,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), symbol.name),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Function,\n            };\n            result.items.push(suggest);\n        }\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionForAtDirectives = function (result) {\n        var _a;\n        (_a = result.items).push.apply(_a, SCSSCompletion.scssAtDirectives);\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionForTopLevel = function (result) {\n        this.getCompletionForAtDirectives(result);\n        _super.prototype.getCompletionForTopLevel.call(this, result);\n        return result;\n    };\n    SCSSCompletion.variableDefaults = {\n        '$red': '1',\n        '$green': '2',\n        '$blue': '3',\n        '$alpha': '1.0',\n        '$color': '#000000',\n        '$weight': '0.5',\n        '$hue': '0',\n        '$saturation': '0%',\n        '$lightness': '0%',\n        '$degrees': '0',\n        '$amount': '0',\n        '$string': '\"\"',\n        '$substring': '\"s\"',\n        '$number': '0',\n        '$limit': '1'\n    };\n    SCSSCompletion.colorProposals = [\n        { func: 'red($color)', desc: localize('scss.builtin.red', 'Gets the red component of a color.') },\n        { func: 'green($color)', desc: localize('scss.builtin.green', 'Gets the green component of a color.') },\n        { func: 'blue($color)', desc: localize('scss.builtin.blue', 'Gets the blue component of a color.') },\n        { func: 'mix($color, $color, [$weight])', desc: localize('scss.builtin.mix', 'Mixes two colors together.') },\n        { func: 'hue($color)', desc: localize('scss.builtin.hue', 'Gets the hue component of a color.') },\n        { func: 'saturation($color)', desc: localize('scss.builtin.saturation', 'Gets the saturation component of a color.') },\n        { func: 'lightness($color)', desc: localize('scss.builtin.lightness', 'Gets the lightness component of a color.') },\n        { func: 'adjust-hue($color, $degrees)', desc: localize('scss.builtin.adjust-hue', 'Changes the hue of a color.') },\n        { func: 'lighten($color, $amount)', desc: localize('scss.builtin.lighten', 'Makes a color lighter.') },\n        { func: 'darken($color, $amount)', desc: localize('scss.builtin.darken', 'Makes a color darker.') },\n        { func: 'saturate($color, $amount)', desc: localize('scss.builtin.saturate', 'Makes a color more saturated.') },\n        { func: 'desaturate($color, $amount)', desc: localize('scss.builtin.desaturate', 'Makes a color less saturated.') },\n        { func: 'grayscale($color)', desc: localize('scss.builtin.grayscale', 'Converts a color to grayscale.') },\n        { func: 'complement($color)', desc: localize('scss.builtin.complement', 'Returns the complement of a color.') },\n        { func: 'invert($color)', desc: localize('scss.builtin.invert', 'Returns the inverse of a color.') },\n        { func: 'alpha($color)', desc: localize('scss.builtin.alpha', 'Gets the opacity component of a color.') },\n        { func: 'opacity($color)', desc: 'Gets the alpha component (opacity) of a color.' },\n        { func: 'rgba($color, $alpha)', desc: localize('scss.builtin.rgba', 'Changes the alpha component for a color.') },\n        { func: 'opacify($color, $amount)', desc: localize('scss.builtin.opacify', 'Makes a color more opaque.') },\n        { func: 'fade-in($color, $amount)', desc: localize('scss.builtin.fade-in', 'Makes a color more opaque.') },\n        { func: 'transparentize($color, $amount)', desc: localize('scss.builtin.transparentize', 'Makes a color more transparent.') },\n        { func: 'fade-out($color, $amount)', desc: localize('scss.builtin.fade-out', 'Makes a color more transparent.') },\n        { func: 'adjust-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.adjust-color', 'Increases or decreases one or more components of a color.') },\n        { func: 'scale-color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.scale-color', 'Fluidly scales one or more properties of a color.') },\n        { func: 'change-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.change-color', 'Changes one or more properties of a color.') },\n        { func: 'ie-hex-str($color)', desc: localize('scss.builtin.ie-hex-str', 'Converts a color into the format understood by IE filters.') }\n    ];\n    SCSSCompletion.selectorFuncs = [\n        { func: 'selector-nest($selectors…)', desc: localize('scss.builtin.selector-nest', 'Nests selector beneath one another like they would be nested in the stylesheet.') },\n        { func: 'selector-append($selectors…)', desc: localize('scss.builtin.selector-append', 'Appends selectors to one another without spaces in between.') },\n        { func: 'selector-extend($selector, $extendee, $extender)', desc: localize('scss.builtin.selector-extend', 'Extends $extendee with $extender within $selector.') },\n        { func: 'selector-replace($selector, $original, $replacement)', desc: localize('scss.builtin.selector-replace', 'Replaces $original with $replacement within $selector.') },\n        { func: 'selector-unify($selector1, $selector2)', desc: localize('scss.builtin.selector-unify', 'Unifies two selectors to produce a selector that matches elements matched by both.') },\n        { func: 'is-superselector($super, $sub)', desc: localize('scss.builtin.is-superselector', 'Returns whether $super matches all the elements $sub does, and possibly more.') },\n        { func: 'simple-selectors($selector)', desc: localize('scss.builtin.simple-selectors', 'Returns the simple selectors that comprise a compound selector.') },\n        { func: 'selector-parse($selector)', desc: localize('scss.builtin.selector-parse', 'Parses a selector into the format returned by &.') }\n    ];\n    SCSSCompletion.builtInFuncs = [\n        { func: 'unquote($string)', desc: localize('scss.builtin.unquote', 'Removes quotes from a string.') },\n        { func: 'quote($string)', desc: localize('scss.builtin.quote', 'Adds quotes to a string.') },\n        { func: 'str-length($string)', desc: localize('scss.builtin.str-length', 'Returns the number of characters in a string.') },\n        { func: 'str-insert($string, $insert, $index)', desc: localize('scss.builtin.str-insert', 'Inserts $insert into $string at $index.') },\n        { func: 'str-index($string, $substring)', desc: localize('scss.builtin.str-index', 'Returns the index of the first occurance of $substring in $string.') },\n        { func: 'str-slice($string, $start-at, [$end-at])', desc: localize('scss.builtin.str-slice', 'Extracts a substring from $string.') },\n        { func: 'to-upper-case($string)', desc: localize('scss.builtin.to-upper-case', 'Converts a string to upper case.') },\n        { func: 'to-lower-case($string)', desc: localize('scss.builtin.to-lower-case', 'Converts a string to lower case.') },\n        { func: 'percentage($number)', desc: localize('scss.builtin.percentage', 'Converts a unitless number to a percentage.'), type: 'percentage' },\n        { func: 'round($number)', desc: localize('scss.builtin.round', 'Rounds a number to the nearest whole number.') },\n        { func: 'ceil($number)', desc: localize('scss.builtin.ceil', 'Rounds a number up to the next whole number.') },\n        { func: 'floor($number)', desc: localize('scss.builtin.floor', 'Rounds a number down to the previous whole number.') },\n        { func: 'abs($number)', desc: localize('scss.builtin.abs', 'Returns the absolute value of a number.') },\n        { func: 'min($numbers)', desc: localize('scss.builtin.min', 'Finds the minimum of several numbers.') },\n        { func: 'max($numbers)', desc: localize('scss.builtin.max', 'Finds the maximum of several numbers.') },\n        { func: 'random([$limit])', desc: localize('scss.builtin.random', 'Returns a random number.') },\n        { func: 'length($list)', desc: localize('scss.builtin.length', 'Returns the length of a list.') },\n        { func: 'nth($list, $n)', desc: localize('scss.builtin.nth', 'Returns a specific item in a list.') },\n        { func: 'set-nth($list, $n, $value)', desc: localize('scss.builtin.set-nth', 'Replaces the nth item in a list.') },\n        { func: 'join($list1, $list2, [$separator])', desc: localize('scss.builtin.join', 'Joins together two lists into one.') },\n        { func: 'append($list1, $val, [$separator])', desc: localize('scss.builtin.append', 'Appends a single value onto the end of a list.') },\n        { func: 'zip($lists)', desc: localize('scss.builtin.zip', 'Combines several lists into a single multidimensional list.') },\n        { func: 'index($list, $value)', desc: localize('scss.builtin.index', 'Returns the position of a value within a list.') },\n        { func: 'list-separator(#list)', desc: localize('scss.builtin.list-separator', 'Returns the separator of a list.') },\n        { func: 'map-get($map, $key)', desc: localize('scss.builtin.map-get', 'Returns the value in a map associated with a given key.') },\n        { func: 'map-merge($map1, $map2)', desc: localize('scss.builtin.map-merge', 'Merges two maps together into a new map.') },\n        { func: 'map-remove($map, $keys)', desc: localize('scss.builtin.map-remove', 'Returns a new map with keys removed.') },\n        { func: 'map-keys($map)', desc: localize('scss.builtin.map-keys', 'Returns a list of all keys in a map.') },\n        { func: 'map-values($map)', desc: localize('scss.builtin.map-values', 'Returns a list of all values in a map.') },\n        { func: 'map-has-key($map, $key)', desc: localize('scss.builtin.map-has-key', 'Returns whether a map has a value associated with a given key.') },\n        { func: 'keywords($args)', desc: localize('scss.builtin.keywords', 'Returns the keywords passed to a function that takes variable arguments.') },\n        { func: 'feature-exists($feature)', desc: localize('scss.builtin.feature-exists', 'Returns whether a feature exists in the current Sass runtime.') },\n        { func: 'variable-exists($name)', desc: localize('scss.builtin.variable-exists', 'Returns whether a variable with the given name exists in the current scope.') },\n        { func: 'global-variable-exists($name)', desc: localize('scss.builtin.global-variable-exists', 'Returns whether a variable with the given name exists in the global scope.') },\n        { func: 'function-exists($name)', desc: localize('scss.builtin.function-exists', 'Returns whether a function with the given name exists.') },\n        { func: 'mixin-exists($name)', desc: localize('scss.builtin.mixin-exists', 'Returns whether a mixin with the given name exists.') },\n        { func: 'inspect($value)', desc: localize('scss.builtin.inspect', 'Returns the string representation of a value as it would be represented in Sass.') },\n        { func: 'type-of($value)', desc: localize('scss.builtin.type-of', 'Returns the type of a value.') },\n        { func: 'unit($number)', desc: localize('scss.builtin.unit', 'Returns the unit(s) associated with a number.') },\n        { func: 'unitless($number)', desc: localize('scss.builtin.unitless', 'Returns whether a number has units.') },\n        { func: 'comparable($number1, $number2)', desc: localize('scss.builtin.comparable', 'Returns whether two numbers can be added, subtracted, or compared.') },\n        { func: 'call($name, $args…)', desc: localize('scss.builtin.call', 'Dynamically calls a Sass function.') }\n    ];\n    SCSSCompletion.scssAtDirectives = [\n        {\n            label: \"@extend\",\n            documentation: localize(\"scss.builtin.@extend\", \"Inherits the styles of another selector.\"),\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@at-root\",\n            documentation: localize(\"scss.builtin.@at-root\", \"Causes one or more rules to be emitted at the root of the document.\"),\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@debug\",\n            documentation: localize(\"scss.builtin.@debug\", \"Prints the value of an expression to the standard error output stream. Useful for debugging complicated Sass files.\"),\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@warn\",\n            documentation: localize(\"scss.builtin.@warn\", \"Prints the value of an expression to the standard error output stream. Useful for libraries that need to warn users of deprecations or recovering from minor mixin usage mistakes. Warnings can be turned off with the `--quiet` command-line option or the `:quiet` Sass option.\"),\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@error\",\n            documentation: localize(\"scss.builtin.@error\", \"Throws the value of an expression as a fatal error with stack trace. Useful for validating arguments to mixins and functions.\"),\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@if\",\n            documentation: localize(\"scss.builtin.@if\", \"Includes the body if the expression does not evaluate to `false` or `null`.\"),\n            insertText: \"@if ${1:expr} {\\n\\t$0\\n}\",\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@for\",\n            documentation: localize(\"scss.builtin.@for\", \"For loop that repeatedly outputs a set of styles for each `$var` in the `from/through` or `from/to` clause.\"),\n            insertText: \"@for \\\\$${1:var} from ${2:start} ${3|to,through|} ${4:end} {\\n\\t$0\\n}\",\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@each\",\n            documentation: localize(\"scss.builtin.@each\", \"Each loop that sets `$var` to each item in the list or map, then outputs the styles it contains using that value of `$var`.\"),\n            insertText: \"@each \\\\$${1:var} in ${2:list} {\\n\\t$0\\n}\",\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@while\",\n            documentation: localize(\"scss.builtin.@while\", \"While loop that takes an expression and repeatedly outputs the nested styles until the statement evaluates to `false`.\"),\n            insertText: \"@while ${1:condition} {\\n\\t$0\\n}\",\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@mixin\",\n            documentation: localize(\"scss.builtin.@mixin\", \"Defines styles that can be re-used throughout the stylesheet with `@include`.\"),\n            insertText: \"@mixin ${1:name} {\\n\\t$0\\n}\",\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@include\",\n            documentation: localize(\"scss.builtin.@include\", \"Includes the styles defined by another mixin into the current rule.\"),\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n    ];\n    return SCSSCompletion;\n}(_cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSCompletion\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js ***!
  \**********************************************************************************************************************/
/*! exports provided: Element, RootElement, LabelElement, toElement, selectorToMarkedString, simpleSelectorToMarkedString, selectorToElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RootElement\", function() { return RootElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LabelElement\", function() { return LabelElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toElement\", function() { return toElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectorToMarkedString\", function() { return selectorToMarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simpleSelectorToMarkedString\", function() { return simpleSelectorToMarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectorToElement\", function() { return selectorToElement; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar Element = /** @class */ (function () {\n    function Element() {\n    }\n    Element.prototype.findAttribute = function (name) {\n        if (this.attributes) {\n            for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n                var attribute = _a[_i];\n                if (attribute.name === name) {\n                    return attribute.value;\n                }\n            }\n        }\n        return null;\n    };\n    Element.prototype.addChild = function (child) {\n        if (child instanceof Element) {\n            child.parent = this;\n        }\n        if (!this.children) {\n            this.children = [];\n        }\n        this.children.push(child);\n    };\n    Element.prototype.append = function (text) {\n        if (this.attributes) {\n            var last = this.attributes[this.attributes.length - 1];\n            last.value = last.value + text;\n        }\n    };\n    Element.prototype.prepend = function (text) {\n        if (this.attributes) {\n            var first = this.attributes[0];\n            first.value = text + first.value;\n        }\n    };\n    Element.prototype.findRoot = function () {\n        var curr = this;\n        while (curr.parent && !(curr.parent instanceof RootElement)) {\n            curr = curr.parent;\n        }\n        return curr;\n    };\n    Element.prototype.removeChild = function (child) {\n        if (this.children) {\n            var index = this.children.indexOf(child);\n            if (index !== -1) {\n                this.children.splice(index, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    Element.prototype.addAttr = function (name, value) {\n        if (!this.attributes) {\n            this.attributes = [];\n        }\n        for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n            var attribute = _a[_i];\n            if (attribute.name === name) {\n                attribute.value += ' ' + value;\n                return;\n            }\n        }\n        this.attributes.push({ name: name, value: value });\n    };\n    Element.prototype.clone = function (cloneChildren) {\n        if (cloneChildren === void 0) { cloneChildren = true; }\n        var elem = new Element();\n        if (this.attributes) {\n            elem.attributes = [];\n            for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n                var attribute = _a[_i];\n                elem.addAttr(attribute.name, attribute.value);\n            }\n        }\n        if (cloneChildren && this.children) {\n            elem.children = [];\n            for (var index = 0; index < this.children.length; index++) {\n                elem.addChild(this.children[index].clone());\n            }\n        }\n        return elem;\n    };\n    Element.prototype.cloneWithParent = function () {\n        var clone = this.clone(false);\n        if (this.parent && !(this.parent instanceof RootElement)) {\n            var parentClone = this.parent.cloneWithParent();\n            parentClone.addChild(clone);\n        }\n        return clone;\n    };\n    return Element;\n}());\n\nvar RootElement = /** @class */ (function (_super) {\n    __extends(RootElement, _super);\n    function RootElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RootElement;\n}(Element));\n\nvar LabelElement = /** @class */ (function (_super) {\n    __extends(LabelElement, _super);\n    function LabelElement(label) {\n        var _this = _super.call(this) || this;\n        _this.addAttr('name', label);\n        return _this;\n    }\n    return LabelElement;\n}(Element));\n\nvar MarkedStringPrinter = /** @class */ (function () {\n    function MarkedStringPrinter(quote) {\n        this.quote = quote;\n        // empty\n    }\n    MarkedStringPrinter.prototype.print = function (element) {\n        this.result = [];\n        if (element instanceof RootElement) {\n            this.doPrint(element.children, 0);\n        }\n        else {\n            this.doPrint([element], 0);\n        }\n        var value = this.result.join('\\n');\n        return [{ language: 'html', value: value }];\n    };\n    MarkedStringPrinter.prototype.doPrint = function (elements, indent) {\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            this.doPrintElement(element, indent);\n            if (element.children) {\n                this.doPrint(element.children, indent + 1);\n            }\n        }\n    };\n    MarkedStringPrinter.prototype.writeLine = function (level, content) {\n        var indent = new Array(level + 1).join('  ');\n        this.result.push(indent + content);\n    };\n    MarkedStringPrinter.prototype.doPrintElement = function (element, indent) {\n        var name = element.findAttribute('name');\n        // special case: a simple label\n        if (element instanceof LabelElement || name === '\\u2026') {\n            this.writeLine(indent, name);\n            return;\n        }\n        // the real deal\n        var content = ['<'];\n        // element name\n        if (name) {\n            content.push(name);\n        }\n        else {\n            content.push('element');\n        }\n        // attributes\n        if (element.attributes) {\n            for (var _i = 0, _a = element.attributes; _i < _a.length; _i++) {\n                var attr = _a[_i];\n                if (attr.name !== 'name') {\n                    content.push(' ');\n                    content.push(attr.name);\n                    var value = attr.value;\n                    if (value) {\n                        content.push('=');\n                        content.push(quotes.ensure(value, this.quote));\n                    }\n                }\n            }\n        }\n        content.push('>');\n        this.writeLine(indent, content.join(''));\n    };\n    return MarkedStringPrinter;\n}());\nvar quotes;\n(function (quotes) {\n    function ensure(value, which) {\n        return which + remove(value) + which;\n    }\n    quotes.ensure = ensure;\n    function remove(value) {\n        var match = value.match(/^['\"](.*)[\"']$/);\n        if (match) {\n            return match[1];\n        }\n        return value;\n    }\n    quotes.remove = remove;\n})(quotes || (quotes = {}));\nfunction toElement(node, parentElement) {\n    var result = new Element();\n    for (var _i = 0, _a = node.getChildren(); _i < _a.length; _i++) {\n        var child = _a[_i];\n        switch (child.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinator:\n                if (parentElement) {\n                    var segments = child.getText().split('&');\n                    if (segments.length === 1) {\n                        // should not happen\n                        result.addAttr('name', segments[0]);\n                        break;\n                    }\n                    result = parentElement.cloneWithParent();\n                    if (segments[0]) {\n                        var root = result.findRoot();\n                        root.prepend(segments[0]);\n                    }\n                    for (var i = 1; i < segments.length; i++) {\n                        if (i > 1) {\n                            var clone = parentElement.cloneWithParent();\n                            result.addChild(clone.findRoot());\n                            result = clone;\n                        }\n                        result.append(segments[i]);\n                    }\n                }\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorPlaceholder:\n                if (child.getText() === '@at-root') {\n                    return result;\n                }\n            // fall through\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector:\n                var text = child.getText();\n                result.addAttr('name', text === '*' ? 'element' : unescape(text));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector:\n                result.addAttr('class', unescape(child.getText().substring(1)));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector:\n                result.addAttr('id', unescape(child.getText().substring(1)));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n                result.addAttr('class', child.getName());\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector:\n                result.addAttr(unescape(child.getText()), '');\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].AttributeSelector:\n                var selector = child;\n                var identifuer = selector.getIdentifier();\n                if (identifuer) {\n                    var expression = selector.getValue();\n                    var operator = selector.getOperator();\n                    var value = void 0;\n                    if (expression) {\n                        switch (unescape(operator.getText())) {\n                            case '|=':\n                                // excatly or followed by -words\n                                value = quotes.remove(unescape(expression.getText())) + \"-\\u2026\";\n                                break;\n                            case '^=':\n                                // prefix\n                                value = quotes.remove(unescape(expression.getText())) + \"\\u2026\";\n                                break;\n                            case '$=':\n                                // suffix\n                                value = \"\\u2026\" + quotes.remove(unescape(expression.getText()));\n                                break;\n                            case '~=':\n                                // one of a list of words\n                                value = \" \\u2026 \" + quotes.remove(unescape(expression.getText())) + \" \\u2026 \";\n                                break;\n                            case '*=':\n                                // substring\n                                value = \"\\u2026\" + quotes.remove(unescape(expression.getText())) + \"\\u2026\";\n                                break;\n                            default:\n                                value = quotes.remove(unescape(expression.getText()));\n                                break;\n                        }\n                    }\n                    result.addAttr(unescape(identifuer.getText()), value);\n                }\n                break;\n        }\n    }\n    return result;\n}\nfunction unescape(content) {\n    var scanner = new _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"Scanner\"]();\n    scanner.setSource(content);\n    var token = scanner.scanUnquotedString();\n    if (token) {\n        return token.text;\n    }\n    return content;\n}\nfunction selectorToSpecificityMarkedString(node) {\n    //https://www.w3.org/TR/selectors-3/#specificity\n    function calculateScore(node) {\n        node.getChildren().forEach(function (element) {\n            switch (element.type) {\n                case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector:\n                    specificity[0] += 1; //a\n                    break;\n                case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector:\n                case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].AttributeSelector:\n                    specificity[1] += 1; //b\n                    break;\n                case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector:\n                    //ignore universal selector\n                    if (element.getText() === \"*\") {\n                        break;\n                    }\n                    specificity[2] += 1; //c\n                    break;\n                case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector:\n                    if (element.getText().match(/^::/)) {\n                        specificity[2] += 1; //c (pseudo element)\n                    }\n                    else {\n                        //ignore psuedo class NOT\n                        if (element.getText().match(/^:not/i)) {\n                            break;\n                        }\n                        specificity[1] += 1; //b (pseudo class)\n                    }\n                    break;\n            }\n            if (element.getChildren().length > 0) {\n                calculateScore(element);\n            }\n        });\n    }\n    var specificity = [0, 0, 0]; //a,b,c\n    calculateScore(node);\n    return localize.apply(void 0, ['specificity', \"[Selector Specificity](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity): ({0}, {1}, {2})\"].concat(specificity));\n}\nfunction selectorToMarkedString(node) {\n    var root = selectorToElement(node);\n    var markedStrings = new MarkedStringPrinter('\"').print(root);\n    markedStrings.push(selectorToSpecificityMarkedString(node));\n    return markedStrings;\n}\nfunction simpleSelectorToMarkedString(node) {\n    var element = toElement(node);\n    var markedStrings = new MarkedStringPrinter('\"').print(element);\n    markedStrings.push(selectorToSpecificityMarkedString(node));\n    return markedStrings;\n}\nvar SelectorElementBuilder = /** @class */ (function () {\n    function SelectorElementBuilder(element) {\n        this.prev = null;\n        this.element = element;\n    }\n    SelectorElementBuilder.prototype.processSelector = function (selector) {\n        var parentElement = null;\n        if (!(this.element instanceof RootElement)) {\n            if (selector.getChildren().some(function (c) { return c.hasChildren() && c.getChild(0).type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinator; })) {\n                var curr = this.element.findRoot();\n                if (curr.parent instanceof RootElement) {\n                    parentElement = this.element;\n                    this.element = curr.parent;\n                    this.element.removeChild(curr);\n                    this.prev = null;\n                }\n            }\n        }\n        for (var _i = 0, _a = selector.getChildren(); _i < _a.length; _i++) {\n            var selectorChild = _a[_i];\n            if (selectorChild instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                if (this.prev instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                    var labelElement = new LabelElement('\\u2026');\n                    this.element.addChild(labelElement);\n                    this.element = labelElement;\n                }\n                else if (this.prev && (this.prev.matches('+') || this.prev.matches('~')) && this.element.parent) {\n                    this.element = this.element.parent;\n                }\n                if (this.prev && this.prev.matches('~')) {\n                    this.element.addChild(toElement(selectorChild));\n                    this.element.addChild(new LabelElement('\\u22EE'));\n                }\n                var thisElement = toElement(selectorChild, parentElement);\n                var root = thisElement.findRoot();\n                this.element.addChild(root);\n                this.element = thisElement;\n            }\n            if (selectorChild instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"] ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorParent ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorSibling ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorAllSiblings) {\n                this.prev = selectorChild;\n            }\n        }\n    };\n    return SelectorElementBuilder;\n}());\nfunction isNewSelectorContext(node) {\n    switch (node.type) {\n        case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n        case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Stylesheet:\n            return true;\n    }\n    return false;\n}\nfunction selectorToElement(node) {\n    if (node.matches('@at-root')) {\n        return null;\n    }\n    var root = new RootElement();\n    var parentRuleSets = [];\n    if (node.getParent() instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n        var parent = node.getParent().getParent(); // parent of the selector's ruleset\n        while (parent && !isNewSelectorContext(parent)) {\n            if (parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n                if (parent.getSelectors().matches('@at-root')) {\n                    break;\n                }\n                parentRuleSets.push(parent);\n            }\n            parent = parent.getParent();\n        }\n    }\n    var builder = new SelectorElementBuilder(root);\n    for (var i = parentRuleSets.length - 1; i >= 0; i--) {\n        var selector = parentRuleSets[i].getSelectors().getChild(0);\n        if (selector) {\n            builder.processSelector(selector);\n        }\n    }\n    builder.processSelector(node);\n    return root;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js ***!
  \*********************************************************************************************************/
/*! exports provided: findFirst, includes, union */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findFirst\", function() { return findFirst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"includes\", function() { return includes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"union\", function() { return union; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nfunction findFirst(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nfunction includes(array, item) {\n    return array.indexOf(item) !== -1;\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var result = [];\n    for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n        var array = arrays_1[_a];\n        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n            var item = array_1[_b];\n            if (!includes(result, item)) {\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL2FycmF5cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvdXRpbHMvYXJyYXlzLmpzP2M4YzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG4vKipcbiAqIFRha2VzIGEgc29ydGVkIGFycmF5IGFuZCBhIGZ1bmN0aW9uIHAuIFRoZSBhcnJheSBpcyBzb3J0ZWQgaW4gc3VjaCBhIHdheSB0aGF0IGFsbCBlbGVtZW50cyB3aGVyZSBwKHgpIGlzIGZhbHNlXG4gKiBhcmUgbG9jYXRlZCBiZWZvcmUgYWxsIGVsZW1lbnRzIHdoZXJlIHAoeCkgaXMgdHJ1ZS5cbiAqIEByZXR1cm5zIHRoZSBsZWFzdCB4IGZvciB3aGljaCBwKHgpIGlzIHRydWUgb3IgYXJyYXkubGVuZ3RoIGlmIG5vIGVsZW1lbnQgZnVsbGZpbGxzIHRoZSBnaXZlbiBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRGaXJzdChhcnJheSwgcCkge1xuICAgIHZhciBsb3cgPSAwLCBoaWdoID0gYXJyYXkubGVuZ3RoO1xuICAgIGlmIChoaWdoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAwOyAvLyBubyBjaGlsZHJlblxuICAgIH1cbiAgICB3aGlsZSAobG93IDwgaGlnaCkge1xuICAgICAgICB2YXIgbWlkID0gTWF0aC5mbG9vcigobG93ICsgaGlnaCkgLyAyKTtcbiAgICAgICAgaWYgKHAoYXJyYXlbbWlkXSkpIHtcbiAgICAgICAgICAgIGhpZ2ggPSBtaWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsb3cgPSBtaWQgKyAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsb3c7XG59XG5leHBvcnQgZnVuY3Rpb24gaW5jbHVkZXMoYXJyYXksIGl0ZW0pIHtcbiAgICByZXR1cm4gYXJyYXkuaW5kZXhPZihpdGVtKSAhPT0gLTE7XG59XG5leHBvcnQgZnVuY3Rpb24gdW5pb24oKSB7XG4gICAgdmFyIGFycmF5cyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIGFycmF5c1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgZm9yICh2YXIgX2EgPSAwLCBhcnJheXNfMSA9IGFycmF5czsgX2EgPCBhcnJheXNfMS5sZW5ndGg7IF9hKyspIHtcbiAgICAgICAgdmFyIGFycmF5ID0gYXJyYXlzXzFbX2FdO1xuICAgICAgICBmb3IgKHZhciBfYiA9IDAsIGFycmF5XzEgPSBhcnJheTsgX2IgPCBhcnJheV8xLmxlbmd0aDsgX2IrKykge1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBhcnJheV8xW19iXTtcbiAgICAgICAgICAgIGlmICghaW5jbHVkZXMocmVzdWx0LCBpdGVtKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js ***!
  \**********************************************************************************************************/
/*! exports provided: values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return values; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction values(obj) {\n    return Object.keys(obj).map(function (k) { return obj[k]; });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL29iamVjdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL29iamVjdHMuanM/MTIxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCBmdW5jdGlvbiB2YWx1ZXMob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrKSB7IHJldHVybiBvYmpba107IH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js ***!
  \**********************************************************************************************************/
/*! exports provided: startsWith, endsWith, difference, getLimitedString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"difference\", function() { return difference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLimitedString\", function() { return getLimitedString; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Computes the difference score for two strings. More similar strings have a higher score.\n * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n * Strings that have a large length difference will get a bad default score 0.\n * Complexity - both time and space O(first.length * second.length)\n * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n *\n * @param first a string\n * @param second a string\n */\nfunction difference(first, second, maxLenDelta) {\n    if (maxLenDelta === void 0) { maxLenDelta = 4; }\n    var lengthDifference = Math.abs(first.length - second.length);\n    // We only compute score if length of the currentWord and length of entry.name are similar.\n    if (lengthDifference > maxLenDelta) {\n        return 0;\n    }\n    // Initialize LCS (largest common subsequence) matrix.\n    var LCS = [];\n    var zeroArray = [];\n    var i, j;\n    for (i = 0; i < second.length + 1; ++i) {\n        zeroArray.push(0);\n    }\n    for (i = 0; i < first.length + 1; ++i) {\n        LCS.push(zeroArray);\n    }\n    for (i = 1; i < first.length + 1; ++i) {\n        for (j = 1; j < second.length + 1; ++j) {\n            if (first[i - 1] === second[j - 1]) {\n                LCS[i][j] = LCS[i - 1][j - 1] + 1;\n            }\n            else {\n                LCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n            }\n        }\n    }\n    return LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n}\n/**\n * Limit of string length.\n */\nfunction getLimitedString(str, ellipsis) {\n    if (ellipsis === void 0) { ellipsis = true; }\n    if (!str) {\n        return '';\n    }\n    if (str.length < 140) {\n        return str;\n    }\n    return str.slice(0, 140) + (ellipsis ? '\\u2026' : '');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL3N0cmluZ3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL3N0cmluZ3MuanM/NDFhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCBmdW5jdGlvbiBzdGFydHNXaXRoKGhheXN0YWNrLCBuZWVkbGUpIHtcbiAgICBpZiAoaGF5c3RhY2subGVuZ3RoIDwgbmVlZGxlLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVlZGxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChoYXlzdGFja1tpXSAhPT0gbmVlZGxlW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vKipcbiAqIERldGVybWluZXMgaWYgaGF5c3RhY2sgZW5kcyB3aXRoIG5lZWRsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuZHNXaXRoKGhheXN0YWNrLCBuZWVkbGUpIHtcbiAgICB2YXIgZGlmZiA9IGhheXN0YWNrLmxlbmd0aCAtIG5lZWRsZS5sZW5ndGg7XG4gICAgaWYgKGRpZmYgPiAwKSB7XG4gICAgICAgIHJldHVybiBoYXlzdGFjay5sYXN0SW5kZXhPZihuZWVkbGUpID09PSBkaWZmO1xuICAgIH1cbiAgICBlbHNlIGlmIChkaWZmID09PSAwKSB7XG4gICAgICAgIHJldHVybiBoYXlzdGFjayA9PT0gbmVlZGxlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGRpZmZlcmVuY2Ugc2NvcmUgZm9yIHR3byBzdHJpbmdzLiBNb3JlIHNpbWlsYXIgc3RyaW5ncyBoYXZlIGEgaGlnaGVyIHNjb3JlLlxuICogV2UgdXNlIGxhcmdlc3QgY29tbW9uIHN1YnNlcXVlbmNlIGR5bmFtaWMgcHJvZ3JhbW1pbmcgYXBwcm9hY2ggYnV0IHBlbmFsaXplIGluIHRoZSBlbmQgZm9yIGxlbmd0aCBkaWZmZXJlbmNlcy5cbiAqIFN0cmluZ3MgdGhhdCBoYXZlIGEgbGFyZ2UgbGVuZ3RoIGRpZmZlcmVuY2Ugd2lsbCBnZXQgYSBiYWQgZGVmYXVsdCBzY29yZSAwLlxuICogQ29tcGxleGl0eSAtIGJvdGggdGltZSBhbmQgc3BhY2UgTyhmaXJzdC5sZW5ndGggKiBzZWNvbmQubGVuZ3RoKVxuICogRHluYW1pYyBwcm9ncmFtbWluZyBMQ1MgY29tcHV0YXRpb24gaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Mb25nZXN0X2NvbW1vbl9zdWJzZXF1ZW5jZV9wcm9ibGVtXG4gKlxuICogQHBhcmFtIGZpcnN0IGEgc3RyaW5nXG4gKiBAcGFyYW0gc2Vjb25kIGEgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkaWZmZXJlbmNlKGZpcnN0LCBzZWNvbmQsIG1heExlbkRlbHRhKSB7XG4gICAgaWYgKG1heExlbkRlbHRhID09PSB2b2lkIDApIHsgbWF4TGVuRGVsdGEgPSA0OyB9XG4gICAgdmFyIGxlbmd0aERpZmZlcmVuY2UgPSBNYXRoLmFicyhmaXJzdC5sZW5ndGggLSBzZWNvbmQubGVuZ3RoKTtcbiAgICAvLyBXZSBvbmx5IGNvbXB1dGUgc2NvcmUgaWYgbGVuZ3RoIG9mIHRoZSBjdXJyZW50V29yZCBhbmQgbGVuZ3RoIG9mIGVudHJ5Lm5hbWUgYXJlIHNpbWlsYXIuXG4gICAgaWYgKGxlbmd0aERpZmZlcmVuY2UgPiBtYXhMZW5EZWx0YSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgLy8gSW5pdGlhbGl6ZSBMQ1MgKGxhcmdlc3QgY29tbW9uIHN1YnNlcXVlbmNlKSBtYXRyaXguXG4gICAgdmFyIExDUyA9IFtdO1xuICAgIHZhciB6ZXJvQXJyYXkgPSBbXTtcbiAgICB2YXIgaSwgajtcbiAgICBmb3IgKGkgPSAwOyBpIDwgc2Vjb25kLmxlbmd0aCArIDE7ICsraSkge1xuICAgICAgICB6ZXJvQXJyYXkucHVzaCgwKTtcbiAgICB9XG4gICAgZm9yIChpID0gMDsgaSA8IGZpcnN0Lmxlbmd0aCArIDE7ICsraSkge1xuICAgICAgICBMQ1MucHVzaCh6ZXJvQXJyYXkpO1xuICAgIH1cbiAgICBmb3IgKGkgPSAxOyBpIDwgZmlyc3QubGVuZ3RoICsgMTsgKytpKSB7XG4gICAgICAgIGZvciAoaiA9IDE7IGogPCBzZWNvbmQubGVuZ3RoICsgMTsgKytqKSB7XG4gICAgICAgICAgICBpZiAoZmlyc3RbaSAtIDFdID09PSBzZWNvbmRbaiAtIDFdKSB7XG4gICAgICAgICAgICAgICAgTENTW2ldW2pdID0gTENTW2kgLSAxXVtqIC0gMV0gKyAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgTENTW2ldW2pdID0gTWF0aC5tYXgoTENTW2kgLSAxXVtqXSwgTENTW2ldW2ogLSAxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIExDU1tmaXJzdC5sZW5ndGhdW3NlY29uZC5sZW5ndGhdIC0gTWF0aC5zcXJ0KGxlbmd0aERpZmZlcmVuY2UpO1xufVxuLyoqXG4gKiBMaW1pdCBvZiBzdHJpbmcgbGVuZ3RoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGltaXRlZFN0cmluZyhzdHIsIGVsbGlwc2lzKSB7XG4gICAgaWYgKGVsbGlwc2lzID09PSB2b2lkIDApIHsgZWxsaXBzaXMgPSB0cnVlOyB9XG4gICAgaWYgKCFzdHIpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICBpZiAoc3RyLmxlbmd0aCA8IDE0MCkge1xuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgICByZXR1cm4gc3RyLnNsaWNlKDAsIDE0MCkgKyAoZWxsaXBzaXMgPyAnXFx1MjAyNicgOiAnJyk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js ***!
  \**************************************************************************************************/
/*! exports provided: Position, Range, Location, LocationLink, Color, ColorInformation, ColorPresentation, FoldingRangeKind, FoldingRange, DiagnosticRelatedInformation, DiagnosticSeverity, Diagnostic, Command, TextEdit, TextDocumentEdit, CreateFile, RenameFile, DeleteFile, WorkspaceEdit, WorkspaceChange, TextDocumentIdentifier, VersionedTextDocumentIdentifier, TextDocumentItem, MarkupKind, MarkupContent, CompletionItemKind, InsertTextFormat, CompletionItem, CompletionList, MarkedString, Hover, ParameterInformation, SignatureInformation, DocumentHighlightKind, DocumentHighlight, SymbolKind, SymbolInformation, DocumentSymbol, CodeActionKind, CodeActionContext, CodeAction, CodeLens, FormattingOptions, DocumentLink, EOL, TextDocument, TextDocumentSaveReason */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return Location; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LocationLink\", function() { return LocationLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return Color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return ColorInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return ColorPresentation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return FoldingRangeKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return FoldingRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return DiagnosticRelatedInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return DiagnosticSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return Diagnostic; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return Command; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return TextEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return TextDocumentEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return CreateFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return RenameFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return DeleteFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return WorkspaceEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return WorkspaceChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return TextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return VersionedTextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return TextDocumentItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return MarkupContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return InsertTextFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return CompletionItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return CompletionList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return MarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return Hover; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return ParameterInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return SignatureInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return DocumentHighlightKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return DocumentHighlight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return SymbolKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return SymbolInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return DocumentSymbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return CodeActionKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return CodeActionContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return CodeAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return CodeLens; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return FormattingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return DocumentLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return EOL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return TextDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentSaveReason\", function() { return TextDocumentSaveReason; });\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nvar Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nvar Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nvar Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nvar LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nvar Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nvar ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nvar ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nvar FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nvar DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nvar DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nvar Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nvar Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nvar TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nvar TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nvar RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nvar DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nvar WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\n\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nvar TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nvar VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nvar TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nvar MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nvar CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nvar InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nvar CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nvar CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nvar ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nvar SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nvar DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nvar DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nvar SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\n\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nvar CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nvar CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nvar CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nvar FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\n\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar EOL = ['\\n', '\\r\\n', '\\r'];\r\nvar TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/css.worker.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/css.worker.js ***!
  \**********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _editor_editor_worker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.worker.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.worker.js\");\n/* harmony import */ var _cssWorker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssWorker.js */ \"./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nself.onmessage = function () {\n    // ignore the first message\n    _editor_editor_worker_js__WEBPACK_IMPORTED_MODULE_0__[\"initialize\"](function (ctx, createData) {\n        return new _cssWorker_js__WEBPACK_IMPORTED_MODULE_1__[\"CSSWorker\"](ctx, createData);\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2Nzcy53b3JrZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2Nzcy53b3JrZXIuanM/MmFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIHdvcmtlciBmcm9tICcuLi8uLi9lZGl0b3IvZWRpdG9yLndvcmtlci5qcyc7XG5pbXBvcnQgeyBDU1NXb3JrZXIgfSBmcm9tICcuL2Nzc1dvcmtlci5qcyc7XG5zZWxmLm9ubWVzc2FnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAvLyBpZ25vcmUgdGhlIGZpcnN0IG1lc3NhZ2VcbiAgICB3b3JrZXIuaW5pdGlhbGl6ZShmdW5jdGlvbiAoY3R4LCBjcmVhdGVEYXRhKSB7XG4gICAgICAgIHJldHVybiBuZXcgQ1NTV29ya2VyKGN0eCwgY3JlYXRlRGF0YSk7XG4gICAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/css.worker.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js ***!
  \*********************************************************************/
/*! exports provided: CSSWorker, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSWorker\", function() { return CSSWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_deps/vscode-css-languageservice/cssLanguageService.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js\");\n/* harmony import */ var _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_deps/vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar CSSWorker = /** @class */ (function () {\n    function CSSWorker(ctx, createData) {\n        this._ctx = ctx;\n        this._languageSettings = createData.languageSettings;\n        this._languageId = createData.languageId;\n        switch (this._languageId) {\n            case 'css':\n                this._languageService = _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getCSSLanguageService\"]();\n                break;\n            case 'less':\n                this._languageService = _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getLESSLanguageService\"]();\n                break;\n            case 'scss':\n                this._languageService = _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getSCSSLanguageService\"]();\n                break;\n            default:\n                throw new Error('Invalid language id: ' + this._languageId);\n        }\n        this._languageService.configure(this._languageSettings);\n    }\n    // --- language service host ---------------\n    CSSWorker.prototype.doValidation = function (uri) {\n        var document = this._getTextDocument(uri);\n        if (document) {\n            var stylesheet = this._languageService.parseStylesheet(document);\n            var diagnostics = this._languageService.doValidation(document, stylesheet);\n            return Promise.resolve(diagnostics);\n        }\n        return Promise.resolve([]);\n    };\n    CSSWorker.prototype.doComplete = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var completions = this._languageService.doComplete(document, position, stylesheet);\n        return Promise.resolve(completions);\n    };\n    CSSWorker.prototype.doHover = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var hover = this._languageService.doHover(document, position, stylesheet);\n        return Promise.resolve(hover);\n    };\n    CSSWorker.prototype.findDefinition = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var definition = this._languageService.findDefinition(document, position, stylesheet);\n        return Promise.resolve(definition);\n    };\n    CSSWorker.prototype.findReferences = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var references = this._languageService.findReferences(document, position, stylesheet);\n        return Promise.resolve(references);\n    };\n    CSSWorker.prototype.findDocumentHighlights = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var highlights = this._languageService.findDocumentHighlights(document, position, stylesheet);\n        return Promise.resolve(highlights);\n    };\n    CSSWorker.prototype.findDocumentSymbols = function (uri) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var symbols = this._languageService.findDocumentSymbols(document, stylesheet);\n        return Promise.resolve(symbols);\n    };\n    CSSWorker.prototype.doCodeActions = function (uri, range, context) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var actions = this._languageService.doCodeActions(document, range, context, stylesheet);\n        return Promise.resolve(actions);\n    };\n    CSSWorker.prototype.findDocumentColors = function (uri) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var colorSymbols = this._languageService.findDocumentColors(document, stylesheet);\n        return Promise.resolve(colorSymbols);\n    };\n    CSSWorker.prototype.getColorPresentations = function (uri, color, range) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var colorPresentations = this._languageService.getColorPresentations(document, stylesheet, color, range);\n        return Promise.resolve(colorPresentations);\n    };\n    CSSWorker.prototype.provideFoldingRanges = function (uri, context) {\n        var document = this._getTextDocument(uri);\n        var ranges = this._languageService.getFoldingRanges(document, context);\n        return Promise.resolve(ranges);\n    };\n    CSSWorker.prototype.doRename = function (uri, position, newName) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var renames = this._languageService.doRename(document, position, newName, stylesheet);\n        return Promise.resolve(renames);\n    };\n    CSSWorker.prototype._getTextDocument = function (uri) {\n        var models = this._ctx.getMirrorModels();\n        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n            var model = models_1[_i];\n            if (model.uri.toString() === uri) {\n                return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextDocument\"].create(uri, this._languageId, model.version, model.getValue());\n            }\n        }\n        return null;\n    };\n    return CSSWorker;\n}());\n\nfunction create(ctx, createData) {\n    return new CSSWorker(ctx, createData);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js":
/*!******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js ***!
  \******************************************************************************/
/*! exports provided: loadMessageBundle, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadMessageBundle\", function() { return loadMessageBundle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction format(message, args) {\n    var result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nfunction localize(key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nfunction loadMessageBundle(file) {\n    return localize;\n}\nfunction config(opt) {\n    return loadMessageBundle;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2ZpbGxlcnMvdnNjb2RlLW5scy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvZmlsbGVycy92c2NvZGUtbmxzLmpzPzMyNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5mdW5jdGlvbiBmb3JtYXQobWVzc2FnZSwgYXJncykge1xuICAgIHZhciByZXN1bHQ7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJlc3VsdCA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBtZXNzYWdlLnJlcGxhY2UoL1xceyhcXGQrKVxcfS9nLCBmdW5jdGlvbiAobWF0Y2gsIHJlc3QpIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IHJlc3RbMF07XG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIGFyZ3NbaW5kZXhdICE9PSAndW5kZWZpbmVkJyA/IGFyZ3NbaW5kZXhdIDogbWF0Y2g7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbG9jYWxpemUoa2V5LCBtZXNzYWdlKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICBhcmdzW19pIC0gMl0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0KG1lc3NhZ2UsIGFyZ3MpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRNZXNzYWdlQnVuZGxlKGZpbGUpIHtcbiAgICByZXR1cm4gbG9jYWxpemU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29uZmlnKG9wdCkge1xuICAgIHJldHVybiBsb2FkTWVzc2FnZUJ1bmRsZTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzPzUxMTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNjb3BlID0gKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsKSB8fFxuICAgICAgICAgICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYpIHx8XG4gICAgICAgICAgICB3aW5kb3c7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbChzY29wZSwgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG4vLyBPbiBzb21lIGV4b3RpYyBlbnZpcm9ubWVudHMsIGl0J3Mgbm90IGNsZWFyIHdoaWNoIG9iamVjdCBgc2V0aW1tZWRpYXRlYCB3YXNcbi8vIGFibGUgdG8gaW5zdGFsbCBvbnRvLiAgU2VhcmNoIGVhY2ggcG9zc2liaWxpdHkgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlXG4vLyBgc2V0aW1tZWRpYXRlYCBsaWJyYXJ5LlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuc2V0SW1tZWRpYXRlKTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5jbGVhckltbWVkaWF0ZSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ })

/******/ });