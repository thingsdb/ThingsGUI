// +build !debug
package main
import "encoding/base64"
// FileMainBundleMinJS is a byte representation for ./static/js/main-bundle-0.0.1-alpha2.min.js
var FileMainBundleMinJS, _ = base64.StdEncoding.DecodeString("!function(e){function t(t){for(var a,i,c=t[0],s=t[1],l=t[2],m=0,d=[];m<c.length;m++)i=c[m],r[i]&&d.push(r[i][0]),r[i]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a]);for(u&&u(t);d.length;)d.shift()();return o.push.apply(o,l||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],a=!0,c=1;c<n.length;c++){var s=n[c];0!==r[s]&&(a=!1)}a&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var a={},r={1:0},o=[];function i(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(){return Promise.resolve()},i.m=e,i.c=a,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(n,a,function(t){return e[t]}.bind(null,a));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/js/",i.oe=function(e){throw console.error(e),e};var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var l=0;l<c.length;l++)t(c[l]);var u=s;o.push([1e3,0]),n()}({1e3:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(77),i=n.n(o),c=(n(591),n(1090)),s=n(558),l=n(1101),u=n(37),m=n.n(u),d=n(19),p=n.n(d),f=n(1060),h=n(1057),g=n(1056),y=n(1073),b=n(1074),v=n(1075),E=n(556),w=n.n(E),k=n(557),O=n.n(k),T=n(270),j=n.n(T),x=n(1052),C=n(1050),q=[{name:"github",icon:"/img/githubLogo.svg",url:"https://github.com/thingsdb"},{name:"facebook",icon:"/img/facebookLogo.png",url:"https://www.facebook.com/transceptor"},{name:"linkedin",icon:"/img/linkedinLogo.png",url:"https://www.linkedin.com/company/transceptor-technology"},{name:"ttWebpage",icon:"/img/TTLogo.png",url:"https://www.transceptor.technology"}],R=function(){var e=r.a.useState(0),t=p()(e,2);t[0],t[1];return r.a.createElement("div",{style:{position:"fixed",left:"50%",transform:"translate(-50%, -2%)",bottom:0,zIndex:2}},r.a.createElement(C.a,null,q.map(function(e,t){return r.a.createElement(x.a,{key:t,href:e.url,variant:"text"},r.a.createElement("img",{alt:e.name,src:e.icon,draggable:"false",width:"40em",style:{opacity:"0.4"}}))})))},S=n(3),P=n.n(S),_=n(47),I=n.n(_),N=n(251),D=n.n(N),L=n(24),A=n.n(L),F=n(319),B=n.n(F),W=n(1058),U=n(1102),M=n(1096),z=n(1010),G=n(8),V=n.n(G),K=n(17),Q=n.n(K),H=function(e){var t=e.dataType,n=e.cb,a=e.name,o=e.input,i=Q()(e,["dataType","cb","name","input"]),c=r.a.useState(""),s=p()(c,2),l=s[0],u=s[1],m=r.a.useState(""),d=p()(m,2),f=d[0],h=d[1];r.a.useEffect(function(){n(l)},[l]),r.a.useEffect(function(){if(null!=o){var e=ba(o);"array"!=e&&"thing"!=e&&u(o)}},[o,t]);var g="number"==t||"string"==t||"closure"==t,y="list"==t,b="boolean"==t,v="blob"==t,E="thing"==t;return r.a.createElement(r.a.Fragment,null,g?r.a.createElement(M.a,V()({margin:"dense",name:a,label:a,type:"text",value:l,spellCheck:!1,onChange:function(e){var n=e.target.value;u(n);var a=function(e){var n=e.length>0,a=n?"":"is required";switch(t){case"number":return n&&(a=Ea(e)?"":"only numbers"),a;case"closure":return n&&(a=/^((?:\|[a-zA-Z\s]*(?:[,][a-zA-Z\s]*)*\|)|(?:\|\|))(?:(?:[\s]|[a-zA-Z0-9,.\*\/+%\-=&\|^?:;!<>])*[a-zA-Z0-9,.\*\/+%\-=&\|^?:;!<>]+)$/.test(e)?"":"closure is not valid"),a;default:return""}}(n);h(a)},fullWidth:!0,helperText:f,error:Boolean(f),placeholder:"closure"==t?"example: |x,y| x+y":""},i)):y?r.a.createElement(te,{cb:function(e){var t="".concat(e);u(t)}}):b?r.a.createElement(de,{input:"boolean"==ba(o)?"".concat(o):"",cb:function(e){u(e)}}):v?r.a.createElement(ie,{cb:function(e){u(e)}}):E?r.a.createElement(M.a,{margin:"dense",name:a,label:a,type:"text",value:"{ }",fullWidth:!0,disabled:!0}):null)};H.defaultProps={input:null},H.propTypes={dataType:P.a.string.isRequired,cb:P.a.func.isRequired,name:P.a.string.isRequired,input:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string])};var J=H;function $(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Y(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Z=Object(z.a)(function(e){return{container:{display:"flex",flexWrap:"wrap",borderLeft:"3px solid ".concat(e.palette.primary.main),borderRight:"3px solid ".concat(e.palette.primary.main),borderRadius:"20px",padding:e.spacing(2),margin:e.spacing(2)},chip:{padding:e.spacing(1),margin:e.spacing(1)}}}),X=["string","number","boolean","closure","nil","list","set","thing"],ee=function(e){var t=e.cb,n=Z(),a=r.a.useRef(null),o=r.a.useState({contentAdd:"",dataType:"string",errors:{}}),i=p()(o,2),c=i[0],s=i[1],l=c.contentAdd,u=c.dataType,m=r.a.useState(100),d=p()(m,2),f=d[0],g=d[1];r.a.useEffect(function(){var e=a.current.offsetWidth;g(Math.max(50,e+1))},[l]);var y=r.a.useState([]),b=p()(y,2),v=b[0],E=b[1];r.a.useEffect(function(){t(v)},[v.length]);var w=function(e){return function(){E(function(t){var n=I()(t);return n.splice(e,1),n})}};return r.a.createElement("div",{className:n.container},r.a.createElement(h.a,{container:!0,spacing:1},r.a.createElement(h.a,{item:!0,xs:12},v.map(function(e,t){return r.a.createElement(U.a,{key:t,id:e,className:n.chip,label:e,onDelete:w(t),color:"primary"})})),r.a.createElement(h.a,{container:!0,item:!0,xs:12,spacing:1,alignItems:"center"},r.a.createElement(h.a,{item:!0},r.a.createElement(M.a,{id:"dataType",type:"text",name:"dataType",onChange:function(e){var t,n=e.target,a=n.name,r=n.value;s(Y({},c,(t={},A()(t,a,r),A()(t,"errors",{}),t)))},value:u,variant:"outlined",select:!0,SelectProps:{native:!0}},X.map(function(e){return r.a.createElement("option",{key:e,value:e},e)}))),r.a.createElement(h.a,{item:!0},r.a.createElement(J,{dataType:u,cb:function(e){s(Y({},c,{contentAdd:e,errors:{}}))},name:"",input:l,variant:"outlined",style:{width:f}})),r.a.createElement(h.a,{item:!0},r.a.createElement(W.a,{color:"primary",onClick:function(){var e,t,n=l.trim(),a=(t=n,"list"===(e=u)?"[".concat(t,"]"):"thing"===e?"{}":"set"===e?"[{}]":"string"===e?"'".concat(t,"'"):"closure"===e||"number"===e||"boolean"===e||"blob"===e?"".concat(t):"nil"===e?"nil":"");E(function(e){var t=I()(e);return t.push(a),t}),s(Y({},c,{contentAdd:""}))},size:"small"},r.a.createElement(B.a,{fontSize:"small"}))))),r.a.createElement("span",{id:"helperspan",ref:a,style:{visibility:"hidden"}},l))};ee.propTypes={cb:P.a.func.isRequired};var te=ee,ne=n(1011),ae=n(559),re=n(153),oe=function(e){var t=e.cb,n=r.a.useState(""),a=p()(n,2),o=a[0],i=a[1],c=r.a.useState(""),s=p()(c,2),l=s[0],u=s[1];r.a.useEffect(function(){t(o)},[o]);var m=r.a.useCallback(function(e){var t=new FileReader;t.onabort=function(){return console.log("file reading was aborted")},t.onerror=function(){return console.log("file reading has failed")},t.onload=function(){var n=t.result,a=btoa(n);i(a),u(e[0].name)},e.forEach(function(e){return t.readAsBinaryString(e)})},[]);return r.a.createElement(h.a,{container:!0,spacing:1},r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(ae.a,{onDrop:function(e){return m(e)}},function(e){var t=e.getRootProps,n=e.getInputProps;return r.a.createElement("section",null,r.a.createElement("div",t(),r.a.createElement("input",n()),r.a.createElement("p",null,'Drag "n" drop some files here, or click to select files')))})),r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(ne.a,{in:Boolean(o),timeout:"auto",unmountOnExit:!0},r.a.createElement(re.a,{variant:"button",color:"primary"},l))))};oe.propTypes={cb:P.a.func.isRequired};var ie=oe,ce=n(1098),se=n(1103),le=n(1059),ue=Object(z.a)(function(){return{dense:{padding:0,margin:0}}}),me=function(e){var t=e.input,n=e.cb,a=ue(),o=r.a.useState(""),i=p()(o,2),c=i[0],s=i[1];r.a.useEffect(function(){n(c)},[c]),r.a.useEffect(function(){s(t)},[t]);return r.a.createElement(se.a,{className:a.dense,"aria-label":"position",name:"value",value:c,onChange:function(e){var t=e.target.value;s(t)},row:!0},r.a.createElement(le.a,{value:"true",control:r.a.createElement(ce.a,{color:"primary"}),label:"true",labelPlacement:"end"}),r.a.createElement(le.a,{value:"false",control:r.a.createElement(ce.a,{color:"primary"}),label:"false",labelPlacement:"end"}))};me.defaultProps={input:""},me.propTypes={cb:P.a.func.isRequired,input:P.a.string};var de=me,pe=n(536),fe=n.n(pe),he=function(e){var t=e.child,n=e.onRemove,a=r.a.useState(1),o=p()(a,2),i=o[0],c=o[1];return r.a.createElement(h.a,{container:!0,spacing:2},function(){for(var e=[],n=0;n<i;n++)e.push(r.a.createElement(h.a,{key:n,item:!0,xs:6},t(n)));return e}(),r.a.createElement(h.a,{container:!0,item:!0,spacing:1,xs:6,justify:"center",alignItems:"center"},r.a.createElement(h.a,{item:!0},r.a.createElement(W.a,{color:"primary",onClick:function(){c(i+1)},size:"small"},r.a.createElement(B.a,{fontSize:"small"}))),r.a.createElement(h.a,{item:!0},r.a.createElement(W.a,{color:"primary",onClick:function(){c(i-1),n(i-1)},disabled:1==i,size:"small"},r.a.createElement(fe.a,{fontSize:"small"})))))};he.propTypes={child:P.a.func.isRequired,onRemove:P.a.func.isRequired};var ge=he,ye=n(238),be=n(537),ve=n.n(be),Ee=function(e){var t=e.children,n=r.a.useState(!1),a=p()(n,2),o=a[0],i=a[1];return r.a.createElement("div",{onMouseLeave:function(){i(!1)}},r.a.createElement("span",{style:{visibility:o?"visible":"hidden"}},t),o?null:r.a.createElement(ye.a,{onClick:function(){i(!0)}},r.a.createElement(ve.a,{color:"primary"})))};Ee.propTypes={children:P.a.arrayOf(P.a.object).isRequired};var we=n(1061),ke=Object(z.a)(function(e){return{card:{width:150,height:150,textAlign:"center",borderRadius:"50%",margin:e.spacing(1)},wrapper:{width:150,height:150,textAlign:"center",borderRadius:"50%",padding:e.spacing(2)}}}),Oe=function(e){var t=e.onClick,n=e.title,a=Q()(e,["onClick","title"]),o=ke();return r.a.createElement(f.a,V()({className:o.card,raised:!0},a),r.a.createElement(we.a,V()({focusRipple:!0,className:o.wrapper,onClick:function(){t()}},a),r.a.createElement(re.a,{variant:"overline"},n)))};Oe.defaultProps={other:{}},Oe.propTypes={onClick:P.a.func.isRequired,title:P.a.string.isRequired,other:P.a.object};var Te=Oe,je=n(1104),xe=Object(z.a)(function(e){return{chip:{padding:e.spacing(1),margin:e.spacing(1)},customWidth:{maxWidth:500}}}),Ce=function(e){var t=e.title,n=e.items,a=e.onAdd,o=e.onClick,i=e.onDelete,c=xe(),s=function(e){return function(){o(e)}},l=function(e){return function(){i(e)}};return r.a.createElement(Ct,{title:t.toUpperCase(),content:r.a.createElement(r.a.Fragment,null,n&&n.length?n.map(function(e,t){return r.a.createElement(je.a,{key:t,disableFocusListener:!0,disableTouchListener:!0,classes:{tooltip:c.customWidth},title:r.a.createElement(re.a,{variant:"caption"},e.doc&&""!=e.doc?e.doc:e.definition)},r.a.createElement(U.a,{clickable:!0,id:e.name,className:c.chip,label:e.name,onClick:s(t),onDelete:l(t),color:"primary"}))}):"No ".concat(t,".")),buttons:r.a.createElement(U.a,{clickable:!0,className:c.chip,label:"ADD",onClick:function(){a()},color:"primary",variant:"outlined"})})};Ce.propTypes={title:P.a.string.isRequired,items:P.a.arrayOf(P.a.object).isRequired,onAdd:P.a.func.isRequired,onClick:P.a.func.isRequired,onDelete:P.a.func.isRequired};var qe=Ce,Re=n(18),Se=n(560),Pe=n(1062),_e=n(539),Ie=n.n(_e),Ne=n(259),De=n.n(Ne);function Le(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Ae(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Le(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Le(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Fe=Object(z.a)(function(e){return{root:{"@global":{"*::-webkit-scrollbar":{width:"0.4em"},"*::-webkit-scrollbar-track":{"-webkit-box-shadow":"inset 0 0 6px rgba(0,0,0,0.00)"},"*::-webkit-scrollbar-thumb":{backgroundColor:e.palette.primary.main,outline:"1px solid slategrey"}}},flex:{display:"flex"},body:{overflowY:"auto",height:"calc(100% - 65px)"},footer:{boxShadow:"0 -2px 10px 0 rgba(31,30,30,1)",borderRadius:20,marginTop:5,height:60},full:{position:"relative",zIndex:1,overflowY:"auto",height:"100vh"},shrink:{position:"relative"},drawerOpen:{boxShadow:"-2px 0 5px 0 rgba(31,30,30,1)",position:"relative",right:0,zIndex:2,height:"100vh"},drawerClose:{marginRight:"0px"},drawerHeader:Ae({display:"flex",alignItems:"center"},e.mixins.toolbar,{justifyContent:"flex-start"}),dragger:{width:5,cursor:"ew-resize",position:"absolute",top:0,bottom:0,zIndex:3},draggerClose:{width:0},open:{display:"block"},close:{display:"none"}}}),Be=function(e){var t=e.open,n=e.onClose,a=e.topbar,o=e.mainContent,i=e.toast,c=e.bottomBar,s=e.drawerTitle,l=e.drawerContent,u=Fe(),m=r.a.useState(!1),d=p()(m,2),h=d[0],g=d[1],y=r.a.useState(600),b=p()(y,2),v=b[0],E=b[1];r.a.useEffect(function(){h?(window.addEventListener("mousemove",w),window.addEventListener("mouseup",k)):(window.removeEventListener("mousemove",w),window.removeEventListener("mouseup",k))},[h]);var w=r.a.useCallback(function(e){var t=document.body.offsetWidth-(e.clientX-document.body.offsetLeft);t>400&&E(t)},[E]),k=r.a.useCallback(function(){g(!1)},[g]);return r.a.createElement("div",{className:u.root},r.a.createElement("div",{className:u.flex},r.a.createElement("div",{className:Object(Re.a)(u.full,A()({},u.shrink,t)),style:t?{width:"calc(100% - ".concat(v,"px)")}:{width:"100%"}},r.a.createElement("div",{className:u.body},a,o),r.a.createElement("div",{className:u.footer},c)),r.a.createElement(f.a,{className:Object(Re.a)(u.drawerClose,A()({},u.drawerOpen,t)),style:t?{width:v}:{width:"0%"}},r.a.createElement("div",{onMouseDown:function(){g(!0)},className:t?u.dragger:u.draggerClose}),r.a.createElement("div",{className:t?u.open:u.close},r.a.createElement("div",{className:u.drawerHeader},r.a.createElement(Se.a,{onClick:n},t?r.a.createElement(De.a,null):r.a.createElement(Ie.a,null)),r.a.createElement(re.a,{variant:"body1"},s)),r.a.createElement(Pe.a,null),l)),i))};Be.propTypes={open:P.a.bool.isRequired,onClose:P.a.func.isRequired,topbar:P.a.object.isRequired,mainContent:P.a.object.isRequired,toast:P.a.object.isRequired,bottomBar:P.a.object.isRequired,drawerTitle:P.a.string.isRequired,drawerContent:P.a.object.isRequired};var We=Be,Ue=n(788),Me=n(322),ze=n.n(Me),Ge=n(1064),Ve=n(321),Ke=n.n(Ve),Qe=n(1063),He=n(66),Je=n.n(He),$e=n(67),Ye=n.n($e),Ze=n(87),Xe=n.n(Ze),et=n(88),tt=n.n(et),nt=n(89),at=n.n(nt),rt=m.a.createActions(["setToastError","removeToastError","resetToastError","setMsgError","removeMsgError"]),ot=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,rt))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onSetToastError",value:function(e){this.setState(function(t){return{toastErrors:I()(new Set([].concat(I()(t.toastErrors),[e])))}})}},{key:"onRemoveToastError",value:function(e){this.setState(function(t){var n=I()(t.toastErrors);return n.splice(e,1),{toastErrors:n}})}},{key:"onResetToastError",value:function(){this.setState({toastErrors:[]})}},{key:"onSetMsgError",value:function(e,t){var n=this.state,a=n.toastErrors,r=n.msgError;console.log("errors in store: ",a,r),this.setState(function(n){return{msgError:V()({},n.msgError,A()({},e,t))}})}},{key:"onRemoveMsgError",value:function(e){var t=this.state,n=t.toastErrors,a=t.msgError;console.log("errors in store: ",n,a),this.setState(function(t){var n=JSON.parse(JSON.stringify(t.msgError));return delete n[e],{msgError:n}})}}]),t}(m.a.Store);A()(ot,"types",{toastErrors:P.a.arrayOf(P.a.string),msgError:P.a.object}),A()(ot,"defaults",{toastErrors:[],msgError:{}});var it=Object(z.a)(function(e){return{avatar:{backgroundColor:"transparent"},div:{minWidth:280,maxWidth:300},multiline:{whiteSpace:"pre-wrap"},warning:{color:Qe.a[700]},typography:{marginBottom:e.spacing(1)}}}),ct=Object(u.withVlow)([{store:ot,keys:["msgError"]}]),st=function(e){var t=e.tag,n=e.msgError,a=it();r.a.useEffect(function(){return function(){return o()}},[]);var o=function(){rt.removeMsgError(t)};return r.a.createElement(r.a.Fragment,null,r.a.createElement(ne.a,{in:Boolean(n[t]),timeout:"auto",unmountOnExit:!0},r.a.createElement(re.a,{className:a.typography,component:"div",variant:"caption"},r.a.createElement(h.a,{component:"label",container:!0,alignItems:"center",spacing:1},r.a.createElement(h.a,{item:!0},r.a.createElement(Ue.a,{className:a.avatar},r.a.createElement(Ke.a,{className:a.warning}))),r.a.createElement(h.a,{item:!0,className:a.div},n[t]&&n[t].includes("https")?n[t].substring(0,n[t].search(/https/)):n[t],r.a.createElement(Ge.a,{href:n[t]&&n[t].substring(n[t].search(/https/),n[t].length)},n[t]&&n[t].includes("https")?n[t].substring(n[t].search(/https/),n[t].length):"")),r.a.createElement(h.a,{item:!0},r.a.createElement(Se.a,{"aria-label":"settings",onClick:o},r.a.createElement(ze.a,null)))))))};st.propTypes={msgError:ot.types.msgError.isRequired,tag:P.a.string.isRequired};var lt=ct(st),ut=n(1066),mt=n(1067),dt=n(1068),pt=n(1069),ft=n(1065),ht=n(182),gt=n.n(ht),yt=Object(z.a)(function(e){return{card:{backgroundColor:Qe.a[700],margin:e.spacing(1)},panel:{backgroundColor:Qe.a[700]},portal:{position:"absolute",bottom:"1%",right:"1%",width:"400px",zIndex:"3"}}}),bt=Object(u.withVlow)([{store:ot,keys:["toastErrors"]}]),vt=function(e){var t=e.toastErrors,n=yt(),a=function(e){return function(){rt.removeToastError(e)}};return r.a.createElement("div",{className:n.portal},r.a.createElement("ul",null,I()(t).map(function(e,t){return r.a.createElement(ft.a,{key:t,direction:"up",in:!0,timeout:{enter:500}},r.a.createElement(f.a,{className:n.card},r.a.createElement(ut.a,{className:n.panel},r.a.createElement(mt.a,{expandIcon:r.a.createElement(gt.a,null),"aria-controls":"panel1a-content",id:"panel1a-header"},r.a.createElement(Ke.a,null),r.a.createElement(re.a,null,"Warning")),r.a.createElement(dt.a,null,r.a.createElement(re.a,{variant:"caption"},e)),r.a.createElement(pt.a,null,r.a.createElement(Se.a,{onClick:a(t)},r.a.createElement(ze.a,null))))))})))};vt.propTypes={toastErrors:ot.types.toastErrors.isRequired};var Et=bt(vt),wt=n(1070),kt=n(1071),Ot=n(1072),Tt=n(323),jt=n.n(Tt),xt=function(e){var t=e.title,n=e.content,a=e.buttons,o=r.a.useState(!0),i=p()(o,2),c=i[0],s=i[1];return r.a.createElement(f.a,null,r.a.createElement(wt.a,{action:r.a.createElement(Se.a,{onClick:function(){s(!c)}},c?r.a.createElement(jt.a,null):r.a.createElement(gt.a,null)),title:t,titleTypographyProps:{variant:"body1"}}),r.a.createElement(ne.a,{in:c,timeout:"auto",unmountOnExit:!0},r.a.createElement(kt.a,null,n),a?r.a.createElement(Ot.a,null,a):null))};xt.defaultProps={buttons:null},xt.propTypes={title:P.a.string.isRequired,content:P.a.object.isRequired,buttons:P.a.object};var Ct=xt,qt=Object(z.a)(function(e){return{grid:{marginTop:e.spacing(1),marginBottom:e.spacing(1)}}}),Rt=function(e){var t=e.header,n=e.content,a=qt();return r.a.createElement(h.a,{container:!0,spacing:1},t.map(function(e){return r.a.createElement(r.a.Fragment,{key:e.ky},r.a.createElement(h.a,{item:!0,xs:12,className:a.grid},r.a.createElement(re.a,{variant:"subtitle2",color:"primary"},e.title+":"),r.a.createElement(Pe.a,null)),e.labels.map(function(e){return r.a.createElement(r.a.Fragment,{key:e.ky},r.a.createElement(h.a,{container:!0,item:!0,xs:12},r.a.createElement(h.a,{item:!0,xs:6},r.a.createElement(re.a,{variant:"caption"},e.label+":")),r.a.createElement(h.a,{item:!0,xs:6},r.a.createElement(re.a,{variant:"subtitle2"},n[e.ky]))))}))}))};Rt.propTypes={header:P.a.arrayOf(P.a.object).isRequired,content:P.a.object.isRequired};var St=Rt,Pt=n(541),_t=n.n(Pt),It=Object(z.a)(function(e){return{root:{width:"100%",backgroundColor:e.palette.background.paper},nested:{paddingLeft:e.spacing(4)},nestedAdd:{padding:0}}}),Nt=function(e){var t=e.title,n=e.icon,a=e.items,o=e.addItem,i=e.onClickItem,c=It(),s=r.a.useState(!1),l=p()(s,2),u=l[0],m=l[1],d=function(e){return function(){i(e)}};return r.a.createElement(r.a.Fragment,null,r.a.createElement(g.a,{className:c.root,dense:!0,disablePadding:!0},r.a.createElement(y.a,{button:!0,onClick:function(){m(!u)}},r.a.createElement(b.a,null,u?r.a.createElement(gt.a,null):r.a.createElement(De.a,null)),r.a.createElement(v.a,{primary:t})),r.a.createElement(ne.a,{in:u,timeout:"auto",unmountOnExit:!0},r.a.createElement(g.a,{component:"div",disablePadding:!0},a.length?a.map(function(e,t){return r.a.createElement(y.a,{key:t,button:!0,className:c.nested,onClick:d(t)},r.a.createElement(b.a,null,n),r.a.createElement(v.a,{primary:e.name}))}):r.a.createElement(y.a,{button:!0,className:c.nested},r.a.createElement(b.a,null,r.a.createElement(_t.a,null)),r.a.createElement(v.a,{primaryTypographyProps:{variant:"caption",color:"error"}})),r.a.createElement(Pe.a,null),r.a.createElement(y.a,{className:c.nestedAdd},o)))))};Nt.propTypes={title:P.a.string.isRequired,items:P.a.arrayOf(P.a.object).isRequired,icon:P.a.element.isRequired,addItem:P.a.object.isRequired,onClickItem:P.a.func.isRequired};var Dt=Nt,Lt=n(1100),At=n(1079),Ft=n(1077),Bt=n(1078),Wt=n(1076),Ut=function(e){var t=e.open,n=e.onClose,a=e.error;return r.a.createElement("div",null,r.a.createElement(Lt.a,{"aria-describedby":"server-error-dialog-description","aria-labelledby":"server-error-dialog-title",onClose:n,open:t},r.a.createElement(Wt.a,{id:"server-error-dialog-title"},"Server error"),r.a.createElement(Ft.a,null,r.a.createElement(Bt.a,{id:"server-error-dialog-description"},a)),r.a.createElement(At.a,null,r.a.createElement(x.a,{onClick:n,color:"primary"},"CLOSE"))))};Ut.propTypes={error:P.a.string,onClose:P.a.func.isRequired,open:P.a.bool.isRequired},Ut.defaultProps={error:""};var Mt=function(e){var t=e.children,n=e.button,a=e.title,o=e.actionButtons,i=e.open,c=e.onOk,s=e.onClose,l=e.onKeyPress,u=function(){s()};return r.a.createElement(r.a.Fragment,null,n,r.a.createElement(Lt.a,{open:i,onClose:u,"aria-labelledby":"form-dialog-title",fullWidth:!0,maxWidth:"xs",onKeyDown:l},r.a.createElement(Wt.a,{id:"form-dialog-title"},a),r.a.createElement(Ft.a,null,t),r.a.createElement(At.a,null,o,r.a.createElement(x.a,{onClick:u,color:"primary"},"Cancel"),c?r.a.createElement(x.a,{onClick:function(){c()},color:"primary"},"Ok"):null)))};Mt.defaultProps={actionButtons:null,onOk:function(){return null},onKeyPress:function(){return null}},Mt.propTypes={children:P.a.object.isRequired,button:P.a.object.isRequired,title:P.a.string.isRequired,actionButtons:P.a.object,open:P.a.bool.isRequired,onOk:P.a.func,onClose:P.a.func.isRequired,onKeyPress:P.a.func};var zt=Mt,Gt=n(543),Vt=n.n(Gt),Kt=n(542),Qt=n.n(Kt),Ht=n(1105),Jt=function(e){var t=e.children,n=e.activeStep,a=e.maxSteps,o=e.onNext,i=e.onBack;return r.a.createElement(h.a,{container:!0,spacing:1},r.a.createElement(h.a,{item:!0,xs:12},t),r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(Ht.a,{steps:a,position:"static",variant:"text",activeStep:n,nextButton:r.a.createElement(x.a,{size:"small",onClick:function(){o()},disabled:n===a-1},"Next",r.a.createElement(Qt.a,null)),backButton:r.a.createElement(x.a,{size:"small",onClick:function(){i()},disabled:0===n},r.a.createElement(Vt.a,null),"Back")})))};Jt.propTypes={children:P.a.object.isRequired,activeStep:P.a.number.isRequired,maxSteps:P.a.number.isRequired,onNext:P.a.func.isRequired,onBack:P.a.func.isRequired};var $t=Jt,Yt=n(1095),Zt=n(1080),Xt=n(1084),en=n(1083),tn=n(1081),nn=n(1082),an=function(e){var t=e.header,n=e.rows,a=e.rowClick,o=e.buttons,i=function(e){return function(){a(e)}};return r.a.createElement(r.a.Fragment,null,r.a.createElement(Zt.a,{padding:"none"},r.a.createElement(tn.a,null,r.a.createElement(nn.a,null,t.map(function(e,t){return r.a.createElement(en.a,{key:e.ky,align:t?"right":"left"},r.a.createElement(re.a,{variant:"caption",color:"primary",align:t?"right":"left"},e.label))}),r.a.createElement(en.a,null))),r.a.createElement(Xt.a,null,n.map(function(e,n){return r.a.createElement(nn.a,{key:n,onClick:i(e)},t.map(function(t,n){return r.a.createElement(en.a,{key:t.ky,align:n?"right":"left"},r.a.createElement(re.a,{component:"div"},r.a.createElement(Yt.a,{fontFamily:"Monospace",fontSize:"body1.fontSize",m:1},e[t.ky])))}),r.a.createElement(en.a,{align:"right"},o(e)))}))))};an.propTypes={header:P.a.arrayOf(P.a.object).isRequired,rows:P.a.arrayOf(P.a.object).isRequired,rowClick:P.a.func.isRequired,buttons:P.a.func.isRequired};var rn=an,on=Object(z.a)(function(e){return{nested:{paddingLeft:e.spacing(4)},listItem:{margin:0,padding:0}}}),cn=function e(t){var n=t.item,a=t.tree,o=t.child,i=on(),c=null===n?a:n,s=function(t){var n=p()(t,3),o=n[0],c=n[1],s=n[2],l=void 0===s?null:s;return"#"===o?null:r.a.createElement("div",{key:l||o,className:i.nested},r.a.createElement(e,{item:c,tree:a,child:{name:Ta(o,l),index:l}}))},l=ba(c),u=va(l,c),m="thing"===l||"object"===l||"array"===l||"set"===l;return r.a.createElement(zn,{name:o.name,type:l,val:u,canToggle:m,onRenderChildren:function(){return Array.isArray(c)?c.map(function(e,t){return s(["".concat(o?o.name:t),e,t])}):Object.entries(n&&a[n["#"]]||c||{}).map(s)}})};cn.defaultProps={item:null},cn.propTypes={item:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]),tree:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]).isRequired,child:P.a.shape({name:P.a.string,index:P.a.number}).isRequired};var sn=cn,ln=function(e){var t=e.cb,n=r.a.useState(""),a=p()(n,2),o=a[0],i=a[1];r.a.useEffect(function(){t(o)},[o]);var c=(new Date).toISOString().substring(0,16);return r.a.createElement(M.a,{id:"time",label:"Time (UTC)",type:"datetime-local",defaultValue:c,fullWidth:!0,onChange:function(e){var t=e.target.value;i(t)},InputLabelProps:{shrink:!0}})};ln.propTypes={cb:P.a.func.isRequired};var un=ln;function mn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}var dn=[{label:"Second",value:"1"},{label:"Minute",value:"60"},{label:"Hour",value:"60*60"},{label:"Day",value:"60*60*24"},{label:"Week",value:"60*60*24*7"}],pn=function(e){var t=e.cb,n=r.a.useState({number:"1",unit:dn[0].value}),a=p()(n,2),o=a[0],i=a[1];r.a.useEffect(function(){t("".concat(o.number,"*").concat(o.unit))},[o.number,o.unit]);var c=function(e){var t=e.target,n=t.id,a=t.value;i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?mn(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):mn(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({},o,A()({},n,a)))};return r.a.createElement(h.a,{item:!0,container:!0,xs:12,spacing:1},r.a.createElement(h.a,{item:!0,xs:3},r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"number",inputProps:{min:"1"},type:"number",value:o.number,spellCheck:!1,onChange:c,fullWidth:!0})),r.a.createElement(h.a,{item:!0,xs:4},r.a.createElement(M.a,{margin:"dense",id:"unit",value:o.unit,onChange:c,fullWidth:!0,select:!0,SelectProps:{native:!0}},dn.map(function(e){var t=e.label,n=e.value;return r.a.createElement("option",{key:t,value:n},t)}))))};pn.propTypes={cb:P.a.func.isRequired};var fn=pn,hn=function(e){var t=e.preTitle,n=e.title,a=e.content;return r.a.createElement(h.a,{container:!0,spacing:1},r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(f.a,null,r.a.createElement(kt.a,null,r.a.createElement(re.a,{variant:"body1"},t),r.a.createElement(re.a,{variant:"h4",color:"primary"},n)))),r.a.createElement(h.a,{container:!0,item:!0,spacing:1,alignItems:"flex-start"},a))};hn.propTypes={preTitle:P.a.string.isRequired,title:P.a.string.isRequired,content:P.a.object.isRequired};var gn=hn,yn=function(e){var t=e.preTitle,n=e.title,a=e.sideContent,o=e.content;return r.a.createElement(h.a,{container:!0,spacing:1,alignItems:"flex-start"},r.a.createElement(h.a,{container:!0,spacing:1,item:!0,md:9,sm:12},r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(f.a,null,r.a.createElement(kt.a,null,r.a.createElement(re.a,{variant:"body1"},t),r.a.createElement(re.a,{variant:"h4",color:"primary"},n)))),o),r.a.createElement(h.a,{container:!0,spacing:1,item:!0,md:3,sm:12},a))};yn.propTypes={preTitle:P.a.string.isRequired,title:P.a.string.isRequired,sideContent:P.a.object.isRequired,content:P.a.object.isRequired};var bn=yn,vn=n(1054),En=Object(z.a)(function(){return{flex:{flexGrow:1},menu:{top:40,position:"relative"}}}),wn=function(e){var t=e.children,n=e.menuIcon,a=En(),o=r.a.useState(null),i=p()(o,2),c=i[0],s=i[1];r.a.useEffect(function(){return document.addEventListener("mousedown",l),function(){document.removeEventListener("mousedown",l)}},[]);var l=r.a.useCallback(function(){return s(null)},[s]),u=Boolean(c);return r.a.createElement(r.a.Fragment,null,r.a.createElement(je.a,{disableFocusListener:!0,disableTouchListener:!0,title:"menu"},r.a.createElement("div",null,r.a.createElement(Se.a,{"aria-haspopup":"true","aria-owns":u?"menu":null,color:"inherit",onClick:function(e){var t=e.currentTarget;s(t)}},n))),r.a.createElement(vn.a,{id:"menu",className:a.menu,anchorEl:c,anchorOrigin:{vertical:"top",horizontal:"right"},transformOrigin:{vertical:"top",horizontal:"right"},onClose:l,open:u},t))};wn.propTypes={children:P.a.object.isRequired,menuIcon:P.a.object.isRequired};var kn=wn,On=n(547),Tn=n.n(On),jn=n(546),xn=n.n(jn),Cn=n(1085),qn=n(545),Rn=n.n(qn).a.connect("".concat(window.location.protocol,"//").concat(window.location.host),{reconnection:!0,reconnectionDelay:1e3,reconnectionDelayMax:5e3,reconnectionAttempts:1/0,transports:["websocket"]}),Sn=function(){function e(t){var n=this;Je()(this,e);for(var a=arguments.length,r=new Array(a>1?a-1:0),o=1;o<a;o++)r[o-1]=arguments[o];window.console.debug('Socket request: "'.concat(t,'"'),r);var i=setTimeout(function(){window.console.warn('No result for request "'.concat(t,'" within 3 seconds.'))},3e3);Rn.emit.apply(Rn,[t].concat(r,[function(e,a,r){clearTimeout(i),n._alwaysCb(e,a),200===e?(window.console.debug('Socket response ("'.concat(t,'"):'),a),n._doneCb(a)):125===e||n._failCb(t,e,r)}]))}return Ye()(e,[{key:"_doneCb",value:function(){}},{key:"_failCb",value:function(e,t,n){window.console.error(e,t,n)}},{key:"_alwaysCb",value:function(){}}]),Ye()(e,[{key:"done",value:function(e){return this._doneCb=e,this}},{key:"fail",value:function(e){return this._failCb=e,this}},{key:"always",value:function(e){return this._alwaysCb=e,this}}]),e}(),Pn=function(){function e(t,n,a){var r=this;Je()(this,e),this.doneCb=function(e){},this.failCb=function(e,t){};var o=null,i=new XMLHttpRequest;i.open(t,n,!0),i.setRequestHeader("Content-type","application/json"),i.responseType="blob",i.onreadystatechange=function(){if(i.readyState==XMLHttpRequest.DONE)if(200==i.status){var e=new Blob([i.response],{type:"application/octet-stream"});null!==o&&window.URL.revokeObjectURL(o),o=window.URL.createObjectURL(e),r.doneCb(o)}else{var t;try{var n=new Blob([i.response],{type:"text/plain"}),a=new FileReader;a.addEventListener("loadend",function(e){t=e.srcElement.result,r.failCb(i,t)}),a.readAsText(n)}catch(e){r.failCb(i,null)}}},i.send(a?JSON.stringify(a):null)}return Ye()(e,[{key:"done",value:function(e){return this.doneCb=e,this}},{key:"fail",value:function(e){return this.failCb=e,this}}]),e}(),_n=function e(){Je()(this,e),Rn.emit("log"),Rn.on("logging",function(e){window.console.log(e)}),Rn.on("disconnect",function(){location.reload()})},In=function(e){function t(){return Je()(this,t),Xe()(this,tt()(t).apply(this,arguments))}return at()(t,e),Ye()(t,[{key:"emit",value:function(e,t){return new Sn(e,t)}},{key:"post",value:function(e,t){return new Pn("POST",e,t)}},{key:"push",value:function(){return new _n}}]),t}(m.a.Store),Nn=m.a.createActions(["watch","unwatch","resetWatch"]),Dn={ProtoOnWatchIni:1,ProtoOnWatchUpd:2,ProtoOnWatchDel:3,ProtoOnNodeStatus:0,ProtoOnWarn:4},Ln=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,Nn))).state=t.defaults,Rn.emit("getEvent","hoi"),Rn.on("event",function(t){switch(window.console.log(t),t.Proto){case Dn.ProtoOnWatchIni:e.watchInit(t.Data);break;case Dn.ProtoOnWatchUpd:e.watchUpdate(t.Data);break;case Dn.ProtoOnWatchDel:e.watchDel(t.Data);break;case Dn.ProtoOnNodeStatus:console.log(t.Data),e.nodeStatus(t.Data);break;case Dn.ProtoOnWarn:console.log(t.Data)}}),e}return at()(t,e),Ye()(t,[{key:"watchInit",value:function(e){this.setState(function(t){return{watchThings:V()({},t.watchThings,A()({},e.thing["#"],e.thing))}})}},{key:"watchUpdate",value:function(e){for(var t=0;t<e.jobs.length;t++)switch(!0){case e.jobs[t].hasOwnProperty("set"):this.set(e["#"],e.jobs[t].set);break;case e.jobs[t].hasOwnProperty("del"):this.del(e["#"],e.jobs[t].del);break;case e.jobs[t].hasOwnProperty("splice"):this.splice(e["#"],e.jobs[t].splice);break;case e.jobs[t].hasOwnProperty("add"):this.add(e["#"],e.jobs[t].add);break;case e.jobs[t].hasOwnProperty("remove"):this.remove(e["#"],e.jobs[t].remove)}}},{key:"set",value:function(e){function t(t,n){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}(function(e,t){this.setState(function(n){var a=V()({},n.watchThings[e],t);return{watchThings:V()({},n.watchThings,A()({},e,a))}})})},{key:"del",value:function(e,t){this.setState(function(n){var a=JSON.parse(JSON.stringify(n.watchThings[e]));return delete a[t],{watchThings:V()({},n.watchThings,A()({},e,a))}})}},{key:"splice",value:function(e,t){var n=Object.keys(t)[0],a=t[n][0],r=t[n][1],o=t[n][2];this.setState(function(i){var c=I()(i.watchThings[e][n]);o?c.splice.apply(c,[a,r].concat(I()(t[n].slice(3)))):c.splice(a,r);var s=V()({},i.watchThings[e],A()({},n,c));return{watchThings:V()({},i.watchThings,A()({},e,s))}})}},{key:"add",value:function(e,t){var n=Object.keys(t)[0];this.setState(function(a){for(var r=new Set(I()(a.watchThings[e][n].$)),o=1;o<t[n].length;o++)r.add(t[n][o]);var i={$:I()(r)},c=V()({},a.watchThings[e],A()({},n,i));return{watchThings:V()({},a.watchThings,A()({},e,c))}})}},{key:"remove",value:function(e,t){var n=Object.keys(t)[0];this.setState(function(a){for(var r=new Set(I()(a.watchThings[e][n].$)),o=function(e){r.forEach(function(a){a["#"]==t[n][e]&&r.delete(a)})},i=1;i<t[n].length;i++)o(i);var c={$:I()(r)},s=V()({},a.watchThings[e],A()({},n,c));return{watchThings:V()({},a.watchThings,A()({},e,s))}})}},{key:"watchDel",value:function(e){this.setState(function(t){var n=JSON.parse(JSON.stringify(t.watchThings));return delete n[e["#"]],{watchThings:n}})}},{key:"nodeStatus",value:function(e){this.setState(function(t){var n=V()({},t.watchThings[e["#"]],set);return{watchThings:V()({},t.watchThings,A()({},id,n))}})}},{key:"onWatch",value:function(e,t){var n=this,a="".concat(t);this.emit("watch",{scope:e,ids:[a]}).done(function(){n.setState(function(t){var n=t.watchIds.hasOwnProperty(e)?new Set(I()(t.watchIds[e])):new Set;return n.add(a),{watchIds:V()({},t.watchIds,A()({},e,I()(n)))}})}).fail(function(e,t,n){return rt.setToastError(n.Log)})}},{key:"onUnwatch",value:function(e,t){var n=this,a="".concat(t);this.emit("unwatch",{scope:e,ids:[a]}).done(function(){n.setState(function(n){var r=JSON.parse(JSON.stringify(n.watchThings));delete r[t];var o=new Set(I()(n.watchIds[e]));return o.delete(a),{watchThings:r,watchIds:V()({},n.watchIds,A()({},e,I()(o)))}})}).fail(function(e,t,n){rt.setToastError(n.Log)})}},{key:"onResetWatch",value:function(){this.setState({watchThings:{},watchIds:{}})}}]),t}(In);A()(Ln,"types",{watchThings:P.a.object,watchIds:P.a.object}),A()(Ln,"defaults",{watchThings:{},watchIds:{}});var An=m.a.createActions(["getCollection","getCollections","addCollection","renameCollection","removeCollection","setQuota","getUser","getUsers","addUser","removeUser","renameUser","password","resetPassword","grant","revoke","newToken","delToken","delExpired"]),Fn=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,An))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onGetCollection",value:function(){var e=this;this.emit("query",{scope:"@thingsdb",query:"collection_info();"}).done(function(t){e.setState({collection:t})}).fail(function(t,n,a){e.setState({collection:{}}),rt.setToastError(a.Log)})}},{key:"onGetCollections",value:function(){var e=this;this.emit("query",{scope:"@thingsdb",query:"collections_info();"}).done(function(t){e.setState({collections:t})}).fail(function(t,n,a){e.setState({collections:[]}),rt.setToastError(a.Log)})}},{key:"onAddCollection",value:function(e,t,n){var a=this,r=this.state.user,o="new_collection('".concat(e,"'); {collections: collections_info(), users: users_info()};");this.emit("query",{scope:"@thingsdb",query:o}).done(function(e){r.access.find(function(e){return"@thingsdb"===e.scope}).privileges.includes("FULL")||r.access.find(function(e){return"@thingsdb"===e.scope}).privileges.includes("GRANT")?a.setState({collections:e.collections,users:e.users}):a.setState({collections:e.collections}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onRenameCollection",value:function(e,t,n,a){var r=this,o=this.state.user,i="rename_collection('".concat(e,"', '").concat(t,"'); {collections: collections_info(), users: users_info()};");this.emit("query",{scope:"@thingsdb",query:i}).done(function(e){o.access.find(function(e){return"@thingsdb"===e.scope}).privileges.includes("FULL")||o.access.find(function(e){return"@thingsdb"===e.scope}).privileges.includes("GRANT")?r.setState({collections:e.collections,users:e.users}):r.setState({collections:e.collections}),a()}).fail(function(e,t,a){rt.setMsgError(n,a.Log)})}},{key:"onRemoveCollection",value:function(e,t,n){var a=this,r=this.state.user,o="del_collection('".concat(e,"'); {collections: collections_info(), users: users_info()};");this.emit("query",{scope:"@thingsdb",query:o}).done(function(e){r.access.find(function(e){return"@thingsdb"===e.scope}).privileges.includes("FULL")||r.access.find(function(e){return"@thingsdb"===e.scope}).privileges.includes("GRANT")?a.setState({collections:e.collections,users:e.users}):a.setState({collections:e.collections}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onSetQuota",value:function(e,t,n,a,r){var o=this,i="set_quota('".concat(e,"', '").concat(t,"', ").concat(n,"); collections_info();");this.emit("query",{scope:"@thingsdb",query:i}).done(function(e){o.setState({collections:e}),r()}).fail(function(e,t,n){rt.setMsgError(a,n.Log)})}},{key:"onGetUser",value:function(){var e=this;this.emit("query",{scope:"@thingsdb",query:"user_info();"}).done(function(t){e.setState({user:t})}).fail(function(t,n,a){e.setState({user:{}}),rt.setToastError(a.Log)})}},{key:"onGetUsers",value:function(){var e=this;this.emit("query",{scope:"@thingsdb",query:"users_info();"}).done(function(t){e.setState({users:t})}).fail(function(t,n,a){e.setState({users:[]}),rt.setToastError(a.Log)})}},{key:"onAddUser",value:function(e,t,n){var a=this,r="new_user('".concat(e,"'); users_info();");this.emit("query",{scope:"@thingsdb",query:r}).done(function(e){a.setState({users:e}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onRemoveUser",value:function(e,t,n){var a=this,r="del_user('".concat(e,"'); users_info();");this.emit("query",{scope:"@thingsdb",query:r}).done(function(e){a.setState({users:e}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onRenameUser",value:function(e,t,n,a){var r=this,o="rename_user('".concat(e,"', '").concat(t,"'); users_info();");this.emit("query",{scope:"@thingsdb",query:o}).done(function(e){r.setState({users:e}),a()}).fail(function(e,t,a){rt.setMsgError(n,a.Log)})}},{key:"onPassword",value:function(e,t,n,a){var r=this,o="set_password('".concat(e,"', '").concat(t,"'); users_info();");this.emit("query",{scope:"@thingsdb",query:o}).done(function(e){r.setState({users:e}),a()}).fail(function(e,t,a){rt.setMsgError(n,a.Log)})}},{key:"onResetPassword",value:function(e,t,n){var a=this,r="set_password('".concat(e,"', nil); users_info();");this.emit("query",{scope:"@thingsdb",query:r}).done(function(e){a.setState({users:e}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onGrant",value:function(e,t,n,a){var r=this,o="grant('".concat(t,"', '").concat(e,"', ").concat(n,"); users_info();");this.emit("query",{scope:"@thingsdb",query:o}).done(function(e){r.setState({users:e})}).fail(function(e,t,n){rt.setMsgError(a,n.Log)})}},{key:"onRevoke",value:function(e,t,n,a){var r=this,o="revoke('".concat(t,"', '").concat(e,"', ").concat(n,"); users_info();");this.emit("query",{scope:"@thingsdb",query:o}).done(function(e){r.setState({users:e})}).fail(function(e,t,n){rt.setMsgError(a,n.Log)})}},{key:"onNewToken",value:function(e,t,n){var a=this,r="new_token('".concat(e.name,"', expiration_time=").concat(e.expirationTime||"nil",", description='").concat(e.description||"","'); users_info();");this.emit("query",{scope:"@thingsdb",query:r}).done(function(e){a.setState({users:e}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onDelToken",value:function(e){var t=this,n="del_token('".concat(e,"'); users_info();");this.emit("query",{scope:"@thingsdb",query:n}).done(function(e){t.setState({users:e})})}},{key:"onDelExpired",value:function(){var e=this;this.emit("query",{scope:"@thingsdb",query:"del_expired(); users_info();"}).done(function(t){e.setState({users:t})})}}]),t}(In);A()(Fn,"types",{collections:P.a.arrayOf(P.a.object),collection:P.a.object,users:P.a.arrayOf(P.a.object),user:P.a.object}),A()(Fn,"defaults",{collections:[],collection:{},users:[],user:{}});var Bn=m.a.createActions(["blob","query","rawQuery","queryEditor","download","cleanupTmp"]),Wn=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,Bn))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onQuery",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=n?"return(#".concat(n,", ").concat(a,")"):"return(thing(.id()), ".concat(a,")"),o="@collection:".concat(e.name);this.emit("query",{query:r,scope:o}).done(function(a){t.setState(function(t){return{things:n?V()({},t.things,A()({},n,a)):V()({},t.things,A()({},e.collection_id,a))}})}).fail(function(e,t,n){return rt.setToastError(n.Log)})}},{key:"onRawQuery",value:function(e,t,n,a,r){var o=this,i="".concat(n," #").concat(t);this.emit("query",{query:i,scope:e}).done(function(e){o.setState(function(n){return{things:V()({},n.things,A()({},t,e))}}),r()}).fail(function(e,t,n){rt.setMsgError(a,n.Log)})}},{key:"onQueryEditor",value:function(e,t,n,a,r){var o=this;this.emit("queryEditor",{query:e,scope:t}).done(function(e){a(e.output),null!==n?o.setState(function(t){return{things:V()({},t.things,A()({},n,e.things))}}):(An.getCollections(),An.getUsers(),An.getUser())}).fail(function(e,t,n){rt.setMsgError(r,n.Log)})}},{key:"onBlob",value:function(e,t,n,a,r,o){var i=this,c="".concat(n," #").concat(t);this.emit("queryBlob",{query:c,scope:e,blob:a}).done(function(e){i.setState(function(n){return{things:V()({},n.things,A()({},t,e))}}),o()}).fail(function(e,t,n){rt.setMsgError(r,n.Log)})}},{key:"onDownload",value:function(e,t){this.post("/download",e).done(function(e){t(e)}).fail(function(e,t){rt.setToastError("".concat(e.statusText,": ").concat(t))})}},{key:"onCleanupTmp",value:function(){this.emit("cleanupTmp").done(function(e){return null}).fail(function(e,t,n){rt.setToastError(n.Log)})}}]),t}(In);A()(Wn,"types",{things:P.a.object,thingsByProp:P.a.object}),A()(Wn,"defaults",{things:{}});var Un=Object(z.a)(function(e){return{nested:{paddingLeft:e.spacing(4)},listItem:{margin:0,padding:0}}}),Mn=function(e){var t=e.children,n=e.name,a=e.type,o=e.val,i=e.canToggle,c=e.onRenderChildren,s=e.onClick,l=e.button,u=e.onAction,m=Un(),d=r.a.useState(!1),f=p()(d,2),h=f[0],E=f[1],w=r.a.useState(!1),k=p()(w,2),O=k[0],T=k[1],j=r.a.useState(""),x=p()(j,2),C=x[0],q=x[1],R=function(e){q(e)};return r.a.createElement(r.a.Fragment,null,r.a.createElement(y.a,{className:m.listItem,button:!!l,onClick:u},r.a.createElement(b.a,null,r.a.createElement(Kn,{type:a})),r.a.createElement(v.a,{className:m.listItem,primary:r.a.createElement(r.a.Fragment,null,n?r.a.createElement(re.a,{variant:"body1",color:"primary",component:"span"},"".concat(n,"   ")):null,"blob"===a?C?r.a.createElement(Ge.a,{href:C,download:"blob",type:"application/octet-stream",color:"textPrimary"},o):"   -   Blob":"  -   ".concat(o)),primaryTypographyProps:{display:"block",noWrap:!0}}),t,r.a.createElement(Cn.a,null,r.a.createElement(r.a.Fragment,null,i?r.a.createElement(ye.a,{onClick:function(){E(!h),s()}},h?r.a.createElement(gt.a,{color:"primary"}):r.a.createElement(De.a,{color:"primary"})):null,"blob"===a?r.a.createElement(ye.a,{onClick:function(){Bn.download(o,R)}},r.a.createElement(xn.a,{color:"primary"})):"string"===a?r.a.createElement(zt,{button:r.a.createElement(ye.a,{onClick:function(){T(!0)}},r.a.createElement(Tn.a,{color:"primary"})),title:"Show string",open:O,onClose:function(){T(!1)}},r.a.createElement(re.a,{align:"justify",variant:"body2"},o)):null))),i&&r.a.createElement(ne.a,{in:h,timeout:"auto",unmountOnExit:!0},r.a.createElement(g.a,{component:"div",disablePadding:!0,dense:!0},c())))};Mn.defaultProps={children:null,name:null,button:!1,onClick:function(){return null},onAction:function(){return null}},Mn.propTypes={children:P.a.object,button:P.a.bool,onAction:P.a.func,name:P.a.string,type:P.a.string.isRequired,val:P.a.string.isRequired,canToggle:P.a.bool.isRequired,onRenderChildren:P.a.func.isRequired,onClick:P.a.func};var zn=Mn,Gn=Object(z.a)(function(e){return{red:{color:e.palette.primary.red},orange:{color:e.palette.primary.orange},yellow:{color:e.palette.primary.yellow},green:{color:e.palette.primary.green},blue:{color:e.palette.primary.blue},pink:{color:e.palette.primary.pink},purple:{color:e.palette.primary.purple},cyan:{color:e.palette.primary.cyan},beige:{color:e.palette.primary.beige},white:{color:e.palette.primary.white}}}),Vn=function(e){var t=e.type,n=Gn(),a=function(e){return"array"===e?["[ ]","green"]:"thing"==e?["{ }","blue"]:"string"==e?["S","orange"]:"number"==e?["123","yellow"]:"boolean"==e?["1/0","pink"]:"nil"==e?["NIL","red"]:"blob"==e?["BIN","purple"]:"closure"==e?["/","cyan"]:"object"==e?["{ }","white"]:""}(t),o=p()(a,2),i=o[0],c=o[1];return r.a.createElement(ye.a,{className:n[c],disabled:!0},r.a.createElement(re.a,{variant:"button"},i))};Vn.defaultProps={type:null},Vn.propTypes={type:P.a.string};var Kn=Vn,Qn=n(465),Hn=n.n(Qn),Jn={array:{array:"Returns a new empty array or returns an array for a given set.",extend:"Adds an array with items to the end of a list, and returns the new length.",filter:"If this method is used on a thing, then a new thing will be returned with only the properties that pass the test. If the method is used on an array, then a new array is returned with elements that pass the test and if used on a set, then the return value will be a new set.",find:"This function returns the value of the first element in the array or set that satisfies the callback function. Otherwise nil is returned unless an alternative return value is specified.",findindex:"This function returns the index of the first element in an array that satisfies the callback function. Otherwise nil is returned.",indexof:"Returns the first index at which a given value can be found in the array, or nil if it is not present. The index of an array starts at 0, so the first item has index 0 the second 1 and so on.",len:"Returns the length of an array or string, or the number of items in a thing.",map:"Iterate over items in an array, set or over all properties on a thing.",pop:"Removes the last element from an array and returns that element. This method changes the length of the array. The pop() method works on a list type array, but not on a tuple since tuples are immutable.",push:"Adds new items to the end of an array, and returns the new length.",remove:"This function removes and returns the value of the first element in the array that satisfies the callback function. Otherwise nil is returned unless an alternative return value is specified.",splice:"The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place."},set:{add:"Adds new thing to the set and returns the number of things which are actually added to the set. For example my_set.add( t(42) ); will return 0 if my_set already contains thing #42.",filter:"If this method is used on a thing, then a new thing will be returned with only the properties that pass the test. If the method is used on an array, then a new array is returned with elements that pass the test and if used on a set, then the return value will be a new set.",find:"This function returns the value of the first element in the array or set that satisfies the callback function. Otherwise nil is returned unless an alternative return value is specified.",has:"Determines if a set has a given thing.",len:"Returns the length of an array or string, or the number of items in a thing.",map:"Iterate over items in an array, set or over all properties on a thing.",remove:"This function can be used to remove things from a set. If a closure is used, then all things that satisfy the test are removed from the set and returned as list. The order of the removed things is not guaranteed since the set itself is unordered. It is also possible to specify things as arguments. In this case a list is returned with all the things which are removed from the set, in the order that the arguments are used. Things which are not found in the set are ignored.",set:"Returns a new empty set. If an array is given, then all elements in the given array must be or type thing and a new set is returned based on the given things."},string:{contains:"Determines if a given string is a substring of a string.",endswith:"Determines if a string ends with characters given by another string.",len:"Returns the length of an array or string, or the number of items in a thing.",lower:"Return a new string in which all case-based characters are in lower case.",startswith:"Determines if a string starts with characters given by another string.",str:'Convert a value to a string. If no value is given, an empty string "" is returned.',test:"Test if a string matches a given regular expression and return true or false.",upper:"Return a new string in which all case-based characters are in upper case."},thing:{deep:"Returns the current deep value. The deep value might change when a function with a return(..) is called which has changed the deep value for this query.",del:"Delete a property from a thing.",filter:"If this method is used on a thing, then a new thing will be returned with only the properties that pass the test. If the method is used on an array, then a new array is returned with elements that pass the test and if used on a set, then the return value will be a new set.",get:"Return the value of a property on a thing by a given property name. If the property is not found then the return value will be nil, unless an alternative return value is given.",has:"Determines if a thing has a given property.",id:"Returns the id of a thing or nil if the thing is not stored.",keys:"Returns an array with all the property names of a thing. The same could be returned using map so the following statement is true: (.keys() == .map(|k| k))",len:"Returns the length of an array or string, or the number of items in a thing.",map:"Iterate over items in an array, set or over all properties on a thing.",set:"Creates a new property on a thing. If the property already existed then the old property will be overwritten. This function is equal to an assignment except that it can be used when the name of the property is dynamic.",values:"Returns an array with all the property values of a thing. The same could be returned using map so the following statement is true:"}},$n={assert:"Raises ASSERTION_ERROR if the specified statement evaluates to false.",bool:"Returns an bool from a specified value. If no value is given, false is returned.",call:"",err:"Returns an error.",float:"Returns a float from a specified value. If no value is given, the default float 0.0 is returned. If the specified value is of type raw, then the initial characters of the string are converted until a non-digit character is found. Initial white space is ignored and the number may start with an optional + or - sign. Type bool values are converted to 1.0 for true and 0.0 for false.",now:"Return the time in seconds since the epoch as a floating point number. If you require the same time multiple times within a query, then call now() only once and save it to a variable, for example now = now();",raise:"Raises an error.",return:"The return function moves the argument to the output of the current query/closure call. If no return is specified, then the last value will be the value which is returned. A second argument can be given to the return function which can be used to specify how deep the result should be returned. The default deep value is set to 1, but any value between 0 and 127 is possible. A query can run different procedures and/or closures which might have change the deep value. In case you need to know the current deep value, the function deep() can be used. When no arguments are used the return value will be nil.",thing:"Returns a thing from a specified value. If no value is given, a new thing is returned.",try:"Try a statement and if the statement fails with an error, then the error is returned. It is also possible to catch only specific errors.",wse:"Stored closures which can potentially make changes to ThingsDB are called closures with side effects and must be wrapped with the wse(..) function. This allows ThingsDB before running the query to make an event. You should not wrap wse around all closures since this would unnecessary create events when they may not be required.",int:"Returns an int from a specified value. If no value is given, the default integer 0 is returned. If the specified value was a float value, then the new integer value will be rounded towards zero. If the specified value is of type raw, then the initial characters of the string are converted until a non-digit character is found. Initial white space is ignored and the number may start with an optional + or - sign. Type bool values are converted to 1 for true and 0 for false.",isarray:"This function determines whether the value passed to this function is an array type or not. The functions islist and istuple can be used to check if the array is mutable.",isascii:"This function determines whether the value passed to this function is of type raw and contains only valid ascii characters.",isbool:"This function determines whether the value passed to this function is a bool or not.",iserr:"This function determines whether the value passed to this function is a error or not.",isfloat:"This function determines whether the value passed to this function is a floating point value or not.",isint:"This function determines whether the value passed to this function is an integer or not.",isinf:"",islist:"This function determines whether the value passed to this function is a mutable array or not.",isnan:"This function determines whether the value passed to this function is a number. Returns true is the given value is not a number, else false.",isnil:"This function determines whether the value passed to this function is nil.",israw:"This function determines whether the value passed to this function is of type raw.",isset:"This function determines whether the value passed to this function is a set or not.",isstr:"This function determines whether the value passed to this function is of type raw and contains valid utf8. Alias for isutf8.",isthing:"This function determines whether the value passed to this function is a thing or not.",istuple:"This function determines whether the value passed to this function is a immutable array or not. At least nested arrays are of kind tuple.",isutf8:"This function determines whether the value passed to this function is of type raw and contains valid utf8.",refs:"Returns the reference count of a value. The count returned is generally one higher than you might expect, because it includes the (temporary) reference.",type:"Returns the type name of a value."},Yn={counters:"Returns counters for the ThingsDB node you are connected too. Counters start all at zero when ThingsDB is started, or when the counters are reset by using reset_counters()’. Counters give information about things, queries and events. If you suspect failed queries, then counters might provide you with more information.",node_info:"Returns information about the connected node.",nodes_info:"Returns information about all ThingsDB nodes.",reset_counters:"Resets the counters for the ThingsDB node you are connected too. Other nodes are not affected",set_log_level:"",shutdown:""},Zn={collection_info:"Returns information about a specific collection.",collections_info:"",del_collection:"Delete a collection.",del_expired:"Delete all expired tokens. Extends to all users.",del_token:"Delete a token.",del_user:"Delete a user. It is not possible to delete your own user account and a BAD_REQUEST will be raised in case you try to. Any tokens associated with the user will also be deleted.",grant:"Grant collection or general privileges to a user. Access to a user is provided by setting a bit mask to either the .node scope, .thingsdb scope or a collection. Privileges to ThingsDB gives a user the ability to view counters, add, view remove users etc.",new_collection:"Create a new collection.",new_node:"Adds a new node to ThingsDB. Nodes are used for scaling and high availability.",new_token:"Adds a new token for a given user. An optional expiration time may be given after which the token cannot be used anymore. Use del_expired to cleanup expired tokens. The expiration time may be given as a UNIX time-stamp in seconds or a date/time string. It is also possible to set a description for the token which can be used to identify where token is used for. If you only want to set a description, but no expiration time, then you can use nil as second argument.",new_user:"Creates a new user to ThingsDB. The new user is created without a password, token and access privileges. You probably want to set a password or add a new token and assign some privileges using grant(…).",del_node:"",rename_collection:"",rename_user:"",revoke:"Revoke collection or general privileges from a user. See grant for more information on how access privileges can be set for a user.",set_password:"Change a users password. This function can also be used to remove an existing password by using nil as the new password. Passwords must contain 1 to 128 printable characters.",set_quota:'Quota limits can be set on collections. Quota limits can be set on "things", "properties", "array_size" and "raw_size". If a quota limit is reached, then the affected query will raise MAX_QUOTA_ERROR.',user_info:"",users_info:"Returns user information for all users withing ThingsDB. This function requires GRANT privileges on the .thingsdb scope since it exposes user access and token information."},Xn={new_procedure:"",del_procedure:"",procedure_doc:"",procedures_info:"",procedure_info:"",run:""},ea=n(137);ea.languages.register({id:"mySpecialLanguage"}),ea.languages.setMonarchTokensProvider("mySpecialLanguage",{defaultToken:"invalid",keywords:["nil","true","false"].concat(I()(Object.keys($n)),I()(Object.keys(Yn)),I()(Object.keys(Zn)),I()(Object.keys(Xn)),I()(Object.keys(Jn.array)),I()(Object.keys(Jn.set)),I()(Object.keys(Jn.string)),I()(Object.keys(Jn.thing))),operators:["*","/","%","//","+","-","&","^","|","<",">","==","!=","<=",">=","&&","||"],symbols:/[=><!~?:&|+\-*\/\^%#]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\d+(_+\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,regexpctl:/[(){}\[\]\$\^|\-*+?\.]/,regexpesc:/\\(?:[bBdDfnrstvwWn0\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,tokenizer:{root:[[/[{}]/,"delimiter.bracket"],[/[A-Za-z_][0-9A-Za-z_]*/,{cases:{"@keywords":"keyword","@default":"identifier"}}],{include:"@whitespace"},[/\/(?=([^\\\/]|\\.)+\/(i?)(\s*)(\.|;|\/|,|\)|\]|\}|$))/,{token:"regexp",bracket:"@open",next:"@regexp"}],[/[()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/(@digits)[eE]([\-+]?(@digits))?/,"number.float"],[/(@digits)\.(@digits)([eE][\-+]?(@digits))?/,"number.float"],[/0[xX](@hexdigits)/,"number.hex"],[/0[oO]?(@octaldigits)/,"number.octal"],[/0[bB](@binarydigits)/,"number.binary"],[/(@digits)/,"number"],[/[;,.]/,"delimiter"],[/"/,"string","@string_double"],[/'/,"string","@string_single"]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\/\*/,"comment","@push"],[/\*\//,"comment","@pop"],[/[\/*]/,"comment"]],regexp:[[/(\{)(\d+(?:,\d*)?)(\})/,["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],[/(\[)(\^?)(?=(?:[^\]\\\/]|\\.)+)/,["regexp.escape.control",{token:"regexp.escape.control",next:"@regexrange"}]],[/(\()(\?:|\?=|\?!)/,["regexp.escape.control","regexp.escape.control"]],[/[()]/,"regexp.escape.control"],[/@regexpctl/,"regexp.escape.control"],[/[^\\\/]/,"regexp"],[/@regexpesc/,"regexp.escape"],[/\\\./,"regexp.invalid"],[/(\/)(i?)/,[{token:"regexp",bracket:"@close",next:"@pop"},"keyword.other"]]],regexrange:[[/-/,"regexp.escape.control"],[/\^/,"regexp.invalid"],[/@regexpesc/,"regexp.escape"],[/[^\]]/,"regexp"],[/\]/,{token:"regexp.escape.control",next:"@pop",bracket:"@close"}]],string_double:[[/[^\\"]+/,"string"],[/"/,"string","@pop"]],string_single:[[/[^\\']+/,"string"],[/'/,"string","@pop"]]}}),ea.languages.setLanguageConfiguration("mySpecialLanguage",{surroundingPairs:[{open:"{",close:"}"}],autoClosingPairs:[{open:"{",close:"}"}],brackets:[["{","}"]]}),ea.languages.registerCompletionItemProvider("mySpecialLanguage",{provideCompletionItems:function(e,t){var n=e.getValueInRange({startLineNumber:1,startColumn:1,endLineNumber:t.lineNumber,endColumn:t.column}),a=[];return new RegExp("(?:'(?:[^']*)')+\\.$").test(n)?a.push.apply(a,I()(Object.entries(Jn.string).map(function(e){var t=p()(e,2),n=t[0],a=t[1];return{label:n,kind:ea.languages.CompletionItemKind.Function,insertText:n+"()",documentation:a}}))):(a.push.apply(a,I()(Object.entries($n).map(function(e){var t=p()(e,2),n=t[0],a=t[1];return{label:n,kind:ea.languages.CompletionItemKind.Function,insertText:n+"()",documentation:a}}))),a.push.apply(a,I()(Object.entries(Yn).map(function(e){var t=p()(e,2),n=t[0],a=t[1];return{label:n,kind:ea.languages.CompletionItemKind.Function,insertText:n+"()",documentation:a}}))),a.push.apply(a,I()(Object.entries(Zn).map(function(e){var t=p()(e,2),n=t[0],a=t[1];return{label:n,kind:ea.languages.CompletionItemKind.Function,insertText:n+"()",documentation:a}}))),a.push.apply(a,I()(Object.entries(Xn).map(function(e){var t=p()(e,2),n=t[0],a=t[1];return{label:n,kind:ea.languages.CompletionItemKind.Function,insertText:n+"()",documentation:a}})))),{suggestions:a}}});var ta={base:"vs-dark",inherit:!0,rules:[{token:"identifier",foreground:"4c7fbb",fontStyle:"bold"},{token:"number",foreground:"d2a800"},{token:"string",foreground:"e26d14"},{token:"keyword",foreground:"b064bd"},{token:"comment",foreground:"608b4e"}],colors:{"editor.foreground":"#0000002e","editor.background":"#0000002e","editorCursor.foreground":"#c6c6c6","editor.lineHighlightBackground":"#141719","editorLineNumber.foreground":"#0000002e","editor.selectionBackground":"#20344b","editor.inactiveSelectionBackground":"#0000002e"}},na=function(e){function t(e){var n;return Je()(this,t),n=Xe()(this,tt()(t).call(this,e)),A()(Hn()(n),"handleEditorSize",function(){n._editor.layout()}),n}return at()(t,e),Ye()(t,[{key:"componentDidMount",value:function(){var e=this.props,t=e.onChange,n=e.input,a=ea.editor.createModel(n,"mySpecialLanguage");ea.editor.defineTheme("myTheme",ta),this._editor=ea.editor.create(this.ele,{theme:"myTheme",language:"mySpecialLanguage",minimap:{enabled:!1},scrollbar:{enabled:!1},lineNumbers:"on"}),this._editor.setModel(a),this._subscription=a.onDidChangeContent(function(){var e=a.getValue();t(e)}),window.addEventListener("resize",this.handleEditorSize),this._editor.addCommand([ea.KeyMod.CtrlCmd|ea.KeyCode.Enter],function(){})}},{key:"componentDidUpdate",value:function(e){var t=this.props.input,n=this._editor.getModel();t&&t!=e.input&&t!=n.getValue()&&n.pushEditOperations([],[{range:n.getFullModelRange(),text:t}])}},{key:"componentWillUnmount",value:function(){this._editor&&this._editor.dispose(),this._subscription&&this._subscription.dispose(),window.removeEventListener("resize",this.handleEditorSize)}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{style:{height:"calc(100vh - 50vh)",width:"100%"},ref:function(t){return e.ele=t}})}}]),t}(r.a.Component);A()(na,"propTypes",{onChange:P.a.func.isRequired,input:P.a.string.isRequired});var aa=na,ra=n(338),oa=n(1086),ia=n(1097),ca=Object(z.a)(function(e){return{card:{backgroundColor:"#141719",padding:e.spacing(2)},tabs:{marginBottom:e.spacing(2)}}}),sa=function(e){var t=e.output,n=ca(),a=r.a.useState(0),o=p()(a,2),i=o[0],c=o[1],s=null!=t?JSON.stringify(t,null,4).replace(/"http:\/\/.*download?\/tmp\/thingsdb-cache-.*"/gi,"<blob data>"):null;return r.a.createElement(ra.a,{className:n.card},r.a.createElement(ia.a,{className:n.tabs,value:i,onChange:function(e,t){c(t)},indicatorColor:"primary","aria-label":"styled tabs example"},r.a.createElement(oa.a,{label:"Tree view"}),r.a.createElement(oa.a,{label:"JSON view"})),0===i&&r.a.createElement(g.a,{component:"nav",dense:!0,disablePadding:!0},null!=t?r.a.createElement(sn,{tree:t,child:{name:"",index:null}}):null),1===i&&r.a.createElement("pre",null,s))};sa.defaultProps={output:null},sa.propTypes={output:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string])};var la=sa,ua=n(231),ma=n.n(ua),da=n(469),pa=n.n(da),fa=Object(u.withVlow)([{store:Ln,keys:["watchIds"]}]),ha=Object(z.a)(function(e){return{fabRed:{backgroundColor:e.palette.primary.red,opacity:"0.6","&:hover":{backgroundColor:e.palette.primary.red,opacity:"0.4"}},fabGreen:{backgroundColor:e.palette.primary.green,"&:hover":{backgroundColor:e.palette.primary.green,opacity:"0.7"}},red:{color:e.palette.primary.red,opacity:"0.6","&:hover":{backgroundColor:e.palette.primary.red,opacity:"0.4"}},green:{color:e.palette.primary.green,"&:hover":{backgroundColor:e.palette.primary.green,opacity:"0.7"}}}}),ga=function(e){var t=e.buttonIsFab,n=e.scope,a=e.thingId,o=e.watchIds,i=ha(),c=o.hasOwnProperty(n)&&o[n].includes("".concat(a));return r.a.createElement(r.a.Fragment,null,r.a.createElement(je.a,{disableFocusListener:!0,disableTouchListener:!0,title:c?"Turn watching off":"Turn watching on"},t?r.a.createElement(W.a,{className:c?i.fabGreen:i.fabRed,onClick:function(){c?Nn.unwatch(n,a):Nn.watch(n,a)}},c?r.a.createElement(ma.a,{fontSize:"large"}):r.a.createElement(pa.a,{fontSize:"large"})):c?r.a.createElement(ma.a,{className:i.green}):r.a.createElement(pa.a,{className:i.red})))};ga.propTypes={buttonIsFab:P.a.bool.isRequired,scope:P.a.string.isRequired,thingId:P.a.number.isRequired,watchIds:Ln.types.watchIds.isRequired};var ya=fa(ga),ba=function(e){if(null===e||"nil"===e)return"nil";var t=D()(e);if("object"===t&&"object"===(t=Array.isArray(e)?"array":"object")){var n=Object.keys(e)[0];t="#"===n?"thing":"/"===n?"closure":"object"}return"string"==t&&e.includes("/download/tmp/thingsdb-cache")&&(t="blob"),t},va=function(e,t){return"array"===e?"[".concat(t.length,"]"):"thing"===e?"#"==Object.keys(t)[0]?"{".concat(Object.keys(t)[0]).concat(t["#"],"}"):"{}":"closure"===e?"{".concat(Object.keys(t)[0],"}"):"string"===e||"number"===e||"boolean"===e||"blob"===e?"".concat(t):"nil"===e?"nil":""},Ea=function(e){return e.length==e.replace(/[^0-9.,]/g,"").length},wa=function(e){return 0===Object.entries(e).length&&e.constructor===Object},ka=function e(t,n){return n.length?t+1>n.length?e(t-1,n):n[t]:{}},Oa=function(e){return[[{name:"ThingsDB",value:"@thingsdb",collectionId:null},{name:"Node",value:"@node",collectionId:null}].concat(I()(e.map(function(e){return{name:e.name,value:"@collection:".concat(e.name),collectionId:e.collection_id}}))),["@thingsdb","@node"].concat(I()(e.map(function(e){return"@collection:".concat(e.name)})))]},Ta=function(e,t){return null!==t?e+"[".concat(t,"]"):e},ja=function(e){var t=e.collection;return r.a.createElement(St,{header:[{ky:"title1",title:"GENERAL",labels:[{ky:"collection_id",label:"Collection ID"},{ky:"name",label:"Name"},{ky:"things",label:"Things stored"}]},{ky:"title2",title:"QUOTAS",labels:[{ky:"quota_array_size",label:"Quota on array size"},{ky:"quota_properties",label:"Quota on properties"},{ky:"quota_raw_size",label:"Quota on raw size"},{ky:"quota_things",label:"Quota on things"}]}],content:t})};ja.propTypes={collection:P.a.object.isRequired};var xa=ja,Ca=function(e){var t=e.collection,n=r.a.useState(!1),a=p()(n,2),o=a[0],i=a[1],c=r.a.useState(""),s=p()(c,2),l=s[0],u=s[1];r.a.useEffect(function(){u(t.name)},[]);var m=function(){An.removeCollection(t.name,"6",function(){return i(!1)})};return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){i(!0)}},"Remove"),title:"Remove collection ".concat(l,"?"),open:o,onOk:m,onClose:function(){i(!1)},onKeyPress:function(e){"Enter"==e.key&&m()}},r.a.createElement(lt,{tag:"6"}))};Ca.propTypes={collection:P.a.object.isRequired};var qa=Ca;function Ra(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Sa(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ra(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ra(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Pa=Object(u.withVlow)([{store:Fn,keys:["collections"]}]),_a={show:!1,errors:{},form:{}},Ia=function(e){var t=e.collection,n=e.collections,a=r.a.useState(_a),o=p()(a,2),i=o[0],c=o[1],s=i.show,l=i.errors,u=i.form,m={name:function(){return u.name.length>0&&n.every(function(e){return e.name!==u.name})}},d=function(){var e=Object.keys(m).reduce(function(e,t){return e[t]=!m[t](),e},{});c(Sa({},i,{errors:e})),Object.values(e).some(function(e){return e})||An.renameCollection(t.name,u.name,"7",function(){return c(Sa({},i,{show:!1}))})},f=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"7"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"name",label:"Name",type:"text",value:u.name,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;c(function(e){return Sa({},e,{form:V()({},e.form,A()({},n,a)),errors:{}})})},fullWidth:!0,error:l.name}));return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){c({show:!0,errors:{},form:Sa({},t)})}},"Rename"),title:"Rename Collection",open:s,onOk:d,onClose:function(){c(Sa({},i,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&d()}},f)};Ia.propTypes={collection:P.a.object.isRequired,collections:Fn.types.collections.isRequired};var Na=Pa(Ia);function Da(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function La(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Da(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Da(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Aa=["things","properties","array_size","raw_size"],Fa={show:!1,form:{}},Ba=function(e){var t=e.collection,n=r.a.useState(Fa),a=p()(n,2),o=a[0],i=a[1],c=o.show,s=o.form,l=function(e){return t["quota_".concat(e)]||""},u=function(){An.setQuota(t.name,s.quotaType,s.quota,"5",function(){return i(La({},o,{show:!1}))})},m=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"5"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"quotaType",label:"Type",value:s.quotaType,onChange:function(e){var t=e.target.value;i(function(e){return La({},e,{form:V()({},e.form,{quotaType:t,quota:l(t)})})})},fullWidth:!0,select:!0,SelectProps:{native:!0}},Aa.map(function(e){return r.a.createElement("option",{key:e,value:e},e)})),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"quota",inputProps:{min:"1"},label:"Quota",type:"number",value:s.quota,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;i(function(e){return La({},e,{form:V()({},e.form,A()({},n,a))})})},fullWidth:!0}));return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){i({show:!0,errors:{},form:{quotaType:"things",quota:l("things")}})}},"Quotas"),actionButtons:r.a.createElement(x.a,{onClick:function(){An.setQuota(t.name,s.quotaType,"nil","5",function(){return i(La({},o,{show:!1}))})},color:"primary"},"Unset Quota"),title:"Set quotas",open:c,onOk:u,onClose:function(){i(La({},o,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&u()}},m)};Ba.propTypes={collection:P.a.object.isRequired};var Wa=Ba,Ua=function(e){var t=e.collection,n=[{name:"quotas",component:r.a.createElement(Wa,{collection:t})},{name:"rename",component:r.a.createElement(Na,{collection:t})},{name:"remove",component:r.a.createElement(qa,{collection:t})}];return r.a.createElement(Ct,{title:"INFO",content:r.a.createElement(xa,{collection:t}),buttons:r.a.createElement(h.a,{container:!0,spacing:1},n.map(function(e){return r.a.createElement(h.a,{key:e.name,item:!0},e.component)}))})};Ua.propTypes={collection:P.a.object.isRequired};var Ma=Ua,za=n(549),Ga=n.n(za),Va=n(334),Ka=n.n(Va),Qa=function(e){var t=e.action,n=e.cb,a=e.child,o=e.customTypes,i=e.parent,c=e.showQuery,s=r.a.useState(""),l=p()(s,2),u=l[0],m=l[1];r.a.useEffect(function(){d(t,a.val,a.type,a.index,a.id,a.name,i.id,i.name,i.type)},[t,a.val,a.type,a.index,a.id,a.name,i.id,i.name,i.type]),r.a.useEffect(function(){n(u)},[u]);var d=function(e,t,n,a,r,i,c,s,l){var u,d="";switch(e){case"edit":u=o.hasOwnProperty(n)?y(i,n,o,t):b(t,n),d=v(c,i,s,u,l,a);break;case"remove":d=E(s,c,i,a,r,n)}m(d)},f=function(e,t,n,a){return Array.isArray(a)?a.map(function(e,t){return y(name,e.type,n,e)}):y(name,t.substring(1,t.length-1),n,a)},h=function(e,t,n,a){return"[".concat(f(0,t,n,a),"]")},g=function(e,t,n,a){return Object.entries(n[t]).map(function(e){var t=p()(e,2),r=t[0],o=t[1],i=a&&a.hasOwnProperty("val")?a.val:a,c=Array.isArray(i)&&i.length?i.find(function(e){var t=e.name,n=e.type;return t===r&&n===o}):i;return" ".concat(r,": ").concat(y(r,o,n,c))})},y=function(e,t,n,a){return n[t]?"".concat(t,"{").concat(g(0,t,n,a),"}"):function(e,t,n,a){var r=a&&a.hasOwnProperty("val")?a.val:a||"";return t.includes("str")?"'".concat(r,"'"):t.includes("int")||t.includes("float")||t.includes("bool")?"".concat(r):t.includes("thing")?"{}":t.includes("[")?h(0,t,n,r):t.includes("{")?"set(".concat(h(0,t,n,r),")"):""}(0,t,n,a)},b=function(e,t){return"list"===t?"[".concat(e,"]"):"thing"==t?"{}":"string"==t?"'".concat(e,"'"):"number"==t||"boolean"==t?"".concat(e):"set"==t?"set({})":"nil"==t?"nil":"blob"==t?"blob":"closure"==t?e:""},v=function(e,t,n,a,r,o){return"list"===r?null===o?"#".concat(e,".").concat(n,".push(").concat(a,");"):"#".concat(e,".").concat(n,"[").concat(o,"] = ").concat(a,";"):"thing"===r?"#".concat(e,".").concat(t," = ").concat(a,";"):"set"===r?"#".concat(e,".").concat(n,".add(").concat(a,");"):""},E=function(e,t,n,a,r,o){return null==a?"#".concat(t,".del('").concat(n,"');"):o?"#".concat(t,".").concat(e,".remove(#").concat(t,".").concat(e,".find(|s| (s.id()==").concat(r,") ));"):"#".concat(t,".").concat(e,".splice(").concat(a,", 1);")};return r.a.createElement(r.a.Fragment,null,c?r.a.createElement(M.a,{margin:"dense",name:"queryString",label:"Query",type:"text",value:u,fullWidth:!0,multiline:!0,InputProps:{readOnly:!0,disableUnderline:!0},inputProps:{style:{fontFamily:"monospace"}},InputLabelProps:{shrink:!0}}):null)};Qa.propTypes={action:P.a.string.isRequired,cb:P.a.func.isRequired,child:P.a.object.isRequired,customTypes:P.a.object.isRequired,parent:P.a.object.isRequired,showQuery:P.a.bool.isRequired};var Ha=Qa;function Ja(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function $a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ja(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ja(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Ya=Object(z.a)(function(e){return{container:{borderLeft:"3px solid ".concat(e.palette.primary.main),borderRight:"3px solid ".concat(e.palette.primary.main),borderRadius:"20px",padding:e.spacing(2),margin:e.spacing(2)},listItem:{margin:0,padding:0}}}),Za=function e(t){var n=t.cb,a=t.customTypes,o=t.name,i=t.type,c=t.activeStep,s=t.stepId,l=Ya(),u=r.a.useState({name:o,type:i,val:[]}),m=p()(u,2),d=m[0],f=m[1];r.a.useEffect(function(){n(d)},[JSON.stringify(d||{})]),r.a.useEffect(function(){f(function(e){return V()({},e,{name:o})})},[o]),r.a.useEffect(function(){f(function(e){return V()({},e,{type:i,val:[]})})},[i]);var h=function(e){var t=[];switch(!0){case"str"==e:t=["string","str"];break;case"int"==e:t=["number","int"];break;case"float"==e:t=["number","float"];break;case"bool"==e:t=["boolean","bool"];break;case"thing"==e:t=["thing","thing"];break;case e.includes("["):t=["list",e];break;case e.includes("{"):t=["set",e];break;default:t=[e,e]}return t},g=function(e){f(function(t){var n;if(t.val){var a=(n=I()(t.val)).findIndex(function(t){return t.name==e.name});-1==a?n.push(e):n.splice(a,1,e)}else console.log("hiiiiii"),n=[e];return $a({},t,{val:n})})},b=function(e,t){return function(n){f(function(a){var r=I()(a.val),o=a.val.findIndex(function(e){return e&&e.name==n.name&&e.type==t});return-1==o?r.push({name:n.name,type:t,val:[n]}):(r[o].val.splice(e,1,n),r.splice(o,1,{name:r[o].name,type:r[o].type,val:r[o].val})),$a({},a,{val:r})})}},E=function(t){var n,o=p()(t,2),i=o[0],u=o[1];return"list"==h(u)[0]||"set"==h(u)[0]?r.a.createElement(r.a.Fragment,{key:i},r.a.createElement(ge,{child:function(t){return r.a.createElement("div",{className:l.container},r.a.createElement(e,{cb:b(t,u),customTypes:a,name:i,type:h(u)[1].substring(1,h(u)[1].length-1),activeStep:c,stepId:s+1}))},onRemove:(n=u,function(e){f(function(t){var a=I()(t.val),r=t.val.findIndex(function(e){return e&&e.type==n});return a[r].val.splice(e,1),a.splice(r,1,{name:a[r].name,type:a[r].type,val:a[r].val}),$a({},t,{val:a})})})})):r.a.createElement(r.a.Fragment,{key:i},r.a.createElement(e,{cb:g,customTypes:a,name:i,type:h(u)[1],activeStep:c,stepId:s+1}))};return r.a.createElement(r.a.Fragment,null,a[i]?r.a.createElement(r.a.Fragment,null,r.a.createElement(y.a,{className:l.listItem},r.a.createElement(v.a,{primary:o,secondary:h(i)[0],color:"primary",primaryTypographyProps:{color:"primary"}})),r.a.createElement(ne.a,{in:s<c,timeout:"auto"},Object.entries(a[i]).map(E))):r.a.createElement(ne.a,{in:s==c,timeout:"auto"},r.a.createElement(y.a,{className:l.listItem},r.a.createElement(J,{name:o,dataType:h(i)[0],cb:function(e){f($a({},d,{val:e}))}}))))};Za.defaultProps={customTypes:null},Za.propTypes={cb:P.a.func.isRequired,customTypes:P.a.object,name:P.a.string.isRequired,type:P.a.string.isRequired,activeStep:P.a.number.isRequired,stepId:P.a.number.isRequired};var Xa=Za,er=function(e){var t=e.cb,n=e.customTypes,a=e.name,o=e.type,i=r.a.useState(0),c=p()(i,2),s=c[0],l=c[1];r.a.useEffect(function(){l(0)},[o]);var u=function e(t,n,a){var r=0;if(t[n]){var o=0;Object.entries(t[n]).map(function(n){var i=p()(n,2),c=(i[0],i[1]);(c.includes("[")||c.includes("{"))&&(c=c.substring(1,c.length-1)),o=e(t,c,a+1),r=o>r?o:r})}else r=a;return r}(n,o,1);return r.a.createElement(r.a.Fragment,null,r.a.createElement($t,{activeStep:s,maxSteps:u,onNext:function(){l(s+1)},onBack:function(){l(s-1)}},r.a.createElement(Xa,{cb:t,customTypes:n,name:a,type:o,activeStep:s,stepId:0})))};er.defaultProps={customTypes:null},er.propTypes={cb:P.a.func.isRequired,customTypes:P.a.object,name:P.a.string.isRequired,type:P.a.string.isRequired};var tr=er;function nr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function ar(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?nr(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):nr(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var rr=Object(z.a)(function(){return{listItem:{margin:0,padding:0}}}),or=function(e){var t=e.child,n=e.customTypes,a=e.parent,o=e.thing,i=e.dataTypes,c=e.cb,s=rr(),l={error:"",form:{queryString:"",newProperty:"",dataType:"list"==t.type||"thing"==t.type?i[0]:"set"==t.type?"thing":t.type,value:"",blob:"",custom:{}}},u=r.a.useState(l),m=p()(u,2),d=m[0],f=m[1],h=d.error,b=d.form;r.a.useEffect(function(){c(b.queryString,b.blob,h)},[b.queryString,b.blob]);var v=Boolean(t.id),E=n.hasOwnProperty(b.dataType),w="thing"==t.type?"":"closure"==t.type?o["/"]:o;return r.a.createElement(r.a.Fragment,null,r.a.createElement(g.a,{disablePadding:!0,dense:!0},r.a.createElement(ne.a,{in:Boolean(b.queryString),timeout:"auto"},r.a.createElement(y.a,{className:s.listItem},r.a.createElement(Ha,{action:"edit",cb:function(e){f(function(t){return ar({},t,{form:V()({},t.form,{queryString:e})})})},child:{id:null,index:t.index,name:t.id?b.newProperty:t.name,type:b.dataType,val:E?b.custom:b.value},customTypes:n,parent:{id:t.id||a.id,name:t.id||"list"==t.type||"set"==t.type?t.name:a.name,type:t.id||"list"==t.type||"set"==t.type?t.type:a.type},showQuery:!0}))),v?r.a.createElement(y.a,{className:s.listItem},r.a.createElement(M.a,{margin:"dense",name:"newProperty",label:"New property",type:"text",value:b.newProperty,spellCheck:!1,onChange:function(e){var t=e.target,n=t.name,a=t.value,r=o[a]?"property name already in use":"";f(function(e){return ar({},e,{form:V()({},e.form,A()({},n,a)),error:r})})},fullWidth:!0,helperText:h,error:Boolean(h)})):null,r.a.createElement(y.a,{className:s.listItem},r.a.createElement(M.a,{autoFocus:!0,margin:"dense",name:"dataType",label:"Data type",value:b.dataType,onChange:function(e){var t=e.target,n=t.name,a=t.value;f(function(e){return ar({},e,{form:V()({},e.form,A()({},n,a))})})},fullWidth:!0,select:!0,SelectProps:{native:!0},disabled:!("thing"==t.type||"list"==t.type||"set"==t.type)},i.map(function(e){return r.a.createElement("option",{key:e,value:e,disabled:"set"==t.type&&!("thing"==e||n.hasOwnProperty(e))},e)}))),E?r.a.createElement(tr,{name:t.id?b.newProperty:t.name,type:b.dataType,customTypes:n,cb:function(e){f(function(t){var n=V()({},t.form.custom,e);return ar({},t,{form:V()({},t.form,{custom:n})})})}}):r.a.createElement(y.a,{className:s.listItem},r.a.createElement(J,{name:"Value",dataType:b.dataType,cb:function(e){"blob"==b.dataType?f(function(t){return ar({},t,{form:V()({},t.form,{blob:e})})}):f(function(t){return ar({},t,{form:V()({},t.form,{value:e})})})},input:w}))))};or.defaultProps={thing:null},or.propTypes={cb:P.a.func.isRequired,customTypes:P.a.object.isRequired,parent:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string,isTuple:P.a.bool}).isRequired,child:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string}).isRequired,thing:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]),dataTypes:P.a.arrayOf(P.a.string).isRequired};var ir=or,cr=n(269),sr=n.n(cr),lr=function(e){var t=e.scope,n=e.thing,a=e.child,o=e.parent,i=r.a.useState(!1),c=p()(i,2),s=c[0],l=c[1],u=r.a.useState(""),m=p()(u,2),d=m[0],f=m[1],h=function(){Bn.rawQuery(t,o.id,d,"3",function(){An.getCollections()})},b=r.a.createElement(r.a.Fragment,null,r.a.createElement(g.a,null,r.a.createElement(y.a,null,r.a.createElement(Ha,{action:"remove",cb:function(e){f(e)},child:{id:n&&n["#"],index:a.hasOwnProperty("index")?a.index:null,name:a.name,type:null,val:null},customTypes:{},parent:{id:o.id,name:o.hasOwnProperty("name")?o.name:null,type:null},showQuery:!0})),r.a.createElement(y.a,null,r.a.createElement(lt,{tag:"3"})),r.a.createElement(y.a,null,r.a.createElement(re.a,null,"Are you sure?")))),v="Remove ".concat(a.name);return r.a.createElement(zt,{button:r.a.createElement(W.a,{color:"primary",onClick:function(){l(!0)}},r.a.createElement(sr.a,{fontSize:"large"})),title:v,open:s,onOk:h,onClose:function(){l(!1)},onKeyDown:function(e){"Enter"==e.key&&h()}},b)};lr.defaultProps={thing:null},lr.propTypes={scope:P.a.string.isRequired,thing:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]),parent:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string,isTuple:P.a.bool}).isRequired,child:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string}).isRequired};var ur=lr,mr=m.a.createActions(["connected","connect","disconnect","navigate","openEditor","closeEditor","logging"]),dr=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,mr))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onLogging",value:function(){console.log("logging"),this.push()}},{key:"onConnected",value:function(){var e=this;this.emit("connected").done(function(t){setTimeout(function(){e.setState({loaded:t.Loaded,connected:t.Connected})},1e3)}).fail(function(e,t,n){return rt.setToastError(n.Log)})}},{key:"onConnect",value:function(e,t){var n=this;this.emit("conn",e).done(function(e){n.setState({connected:e.Connected})}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onDisconnect",value:function(){var e=this;Nn.resetWatch(),this.emit("disconn").done(function(t){e.setState({connected:t.Connected,match:{}}),rt.resetToastError()}).fail(function(e,t,n){return rt.setToastError(n.Log)})}},{key:"onNavigate",value:function(e){this.setState({match:e})}},{key:"onOpenEditor",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.setState({openEditor:!0,input:e})}},{key:"onCloseEditor",value:function(){this.setState({openEditor:!1,input:""})}}]),t}(In);A()(dr,"types",{loaded:P.a.bool,connected:P.a.bool,match:P.a.shape({path:P.a.string,index:P.a.number,item:P.a.string,scope:P.a.string}),openEditor:P.a.bool,input:P.a.string}),A()(dr,"defaults",{loaded:!1,connected:!1,match:{path:"",index:0,item:"",scope:""},openEditor:!1,input:""});var pr=m.a.createActions(["getType","getTypes","deleteType"]),fr=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,pr))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onGetType",value:function(e,t,n,a){var r="".concat(e);this.emit("query",{query:r,scope:t}).done(function(e){a(e)}).fail(function(e,t,r){return a(""),rt.setMsgError(n,r.Log),[]})}},{key:"onGetTypes",value:function(e,t){var n=this;this.emit("query",{query:"types_info()",scope:e}).done(function(e){n.setState({customTypes:e})}).fail(function(e,n,a){return rt.setMsgError(t,a.Log),[]})}},{key:"onDeleteType",value:function(e,t,n){var a=this,r="del_type('".concat(t,"'); types_info();");this.emit("query",{query:r,scope:e}).done(function(e){a.setState({customTypes:e})}).fail(function(e,t,a){return rt.setMsgError(n,a.Log),[]})}}]),t}(In);function hr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function gr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?hr(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):hr(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}A()(fr,"types",{customTypes:P.a.object}),A()(fr,"defaults",{customTypes:{}});var yr=Object(u.withVlow)([{store:fr,keys:["customTypes"]}]),br=function(e){var t=e.open,n=e.onClose,a=e.child,o=e.parent,i=e.thing,c=e.scope,s=e.customTypes,l=["string","number","boolean","blob","closure","nil","list","set","thing"].concat(I()(Object.keys(s))),u=r.a.useState({query:"",blob:"",error:"",show:!1,setOrList:"",realChildType:"",realParentType:""}),m=p()(u,2),d=m[0],f=m[1],g=d.query,y=d.blob,b=d.error,v=d.show,E=d.realChildType,w=d.realParentType;r.a.useEffect(function(){pr.getTypes(c,"1"),"array"==a.type?pr.getType("{childType: type(#".concat(o.id,".").concat(a.name,"), parentType: type(#").concat(o.id,")}"),c,"1",O):"thing"==a.type?a.id&&o.id?pr.getType("{childType: type(#".concat(a.id,"), parentType: type(#").concat(o.id,")}"),c,"1",O):f(gr({},d,{show:!0})):pr.getType("{parentType: type(#".concat(o.id,")}"),c,"1",k)},[]);var k=function(e){f(gr({},d,{realParentType:e.parentType,show:!0}))},O=function(e){f(gr({},d,{realChildType:e.childType,realParentType:e.parentType,show:!0}))},T=function(){y?Bn.blob(c,a.id||o.id,g,y,"1",function(){An.getCollections(),n()}):Bn.rawQuery(c,a.id||o.id,g,"1",function(){An.getCollections(),n()})},j="root"==a.name,C=s.hasOwnProperty(E),q=s.hasOwnProperty(w),R=!("/"===a.name||o.isTuple||j||q),S=!(o.isTuple&&"thing"!==a.type||C),P=i&&i.hasOwnProperty("#");return r.a.createElement(r.a.Fragment,null,v?r.a.createElement(Lt.a,{open:t,onClose:n,"aria-labelledby":"form-dialog-title",fullWidth:!0,maxWidth:"md",scroll:"body",onKeyDown:function(e){"Enter"==e.key&&T()}},r.a.createElement(Ft.a,null,r.a.createElement(h.a,{container:!0,spacing:1},r.a.createElement(h.a,{container:!0,spacing:1,item:!0,xs:12},r.a.createElement(h.a,{item:!0,xs:8},r.a.createElement(re.a,{variant:"body1"},"Detail view of:"),r.a.createElement(re.a,{variant:"h4",color:"primary",component:"span"},"".concat(a.name||o.name,"  ")),r.a.createElement(re.a,{variant:"body2",component:"span"},"- ".concat(E||a.type))),r.a.createElement(h.a,{container:!0,spacing:1,item:!0,xs:4,justify:"flex-end"},R&&r.a.createElement(h.a,{item:!0},r.a.createElement(ur,{scope:c,thing:i,child:gr({},a,{type:"array"==a.type?E:a.type}),parent:o})),r.a.createElement(h.a,{item:!0},r.a.createElement(W.a,{color:"primary",onClick:function(){mr.navigate({path:"query",index:0,item:"thing"===a.type?"#".concat(a.id):"#".concat(o.id,".").concat(a.name),scope:c})}},r.a.createElement(Ka.a,{fontSize:"large"}))),P&&r.a.createElement(h.a,{item:!0},r.a.createElement(ya,{buttonIsFab:!0,scope:c,thingId:a.id||o.id})))),S?r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(lt,{tag:"1"})),r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(ir,{cb:function(e,t,n){f(gr({},d,{query:e,blob:t,error:n}))},customTypes:s,dataTypes:l,thing:i,child:gr({},a,{type:E||a.type}),parent:o}))):null)),r.a.createElement(Pe.a,null),r.a.createElement(At.a,null,r.a.createElement(x.a,{onClick:n,color:"primary"},"Close"),S?r.a.createElement(x.a,{onClick:T,disabled:Boolean(b),color:"primary"},"Submit"):null)):null)};br.defaultProps={thing:null},br.propTypes={open:P.a.bool.isRequired,onClose:P.a.func.isRequired,scope:P.a.string.isRequired,thing:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]),parent:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string,isTuple:P.a.bool}).isRequired,child:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string}).isRequired,customTypes:fr.types.customTypes.isRequired};var vr=yr(br),Er=function(e){var t=e.child,n=e.parent,a=e.thing,o=e.scope,i=r.a.useState(!1),c=p()(i,2),s=c[0],l=c[1];return r.a.createElement(r.a.Fragment,null,r.a.createElement(ye.a,{onClick:function(){l(!0)}},r.a.createElement(Ga.a,{color:"primary"})),s?r.a.createElement(vr,{open:s,onClose:function(){l(!1)},child:t,parent:n,thing:a,scope:o}):null)};Er.defaultProps={thing:null},Er.propTypes={scope:P.a.string.isRequired,thing:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]),parent:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string,isTuple:P.a.bool}).isRequired,child:P.a.shape({id:P.a.number,index:P.a.number,name:P.a.string,type:P.a.string}).isRequired};var wr=Er,kr=Object(z.a)(function(e){return{nested:{paddingLeft:e.spacing(4)},listItem:{margin:0,padding:0},green:{color:e.palette.primary.green}}}),Or=function e(t){var n=t.thing,a=t.collection,o=t.things,i=t.parent,c=t.child,s=t.watchIds,l=kr(),u=r.a.useState(!1),m=p()(u,2),d=m[0],f=m[1],h=ba(n),g=va(h,n),y="thing"===h||"array"===h||"set"===h||"closure"===h,v="array"===h&&"array"===i.type,E=n&&n["#"]||i.id,w=n&&o[n["#"]]||n,k="thing"===h&&s&&s.hasOwnProperty(["@collection:".concat(a.name)])&&s["@collection:".concat(a.name)].includes("".concat(n&&n["#"])),O=function(t){var n=p()(t,3),i=n[0],u=n[1],m=n[2],d=void 0===m?null:m;return"#"===i?null:r.a.createElement("div",{key:d||i,className:l.nested},r.a.createElement(e,{collection:a,things:o,thing:u,parent:{id:E,name:c.name,type:h,isTuple:v},child:{name:Ta(i,d),index:d},watchIds:s}))};return r.a.createElement(r.a.Fragment,null,r.a.createElement(zn,{name:c.name,type:h,val:g,canToggle:y,onRenderChildren:function(){return Array.isArray(n)?n.map(function(e,t){return O(["".concat(c.name),e,t])}):Object.entries(w||{}).map(O)},onClick:function(){n&&n["#"]&&Bn.query(a,n["#"])},button:!0,onAction:function(){f(!0)}},r.a.createElement(r.a.Fragment,null,k?r.a.createElement(b.a,{className:l.icon},r.a.createElement(ma.a,{className:l.green})):null)),d?r.a.createElement(vr,{open:d,onClose:function(){f(!1)},child:{id:n&&n["#"]||null,index:c.index,name:c.name,type:h},parent:i,thing:w,scope:"@collection:".concat(a.name)}):null)};Or.defaultProps={thing:null},Or.propTypes={thing:P.a.oneOfType([P.a.object,P.a.array,P.a.number,P.a.bool,P.a.string]),collection:P.a.object.isRequired,parent:P.a.shape({id:P.a.number,name:P.a.string,type:P.a.string,isTuple:P.a.bool}).isRequired,child:P.a.shape({name:P.a.string,index:P.a.number}).isRequired,things:P.a.object.isRequired,watchIds:P.a.object.isRequired};var Tr=Or,jr=Object(u.withVlow)([{store:Wn,keys:["things"]},{store:Ln,keys:["watchIds"]}]),xr=Object(z.a)(function(e){return{root:{width:"100%",backgroundColor:e.palette.background.paper},icon:{paddingTop:e.spacing(2)},thing:{paddingLeft:e.spacing(6)},listItem:{margin:0,padding:0},green:{color:e.palette.primary.green}}}),Cr=function(e){var t=e.things,n=e.collection,a=e.watchIds,o=xr(),i=t.hasOwnProperty(n.collection_id);r.a.useEffect(function(){Bn.query(n)},[n.name]);var c=a&&a.hasOwnProperty(["@collection:".concat(n.name)])&&a["@collection:".concat(n.name)].includes("".concat(n.collection_id));return r.a.createElement(r.a.Fragment,null,i?r.a.createElement(g.a,{component:"nav",className:o.root,dense:!0,disablePadding:!0},Object.entries(t[n.collection_id]).map(function(e){var i=p()(e,2),c=i[0],s=i[1];return"#"===c?null:r.a.createElement(r.a.Fragment,{key:c},r.a.createElement(Tr,{className:o.thing,id:n.collection_id,thing:s,things:t,collection:n,parent:{id:n.collection_id,name:"root",type:"thing",isTuple:!1},child:{name:c,index:null},watchIds:a}))}),r.a.createElement(y.a,{className:o.listItem},c?r.a.createElement(b.a,{className:o.icon},r.a.createElement(ma.a,{className:o.green})):null,r.a.createElement(b.a,{className:o.icon},r.a.createElement(wr,{child:{id:n.collection_id,index:null,name:"root",type:"thing"},parent:{id:null,index:null,name:"",type:"",isTuple:!1},scope:"@collection:".concat(n.name),thing:t[n.collection_id]})),Object.entries(t[n.collection_id]).length<2?r.a.createElement(v.a,{primary:"Add your first thing!"}):null)):r.a.createElement(re.a,{variant:"caption"},"Cannot fetch data."))};Cr.propTypes={collection:P.a.object.isRequired,things:Wn.types.things.isRequired,watchIds:Ln.types.watchIds.isRequired};var qr=jr(Cr),Rr=function(e){var t=e.collection;return r.a.createElement(Ct,{title:"THINGS TREE",content:r.a.createElement(r.a.Fragment,null,r.a.createElement(qr,{collection:t}))})};Rr.propTypes={collection:P.a.object.isRequired};var Sr=Rr,Pr=Object(u.withVlow)([{store:Wn},{store:dr,keys:["match"]},{store:Fn,keys:["collections"]}]),_r=function(e){var t=e.match,n=e.collections,a=ka(t.index,n);return r.a.createElement(gn,{preTitle:"Overview of:",title:a.name,content:r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{item:!0,md:7,xs:12},r.a.createElement(Sr,{collection:a})),r.a.createElement(h.a,{item:!0,md:5,xs:12},r.a.createElement(Ma,{collection:a})))})};_r.propTypes={match:dr.types.match.isRequired,collections:Fn.types.collections.isRequired};var Ir=Pr(_r),Nr=n(550),Dr=n.n(Nr),Lr=n(335),Ar=n.n(Lr);function Fr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Br(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Fr(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Fr(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Wr=Object(u.withVlow)([{store:Fn,keys:["collections"]}]),Ur=Object(z.a)(function(e){return{button:{margin:e.spacing(1)},buttonBase:{width:"100%",height:"100%",padding:0,justifyContent:"left",paddingLeft:e.spacing(4),paddingRight:e.spacing(2),paddingTop:e.spacing(1),paddingBottom:e.spacing(1),"&:hover":{backgroundColor:"#303030"},text:"italic"},icon:{marginTop:e.spacing(.5),marginBottom:e.spacing(.5),color:"#eee"}}}),Mr={show:!1,errors:{},form:{}},zr=function(e){var t=e.collections,n=Ur(),a=r.a.useState(Mr),o=p()(a,2),i=o[0],c=o[1],s=i.show,l=i.errors,u=i.form,m={name:function(){return u.name.length>0&&t.every(function(e){return e.name!==u.name})}},d=function(){var e=Object.keys(m).reduce(function(e,t){return e[t]=!m[t](),e},{});c(Br({},i,{errors:e})),Object.values(e).some(function(e){return e})||An.addCollection(u.name,"4",function(){return c(Br({},i,{show:!1}))})},f=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"4"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"name",label:"Name",type:"text",value:u.name,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;c(function(e){return Br({},e,{form:V()({},e.form,A()({},n,a)),errors:{}})})},fullWidth:!0,error:l.name}));return r.a.createElement(zt,{button:r.a.createElement(ye.a,{className:n.buttonBase,onClick:function(){c({show:!0,errors:{},form:{name:""}})}},r.a.createElement(Ar.a,{className:n.icon})),title:"New collection",open:s,onOk:d,onClose:function(){c(Br({},i,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&d()}},f)};zr.propTypes={collections:Fn.types.collections.isRequired};var Gr=Wr(zr),Vr=Object(u.withVlow)([{store:Fn,keys:["collections"]}]),Kr=function(e){var t=e.collections;r.a.useEffect(function(){An.getCollections();var e=setInterval(function(){An.getCollections()},5e3);return function(){clearInterval(e)}},[]);return r.a.createElement(Dt,{title:"COLLECTIONS",icon:r.a.createElement(Dr.a,null),items:t,addItem:r.a.createElement(Gr,null),onClickItem:function(e){mr.navigate({path:"collection",index:e,item:"",scope:""})}})};Kr.propTypes={collections:Fn.types.collections.isRequired};var Qr=Vr(Kr),Hr=n(1099),Jr=n(1053),$r=n(1087),Yr=n(1088),Zr=n(336),Xr=n.n(Zr);function eo(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function to(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?eo(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):eo(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var no={show:!1,showPassword:!1,errors:{},form:{}},ao=function(e){var t=e.user,n=r.a.useState(no),a=p()(n,2),o=a[0],i=a[1],c=o.show,s=o.showPassword,l=o.errors,u=o.form,m={password:function(){return u.password.length>0}},d=function(){var e=Object.keys(m).reduce(function(e,t){return e[t]=!m[t](),e},{});i(to({},o,{errors:e})),Object.values(e).some(function(e){return e})||(u.set?An.password(t.name,u.password,"16",function(){return i(to({},o,{show:!1}))}):An.resetPassword(t.name,"16",function(){return i(to({},o,{show:!1}))}))},f=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"16"}),r.a.createElement(re.a,{component:"div",variant:"caption"},t.tokens.length||u.set?null:r.a.createElement(Jr.a,{component:"label",error:!0},"This user has no access tokens. Resetting the password would lock out ".concat(t.name,".")),r.a.createElement(h.a,{component:"label",container:!0,alignItems:"center",spacing:1},r.a.createElement(h.a,{item:!0},"no"),r.a.createElement(h.a,{item:!0},r.a.createElement($r.a,{checked:u.set,color:"primary",onChange:function(e){var t=e.target.checked;i(function(e){return to({},e,{form:V()({},e.form,{set:t})})})}})),r.a.createElement(h.a,{item:!0},"yes"))),u.set?r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"password",label:"Password",type:s?"text":"password",value:u.password,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;i(function(e){return to({},e,{form:V()({},e.form,A()({},n,a)),errors:{}})})},fullWidth:!0,error:l.password,InputProps:{endAdornment:r.a.createElement(Yr.a,{position:"end"},r.a.createElement(Se.a,{onClick:function(){i(to({},o,{showPassword:!s}))}},s?r.a.createElement(j.a,null):r.a.createElement(Xr.a,null)))}}):null);return r.a.createElement(zt,{button:r.a.createElement(Te,{onClick:function(){i(to({},o,{show:!0,showPassword:!1,errors:{},form:{password:"",set:t.has_password}}))},title:"Password"}),title:"Set Password",open:c,onOk:d,onClose:function(){i(to({},o,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&d()}},f)};ao.propTypes={user:P.a.object.isRequired};var ro=ao,oo=function(e){var t=e.user,n=r.a.useState(!1),a=p()(n,2),o=a[0],i=a[1],c=r.a.useState(""),s=p()(c,2),l=s[0],u=s[1];r.a.useEffect(function(){u(t.name)},[]);var m=function(){An.removeUser(t.name,"17",function(){return i(!1)})};return r.a.createElement(zt,{button:r.a.createElement(Te,{onClick:function(){i(!0)},title:"Remove"}),title:"Remove ".concat(l),open:o,onOk:m,onClose:function(){i(!1)},onKeyPress:function(e){"Enter"==e.key&&m()}},r.a.createElement(lt,{tag:"17"}))};oo.propTypes={user:P.a.object.isRequired};var io=oo;function co(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function so(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?co(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):co(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var lo=Object(u.withVlow)([{store:Fn,keys:["users"]}]),uo={show:!1,errors:{},form:{}},mo=function(e){var t=e.user,n=e.users,a=r.a.useState(uo),o=p()(a,2),i=o[0],c=o[1],s=i.show,l=i.errors,u=i.form,m={name:function(){return u.name.length>0&&n.every(function(e){return e.name!==u.name})}},d=function(){var e=Object.keys(m).reduce(function(e,t){return e[t]=!m[t](),e},{});c(so({},i,{errors:e})),Object.values(e).some(function(e){return e})||An.renameUser(t.name,u.name,"18",function(){return c(so({},i,{show:!1}))})},f=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"18"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"name",label:"Name",type:"text",value:u.name,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;c(function(e){return so({},e,{form:V()({},e.form,A()({},n,a)),errors:{}})})},fullWidth:!0,error:l.name}));return r.a.createElement(zt,{button:r.a.createElement(Te,{onClick:function(){c({show:!0,errors:{},form:so({},t)})},title:"Rename"}),title:"Rename user",open:s,onOk:d,onClose:function(){c(so({},i,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&d()}},f)};mo.propTypes={user:P.a.object.isRequired,users:Fn.types.users.isRequired};var po=lo(mo),fo=[{ky:"read",label:"READ"},{ky:"modify",label:"MODIFY"},{ky:"grant",label:"GRANT"},{ky:"watch",label:"WATCH"},{ky:"run",label:"RUN"}],ho=function(e){var t=e.user,n=e.collections,a=r.a.useState({}),o=p()(a,2),i=o[0],c=o[1],s=function(e,t){var n={full:!1,read:!1,modify:!1,grant:!1,watch:!1,run:!1};return n.full=t.includes("FULL"),n.full?(n.read=!0,n.modify=!0,n.grant=!0,n.watch=!0,n.run=!0):(n.read=t.includes("READ"),n.modify=t.includes("MODIFY"),n.grant=t.includes("GRANT"),n.watch=t.includes("WATCH"),n.run=t.includes("RUN")),A()({},e,n)},l=Oa(n)[0];r.a.useEffect(function(){var e={};l.map(function(t){t._name;var n=t.value;e=V()({},e,s(n,""))}),t.access.map(function(t){var n=t.scope,a=t.privileges;e=V()({},e,s(n,a))}),c(e)},[t,n.length]);var u=function(e){return function(n){var a=n.target,r=a.value,o=a.checked;c(function(t){var n=JSON.parse(JSON.stringify(t));return n[e][r]=o,n}),o?An.grant(t.name,e,r,"19"):An.revoke(t.name,e,r,"19")}},m=[{name:"password",component:r.a.createElement(ro,{user:t})},{name:"rename",component:r.a.createElement(po,{user:t})},{name:"remove",component:r.a.createElement(io,{user:t})}],d=Object.keys(i);return r.a.createElement(h.a,{container:!0},r.a.createElement(h.a,{item:!0,lg:6,md:12},r.a.createElement(f.a,null,r.a.createElement(kt.a,null,r.a.createElement(re.a,{variant:"body1"},"ACCESS RULES"),r.a.createElement(lt,{tag:"19"}),r.a.createElement(h.a,{container:!0,direction:"row",spacing:3},r.a.createElement(h.a,{container:!0,item:!0,spacing:1},r.a.createElement(h.a,{item:!0,container:!0,xs:12,spacing:2},r.a.createElement(h.a,{item:!0,xs:3}),r.a.createElement(h.a,{item:!0,container:!0,xs:9},r.a.createElement(h.a,{item:!0,container:!0,xs:12},fo.map(function(e){var t=e.ky,n=e.label;return r.a.createElement(h.a,{item:!0,xs:2,key:t,container:!0,justify:"center"},r.a.createElement(re.a,{variant:"overline",align:"center",component:"span",noWrap:!0},n))})))),d.map(function(e,t){return r.a.createElement(r.a.Fragment,{key:t},r.a.createElement(h.a,{item:!0,container:!0,xs:12,spacing:2},r.a.createElement(h.a,{item:!0,xs:3,container:!0,alignItems:"center"},r.a.createElement(re.a,{component:"span",noWrap:!0},e)),r.a.createElement(h.a,{item:!0,container:!0,xs:9},r.a.createElement(h.a,{item:!0,container:!0,xs:12},fo.map(function(t){var n=t.ky,a=t.label;return r.a.createElement(h.a,{item:!0,xs:2,key:n,container:!0,justify:"center"},r.a.createElement(Hr.a,{checked:i[e][n],onChange:u(e),value:a,color:"primary"}))})))))})))))),r.a.createElement(h.a,{container:!0,item:!0,lg:6,md:12,spacing:1,direction:"row",justify:"center",alignItems:"center"},m.map(function(e){return r.a.createElement(h.a,{key:e.name,item:!0},e.component)})))};ho.propTypes={user:P.a.object.isRequired,collections:P.a.arrayOf(P.a.object).isRequired};var go=ho;function yo(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function bo(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?yo(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):yo(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var vo={show:!1,form:{},switches:{description:!1,expirationTime:!1}},Eo=function(e){var t=e.user,n=r.a.useState(vo),a=p()(n,2),o=a[0],i=a[1],c=o.show,s=o.form,l=o.switches,u=function(e){var t=e.target,n=t.id,a=t.checked;i(function(e){return bo({},e,{switches:V()({},e.switches,A()({},n,a))})})},m=function(){An.newToken({name:t.name,expirationTime:l.expirationTime?"(now() + "+s.expirationTime+")":null,description:l.description?s.description:null},"15",function(){return i(bo({},o,{show:!1}))})},d=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"15"}),r.a.createElement(g.a,null,r.a.createElement(y.a,null,r.a.createElement(le.a,{control:r.a.createElement($r.a,{checked:l.description,color:"primary",id:"description",onChange:u}),label:"Add description [optional]"})),r.a.createElement(ne.a,{in:l.description,timeout:"auto",unmountOnExit:!0},r.a.createElement(y.a,null,r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"description",label:"Description",type:"text",value:s.description,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;i(function(e){return bo({},e,{form:V()({},e.form,A()({},n,a))})})},fullWidth:!0}))),r.a.createElement(y.a,null,r.a.createElement(le.a,{control:r.a.createElement($r.a,{checked:l.expirationTime,color:"primary",id:"expirationTime",onChange:u}),label:"Add expiration time [optional]"})),r.a.createElement(ne.a,{in:l.expirationTime,timeout:"auto",unmountOnExit:!0},r.a.createElement(y.a,null,r.a.createElement(fn,{cb:function(e){i(function(t){return bo({},t,{form:V()({},t.form,{expirationTime:e}),errors:{}})})}})))));return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){i({show:!0,form:{description:"",expirationTime:""},switches:{description:!1,expirationTime:!1}})}},"Add token"),title:"New token",open:c,onOk:m,onClose:function(){i(bo({},o,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&m()}},d)};Eo.propTypes={user:P.a.object.isRequired};var wo=Eo,ko=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(x.a,{variant:"outlined",onClick:function(){An.delExpired()}},"Remove expired "))},Oo=function(e){var t=e.token;return r.a.createElement(Se.a,{onClick:function(){An.delToken(t.key)}},r.a.createElement(sr.a,null))};Oo.propTypes={token:P.a.object.isRequired};var To=Oo,jo=function(e){var t=e.user,n=t.tokens;return r.a.createElement(Ct,{title:"TOKENS",content:r.a.createElement(r.a.Fragment,null,t.tokens.length?r.a.createElement(rn,{header:[{ky:"description",label:"Description"},{ky:"expiration_time",label:"Expiration UTC time"},{ky:"key",label:"Key"},{ky:"status",label:"Status"}],rows:n,rowClick:function(){return null},buttons:function(e){return r.a.createElement(To,{token:e})}}):t.has_password?r.a.createElement(re.a,null,"Not set."):r.a.createElement(re.a,{color:"error"},"This user had no password set. Set a token or password to prevent ".concat(t.name," from getting locked out."))),buttons:r.a.createElement(r.a.Fragment,null,r.a.createElement(ko,null),r.a.createElement(wo,{user:t}))})};jo.propTypes={user:P.a.object.isRequired};var xo=jo,Co=Object(u.withVlow)([{store:dr,keys:["match"]},{store:Fn,keys:["collections","user","users"]}]),qo=function(e){var t=e.match,n=e.user,a=e.users,o=e.collections,i=a.length?a:wa(n)?[]:[n],c=ka(t.index,i);return wa(c)?null:r.a.createElement(gn,{preTitle:"Authentication of:",title:c.name,content:r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{item:!0,md:12,xs:12},r.a.createElement(go,{user:c,collections:o})),r.a.createElement(h.a,{item:!0,md:12,xs:12},r.a.createElement(xo,{user:c})))})};qo.propTypes={match:dr.types.match.isRequired,collections:Fn.types.collections.isRequired,user:Fn.types.user.isRequired,users:Fn.types.users.isRequired};var Ro=Co(qo),So=n(337),Po=n.n(So);function _o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Io(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?_o(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):_o(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var No=Object(u.withVlow)([{store:Fn,keys:["users"]}]),Do=Object(z.a)(function(e){return{button:{margin:e.spacing(1)},buttonBase:{width:"100%",height:"100%",padding:0,justifyContent:"left",paddingLeft:e.spacing(4),paddingRight:e.spacing(2),paddingTop:e.spacing(1),paddingBottom:e.spacing(1),"&:hover":{backgroundColor:"#303030"},text:"italic"},icon:{marginTop:e.spacing(.5),marginBottom:e.spacing(.5),color:"#eee"}}}),Lo={show:!1,errors:{},form:{}},Ao=function(e){var t=e.users,n=Do(),a=r.a.useState(Lo),o=p()(a,2),i=o[0],c=o[1],s=i.show,l=i.errors,u=i.form,m={name:function(){return u.name.length>0&&t.every(function(e){return e.name!==u.name})}},d=function(){var e=Object.keys(m).reduce(function(e,t){return e[t]=!m[t](),e},{});c(Io({},i,{errors:e})),Object.values(e).some(function(e){return e})||An.addUser(u.name,"14",function(){return c(Io({},i,{show:!1}))})},f=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"14"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"name",label:"Name",type:"text",value:u.name,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;c(function(e){return Io({},e,{form:V()({},e.form,A()({},n,a)),errors:{}})})},fullWidth:!0,error:l.name}));return r.a.createElement(zt,{button:r.a.createElement(ye.a,{className:n.buttonBase,onClick:function(){c({show:!0,errors:{},form:{name:""}})}},r.a.createElement(Ar.a,{className:n.icon})),title:"New User",open:s,onOk:d,onClose:function(){c(Io({},i,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&d()}},f)};Ao.propTypes={users:Fn.types.users.isRequired};var Fo=No(Ao),Bo=Object(u.withVlow)([{store:Fn,keys:["user","users"]}]),Wo=function(e){var t=e.user,n=e.users;r.a.useEffect(function(){An.getUsers(),An.getUser();var e=setInterval(function(){An.getUsers(),An.getUser()},5e3);return function(){clearInterval(e)}},[]);var a=n.length?n:wa(t)?[]:[t];return r.a.createElement(Dt,{title:"USERS",icon:r.a.createElement(Po.a,null),items:a,addItem:r.a.createElement(Fo,null),onClickItem:function(e){mr.navigate({path:"user",index:e,item:"",scope:""})}})};Wo.propTypes={user:Fn.types.user.isRequired,users:Fn.types.users.isRequired};var Uo=Bo(Wo),Mo=m.a.createActions(["getNodes","getNode","setLoglevel","resetCounters","shutdown","addNode","delNode","getBackups","addBackup","delBackup"]),zo=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,Mo))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onGetNodes",value:function(){var e=this;this.emit("query",{scope:"@node",query:"{nodes: nodes_info(), connectedNode: node_info()};"}).done(function(t){e.setState({nodes:t.nodes,connectedNode:t.connectedNode})}).fail(function(t,n,a){e.setState({counters:{},nodes:[],node:{}}),rt.setToastError(a.Log)})}},{key:"onGetNode",value:function(e){var t=this;this.emit("query",{scope:"@node:".concat(e),query:"{counters: counters(), node: node_info()};"}).done(function(e){t.setState({node:e.node,counters:e.counters})}).fail(function(e,t,n){return rt.setToastError(n.Log)})}},{key:"onSetLoglevel",value:function(e,t,n,a){var r=this,o="set_log_level(".concat(t,"); node_info();");this.emit("query",{scope:"@node:".concat(e),query:o}).done(function(e){r.setState({node:e}),a()}).fail(function(e,t,a){rt.setMsgError(n,a.Log)})}},{key:"onResetCounters",value:function(e){var t=this;this.emit("query",{scope:"@node:".concat(e),query:"reset_counters(); counters();"}).done(function(e){t.setState({counters:e})})}},{key:"onShutdown",value:function(e,t,n){var a=this;this.emit("query",{scope:"@node:".concat(e),query:"shutdown(); {nodes: nodes_info()};"}).done(function(e){a.setState({nodes:e.nodes}),n()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onAddNode",value:function(e,t,n){var a=this,r=e.port?"new_node('".concat(e.secret,"', '").concat(e.address,"', ").concat(e.port,");"):"new_node('".concat(e.secret,"', '").concat(e.address,"');");this.emit("query",{scope:"@thingsdb",query:r}).done(function(e){n(),a.onGetNodes()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onDelNode",value:function(e,t,n){var a=this,r="del_node(".concat(e,");");this.emit("query",{scope:"@thingsdb",query:r}).done(function(e){n(),a.onGetNodes()}).fail(function(e,n,a){rt.setMsgError(t,a.Log)})}},{key:"onGetBackups",value:function(e){var t=this;this.emit("query",{scope:"@node:".concat(e),query:"backups_info();"}).done(function(e){t.setState({backups:e})}).fail(function(e,t,n){return rt.setToastError(n.Log)})}},{key:"onAddBackup",value:function(e,t,n,a){var r=this,o="new_backup('".concat(t.file,"'").concat(t.time?", '".concat(t.time,"'").concat(t.repeat?", ".concat(t.repeat):""):"",");");console.log(o),this.emit("query",{scope:"@node:".concat(e),query:o}).done(function(t){a(),r.onGetBackups(e)}).fail(function(e,t,a){return rt.setMsgError(n,a.Log)})}},{key:"onDelBackup",value:function(e,t){var n=this,a="del_backup(".concat(t,");");this.emit("query",{scope:"@node:".concat(e),query:a}).done(function(t){n.onGetBackups(e)}).fail(function(e,t,n){return rt.setToastError(n.Log)})}}]),t}(In);function Go(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Vo(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Go(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Go(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}A()(zo,"types",{counters:P.a.object,nodes:P.a.arrayOf(P.a.object),node:P.a.object,connectedNode:P.a.object,backups:P.a.arrayOf(P.a.object)}),A()(zo,"defaults",{counters:{},nodes:[],node:{},connectedNode:{},backups:[]});var Ko={show:!1,errors:{},form:{}},Qo=function(){var e=r.a.useState(Ko),t=p()(e,2),n=t[0],a=t[1],o=n.show,i=n.errors,c=n.form,s={secret:function(){return c.secret.length>0},address:function(){return c.address.length>0},port:function(){return!0}},l=function(e){var t=e.target,n=t.id,r=t.value;a(function(e){return Vo({},e,{form:V()({},e.form,A()({},n,r)),errors:{}})})},u=function(){var e=Object.keys(s).reduce(function(e,t){return e[t]=!s[t](),e},{});a(Vo({},n,{errors:e})),Object.values(e).some(function(e){return e})||Mo.addNode(c,"10",function(){return a(Vo({},n,{show:!1}))})},m=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"10"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"secret",label:"Secret",type:"text",value:c.secret,spellCheck:!1,onChange:l,fullWidth:!0,error:i.secret}),r.a.createElement(M.a,{margin:"dense",id:"address",label:"IP address",type:"text",value:c.address,spellCheck:!1,onChange:l,fullWidth:!0,error:i.address}),r.a.createElement(M.a,{margin:"dense",id:"port",label:"Port",type:"text",value:c.port,spellCheck:!1,onChange:l,fullWidth:!0,error:i.port}));return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){a(Vo({},n,{show:!0,errors:{},form:{secret:"",address:"",port:""}}))}},"Add node"),title:"Add Node",open:o,onOk:u,onClose:function(){a(Vo({},n,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&u()}},m)},Ho=Object(z.a)(function(e){return{buttons:{padding:e.spacing(1)}}}),Jo=function(){var e=Ho();return r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{className:e.buttons,container:!0,direction:"column",spacing:3},r.a.createElement(h.a,{item:!0,container:!0,xs:12,spacing:1},r.a.createElement(h.a,{item:!0},r.a.createElement(Qo,null)))))};function $o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function Yo(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$o(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$o(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var Zo={show:!1,form:{},switches:{time:!1,repeat:!1}},Xo=function(e){var t=e.node,n=r.a.useState(Zo),a=p()(n,2),o=a[0],i=a[1],c=o.show,s=o.form,l=o.switches,u=function(e){var t=e.target,n=t.id,a=t.checked;i(function(e){return Yo({},e,{switches:V()({},e.switches,A()({},n,a))})})},m=function(){Mo.addBackup(t.node_id,{file:s.file,time:l.time?s.time:null,repeat:l.repeat?s.repeat:null},"20",function(){return i(Yo({},o,{show:!1}))})},d=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"20"}),r.a.createElement(g.a,null,r.a.createElement(y.a,null,r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"file",label:"File",type:"text",value:s.file,spellCheck:!1,onChange:function(e){var t=e.target,n=t.id,a=t.value;i(function(e){return Yo({},e,{form:V()({},e.form,A()({},n,a))})})},placeholder:"/tmp/example.tar.gz",fullWidth:!0})),r.a.createElement(y.a,null,r.a.createElement(le.a,{control:r.a.createElement($r.a,{checked:l.time,color:"primary",id:"time",onChange:u}),label:"Add time [optional]"})),r.a.createElement(ne.a,{in:l.time,timeout:"auto",unmountOnExit:!0},r.a.createElement(y.a,null,r.a.createElement(un,{cb:function(e){i(function(t){return Yo({},t,{form:V()({},t.form,{time:e}),errors:{}})})}}))),r.a.createElement(y.a,null,r.a.createElement(le.a,{control:r.a.createElement($r.a,{checked:l.repeat,color:"primary",id:"repeat",onChange:u}),label:"Add continuous repeat [optional]"})),r.a.createElement(ne.a,{in:l.repeat,timeout:"auto",unmountOnExit:!0},r.a.createElement(y.a,null,r.a.createElement(fn,{cb:function(e){i(function(t){return Yo({},t,{form:V()({},t.form,{repeat:e}),errors:{}})})}})))));return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){i({show:!0,form:{file:"",time:"",repeat:""},switches:{time:!1,repeat:!1}})}},"Add backup"),title:"New backup",open:c,onOk:m,onClose:function(){i(Yo({},o,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&m()}},d)};Xo.propTypes={node:P.a.object.isRequired};var ei=Xo,ti=function(e){var t=e.nodeId,n=e.backup;return r.a.createElement(Se.a,{onClick:function(){Mo.delBackup(t,n.id)}},r.a.createElement(sr.a,null))};ti.propTypes={nodeId:P.a.number.isRequired,backup:P.a.object.isRequired};var ni=ti,ai=function(e){var t=e.backups,n=e.nodeId;console.log(t);var a=t;return r.a.createElement(r.a.Fragment,null,t.length?r.a.createElement(rn,{header:[{ky:"id",label:"ID"},{ky:"file_template",label:"File template"},{ky:"next_run",label:"Next run at"},{ky:"repeat",label:"Repeat after (sec)"},{ky:"result_code",label:"Result code"},{ky:"result_message",label:"Result message"}],rows:a,rowClick:function(){return null},buttons:function(e){return r.a.createElement(ni,{nodeId:n,backup:e})}}):r.a.createElement(re.a,{variant:"subtitle2"},"no backup information"))};ai.propTypes={backups:P.a.arrayOf(P.a.object).isRequired,nodeId:P.a.number.isRequired};var ri=ai,oi=function(e){var t=e.counters;return r.a.createElement(St,{header:[{ky:"title1",title:"QUERIES",labels:[{ky:"queries_success",label:"Successful queries"},{ky:"queries_with_error",label:"Queries with error"}]},{ky:"title2",title:"WATCHER",labels:[{ky:"watcher_failed",label:"Watcher failed"}]},{ky:"title3",title:"GARBAGE",labels:[{ky:"garbage_collected",label:"Garbage collected"}]},{ky:"title4",title:"EVENTS",labels:[{ky:"events_with_gap",label:"Events with gap"},{ky:"events_skipped",label:"Events skipped"},{ky:"events_failed",label:"Events failed"},{ky:"events_killed",label:"Events killed"},{ky:"events_committed",label:"Events committed"},{ky:"events_quorum_lost",label:"Events quorum lost"},{ky:"events_unaligned",label:"Events unaligned"},{ky:"longest_event_duration",label:"Longest event duration"},{ky:"average_event_duration",label:"Average event duration"}]}],content:t})};oi.propTypes={counters:P.a.object.isRequired};var ii=oi,ci=function(e){var t=e.node;return r.a.createElement(r.a.Fragment,null,r.a.createElement(x.a,{variant:"outlined",onClick:function(){Mo.resetCounters(t.node_id)}},"Reset counters"))};ci.propTypes={node:P.a.object.isRequired};var si=ci;function li(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function ui(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?li(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):li(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var mi=["DEBUG","INFO","WARNING","ERROR","CRITICAL"],di={show:!1,form:{}},pi=function(e){var t=e.node,n=r.a.useState(di),a=p()(n,2),o=a[0],i=a[1],c=o.show,s=o.form,l=function(){Mo.setLoglevel(t.node_id,s.log_level,"12",function(){return i(ui({},o,{show:!1}))})},u=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"12"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"log_level",label:"Loglevel",value:s.log_level,onChange:function(e){var t=e.target,n=t.id,a=t.value;i(function(e){return ui({},e,{form:V()({},e.form,A()({},n,a))})})},fullWidth:!0,select:!0,SelectProps:{native:!0}},mi.map(function(e){return r.a.createElement("option",{key:e,value:e},e.toLowerCase())})));return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){i({show:!0,form:ui({},t)})}},"Loglevel"),title:"Set Loglevel",open:c,onOk:l,onClose:function(){i(ui({},o,{show:!1}))},onKeyPress:function(e){"Enter"==e.key&&l()}},u)};pi.propTypes={node:P.a.object.isRequired};var fi=pi,hi=function(e){var t=e.node;return r.a.createElement(St,{header:[{ky:"title1",title:"GENERAL",labels:[{ky:"node_id",label:"Node ID"},{ky:"hostname",label:"Hostname"},{ky:"status",label:"Status"},{ky:"log_level",label:"Log level"},{ky:"ip_support",label:"IP support"},{ky:"storage_path",label:"Storage path"},{ky:"uptime",label:"Uptime"},{ky:"zone",label:"Zone"}]},{ky:"title2",title:"PORTS",labels:[{ky:"client_port",label:"Client port"},{ky:"node_port",label:"Node port"},{ky:"http_status_port",label:"HTTP status port"}]},{ky:"title3",title:"ARCHIVE",labels:[{ky:"archive_files",label:"Archived files"},{ky:"archived_in_memory",label:"Archived in memory"},{ky:"cached_names",label:"Cached names"}]},{ky:"title4",title:"EVENTS & IDs",labels:[{ky:"events_in_queue",label:"Events in queue"},{ky:"global_committed_event_id",label:"Global committed event ID"},{ky:"global_stored_event_id",label:"Global stored event ID"},{ky:"db_stored_event_id",label:"Stored event ID"},{ky:"local_committed_event_id",label:"Local committed event ID"},{ky:"local_stored_event_id",label:"Local stored event ID"},{ky:"next_event_id",label:"Next event ID"},{ky:"next_thing_id",label:"Next thing ID"}]},{ky:"title5",title:"VERSIONS",labels:[{ky:"version",label:"ThingsDB version"},{ky:"syntax_version",label:"Syntax version"},{ky:"libcleri_version",label:"Libcleri version"},{ky:"libpcre2_version",label:"Libpcre2 version"},{ky:"msgpack_version",label:"Msgpack version"},{ky:"libuv_version",label:"Libuv version"}]}],content:t})};hi.propTypes={node:P.a.object.isRequired};var gi=hi,yi=function(e){var t=e.node,n=r.a.useState(!1),a=p()(n,2),o=a[0],i=a[1],c=function(){Mo.shutdown(t.node_id,"13",function(){return i(!1)})};return r.a.createElement(zt,{button:r.a.createElement(x.a,{variant:"outlined",onClick:function(){i(!0)}},"Shutdown"),title:"Shutdown node?",open:o,onOk:c,onClose:function(){i(!1)},onKeyPress:function(e){"Enter"==e.key&&c()}},r.a.createElement(lt,{tag:"13"}))};yi.propTypes={node:P.a.object.isRequired};var bi=yi,vi=Object(u.withVlow)([{store:zo,keys:["node","counters","backups"]}]),Ei=Object(z.a)(function(e){return{info:{marginTop:e.spacing(2),overflowY:"auto",height:"600px"},counters:{marginTop:e.spacing(2)},backup:{marginTop:e.spacing(2),overflowY:"auto",maxHeight:"400px"}}}),wi=function(e){var t=e.selectedNode,n=e.node,a=e.counters,o=e.backups,i=Ei(),c=r.a.useState(0),s=p()(c,2),l=s[0],u=s[1];r.a.useEffect(function(){var e=setInterval(function(){Mo.getNode(t.node_id),Mo.getBackups(t.node_id)},5e3);return function(){clearInterval(e)}},[]),r.a.useEffect(function(){Mo.getNode(t.node_id),Mo.getBackups(t.node_id)},[l]);var m="OFFLINE"==t.status;return n?r.a.createElement(r.a.Fragment,null,r.a.createElement(ia.a,{value:l,onChange:function(e,t){u(t)},indicatorColor:"primary","aria-label":"styled tabs example"},r.a.createElement(oa.a,{label:"Node Info"}),r.a.createElement(oa.a,{label:"Counters"}),r.a.createElement(oa.a,{label:"Backup"})),0===l&&r.a.createElement(h.a,{className:i.info,container:!0,spacing:3},r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(gi,{node:n})),m?null:r.a.createElement(h.a,{item:!0,container:!0,xs:12,spacing:1},r.a.createElement(h.a,{item:!0},r.a.createElement(fi,{node:n})),r.a.createElement(h.a,{item:!0},r.a.createElement(bi,{node:n})))),1===l&&r.a.createElement(h.a,{className:i.counters,container:!0,spacing:3},r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(ii,{counters:a})),m?null:r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(si,{node:n}))),2===l&&r.a.createElement(h.a,{className:i.backup,container:!0,spacing:3},r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(ri,{nodeId:t.node_id,backups:o})),m?null:r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(ei,{node:n})))):null};wi.propTypes={selectedNode:P.a.object.isRequired,node:zo.types.node.isRequired,counters:zo.types.counters.isRequired,backups:zo.types.backups.isRequired};var ki=vi(wi),Oi=n(551),Ti=n.n(Oi),ji=function(e){var t=e.node,n=r.a.useState(!1),a=p()(n,2),o=a[0],i=a[1],c=function(){Mo.delNode(t.node_id,"11",function(){return i(!1)})},s=r.a.createElement(r.a.Fragment,null,r.a.createElement(lt,{tag:"11"}),r.a.createElement(Bt.a,null,"Are you sure you want to remove the latest node?"));return r.a.createElement(zt,{button:r.a.createElement(ye.a,{onClick:function(){i(!0)}},r.a.createElement(Ti.a,null)),title:"CAUTION",open:o,onOk:c,onClose:function(){i(!1)},onKeyPress:function(e){"Enter"==e.key&&c()}},s)};ji.propTypes={node:P.a.object.isRequired};var xi=ji,Ci=n(552),qi=n.n(Ci),Ri=Object(z.a)(function(){return{row:{backgroundColor:"rgba(0, 0, 0, .03)",borderBottom:"1px solid rgba(0, 0, 0, .125)",marginBottom:-1,minHeight:56,"&$expanded":{minHeight:56}},collapse:{backgroundColor:"#191D1F",border:"1px solid rgba(0, 0, 0, .125)",boxShadow:"none","&:not(:last-child)":{borderBottom:0},"&:before":{display:"none"},"&$expanded":{margin:"auto"}}}}),Si=function(e){var t=e.buttons,n=e.header,a=e.rows,o=e.rowExtend,i=e.connectedNode,c=Ri(),s=r.a.useState(null),l=p()(s,2),u=l[0],m=l[1],d=function(e){return function(){m(e!==u?e:null)}};return r.a.createElement(r.a.Fragment,null,r.a.createElement(Zt.a,null,r.a.createElement(tn.a,null,r.a.createElement(nn.a,null,r.a.createElement(en.a,{colSpan:1}),n.map(function(e,t){return r.a.createElement(en.a,{key:e.ky,align:t?"right":"left"},e.label)}),r.a.createElement(en.a,{colSpan:t&&a.length?t(a[0]).length+1:1}))),r.a.createElement(Xt.a,null,a.map(function(e,a){var s=u===a;return r.a.createElement(r.a.Fragment,{key:a},r.a.createElement(nn.a,{className:c.row},r.a.createElement(en.a,{align:"right",style:{borderBottom:s?"none":null}},e.node_id==i.node_id&&r.a.createElement(qi.a,null)),n.map(function(t,n){return r.a.createElement(en.a,{key:t.ky,align:n?"right":"left",style:{borderBottom:s?"none":null}},r.a.createElement(re.a,{variant:"inherit",color:"OFFLINE"==e[t.ky]?"error":"inherit"},e[t.ky]))}),t?t(e).map(function(e,t){return r.a.createElement(en.a,{key:t,align:"right",style:{borderBottom:s?"none":null}},e)}):null,r.a.createElement(en.a,{align:"right",style:{borderBottom:s?"none":null}},r.a.createElement(Se.a,{onClick:d(a)},s?r.a.createElement(jt.a,null):r.a.createElement(gt.a,null)))),s?r.a.createElement(nn.a,{className:c.collapse,style:{borderBottom:"none"}},r.a.createElement(en.a,{colSpan:12},r.a.createElement(ne.a,{in:s,timeout:"auto",unmountOnExit:!0},o(e)))):null)}))))};Si.defaultProps={buttons:null},Si.propTypes={buttons:P.a.func,header:P.a.arrayOf(P.a.object).isRequired,rows:P.a.arrayOf(P.a.object).isRequired,rowExtend:P.a.func.isRequired,connectedNode:P.a.object.isRequired};var Pi=Si,_i=Object(u.withVlow)([{store:zo,keys:["nodes","connectedNode"]}]),Ii=function(e){var t=e.nodes,n=e.connectedNode;r.a.useEffect(function(){Mo.getNodes();var e=setInterval(function(){Mo.getNodes()},5e3);return function(){clearInterval(e)}},[]);var a=t;return r.a.createElement(r.a.Fragment,null,r.a.createElement(Pi,{buttons:function(e){return[r.a.createElement(xi,{key:0,node:e})]},header:[{ky:"address",label:"Address"},{ky:"port",label:"Port"},{ky:"status",label:"Status"}],rows:a,rowExtend:function(e){return r.a.createElement(ki,{selectedNode:e})},connectedNode:n}),r.a.createElement(Jo,null))};Ii.propTypes={nodes:zo.types.nodes.isRequired,connectedNode:zo.types.connectedNode.isRequired};var Ni=_i(Ii),Di=n(553),Li=n.n(Di),Ai=n(1089),Fi=n(554),Bi=n.n(Fi),Wi=Object(u.withVlow)([{store:Fn,keys:["user"]}]),Ui=Object(z.a)(function(e){return{avatar:{height:35},appBar:{backgroundColor:e.palette.secondary.main,flexGrow:1,marginBottom:e.spacing(1)},flex:{flexGrow:1},toolbar:{minHeight:48}}}),Mi=function(e){var t=e.additionals,n=e.user,a=Ui();return r.a.createElement(r.a.Fragment,null,r.a.createElement(Ai.a,{className:a.appBar,position:"static"},r.a.createElement(C.a,{className:a.toolbar},r.a.createElement("div",{className:a.flex},r.a.createElement("img",{alt:"ThingsDB Logo",src:"/img/thingsdb-logo.png",className:a.avatar,draggable:"false"})),r.a.createElement("div",null,r.a.createElement(kn,{menuIcon:r.a.createElement(Li.a,null)},r.a.createElement(g.a,null,r.a.createElement(y.a,null,r.a.createElement(b.a,null,r.a.createElement(Po.a,null)),r.a.createElement(v.a,{primary:n.name})),r.a.createElement(y.a,{button:!0,onClick:function(){mr.disconnect()}},r.a.createElement(b.a,null,r.a.createElement(Bi.a,null)),r.a.createElement(v.a,{primary:"Logout"}))))),r.a.createElement("div",null,t))))};Mi.defaultProps={additionals:null},Mi.propTypes={additionals:P.a.object,user:Fn.types.user.isRequired};var zi=Wi(Mi),Gi=n(555),Vi=n.n(Gi),Ki=Object(u.withVlow)([{store:Fn,keys:["collections"]}]),Qi=function(e){var t=e.onChangeScope,n=e.scope,a=e.collections,o=r.a.useState(0),i=p()(o,2),c=i[0],s=i[1],l=Oa(a),u=p()(l,2),m=u[0],d=u[1];r.a.useEffect(function(){var e=""==n?0:d.indexOf(n);s(e),t(m[e])},[]);return r.a.createElement(Ct,{title:"SCOPE",content:r.a.createElement(se.a,{"aria-label":"scope",name:"scope",value:"".concat(c),onChange:function(e){var n=e.target.value;s(n),t(m[n])}},m.map(function(e,t){return r.a.createElement(le.a,{key:e.value,value:"".concat(t),control:r.a.createElement(ce.a,{color:"primary"}),label:e.name})}))})};Qi.propTypes={onChangeScope:P.a.func.isRequired,scope:P.a.string.isRequired,collections:Fn.types.collections.isRequired};var Hi=Ki(Qi),Ji=m.a.createActions(["getProcedures","deleteProcedure"]),$i=function(e){function t(){var e;return Je()(this,t),(e=Xe()(this,tt()(t).call(this,Ji))).state=t.defaults,e}return at()(t,e),Ye()(t,[{key:"onGetProcedures",value:function(e,t){var n=this;this.emit("query",{query:"procedures_info()",scope:e}).done(function(e){n.setState({procedures:e})}).fail(function(e,n,a){return rt.setMsgError(t,a.Log),[]})}},{key:"onDeleteProcedure",value:function(e,t,n){var a=this,r="del_procedure('".concat(t,"'); procedures_info();");this.emit("query",{query:r,scope:e}).done(function(e){a.setState({procedures:e})}).fail(function(e,t,a){return rt.setMsgError(n,a.Log),[]})}}]),t}(In);A()($i,"types",{procedures:P.a.arrayOf(P.a.object)}),A()($i,"defaults",{procedures:[]});var Yi=Object(u.withVlow)([{store:$i,keys:["procedures"]}]),Zi=function(e){var t=e.scope,n=e.onSetAsInput,a=e.procedures;r.a.useEffect(function(){"@node"!=t&&""!=t&&Ji.getProcedures(t,"8")},[t]);var o="@node"==t||""==t?[]:a;return r.a.createElement(qe,{title:"procedures",items:o,onAdd:function(){n('new_procedure("...", ...)')},onClick:function(e){var t=a[e].with_side_effects?"wse(run('".concat(a[e].name,"', ").concat(a[e].arguments.map(function(e){return" <".concat(e,">")}),"))"):"run('".concat(a[e].name,"', ").concat(a[e].arguments.map(function(e){return" <".concat(e,">")}),")");n(t)},onDelete:function(e){Ji.deleteProcedure(t,a[e].name,"8")}})};Zi.propTypes={scope:P.a.string.isRequired,onSetAsInput:P.a.func.isRequired,procedures:$i.types.procedures.isRequired};var Xi=Yi(Zi),ec=Object(u.withVlow)([{store:fr,keys:["customTypes"]}]),tc=function(e){var t=e.scope,n=e.onSetAsInput,a=e.customTypes;r.a.useEffect(function(){"@node"!=t&&"@thingsdb"!=t&&""!=t&&pr.getTypes(t,"2")},[t]);var o="@node"==t||"@thingsdb"==t||""==t?[]:a,i=I()(Object.keys(o).map(function(e){return{name:e,definition:JSON.stringify(a[e])}}));return r.a.createElement(qe,{title:"custom types",items:i,onAdd:function(){n('set_type(new_type("..."), {...})')},onClick:function(e){var t=function e(t){return a[t]?"".concat(t,"{").concat(Object.entries(a[t]).map(function(t){var n=p()(t,2),a=n[0],r=n[1];return"".concat(a,": ").concat(e(r))}),"}"):"<".concat(t,">")}(Object.keys(o)[e]);n(t)},onDelete:function(e){var n=Object.keys(o)[e];pr.deleteType(t,n,"2")}})};tc.propTypes={scope:P.a.string.isRequired,onSetAsInput:P.a.func.isRequired,customTypes:fr.types.customTypes.isRequired};var nc=ec(tc),ac=Object(u.withVlow)([{store:dr,keys:["match"]},{store:$i},{store:Wn}]),rc=function(e){var t=e.match,n=r.a.useState(""),a=p()(n,2),o=a[0],i=a[1],c=r.a.useState(null),s=p()(c,2),l=s[0],u=s[1],m=r.a.useState({}),d=p()(m,2),g=d[0],y=d[1],b=r.a.useState(""),v=p()(b,2),E=v[0],w=v[1];r.a.useEffect(function(){w(t.item)},[t.item]);var k=function(){Bn.queryEditor(o,g.value,g.collectionId,O,"9"),Ji.getProcedures(g.value,"9"),g.value.includes("collection")&&pr.getTypes(g.value,"9")},O=function(e){u(null===e?"nil":e)},T=function(e){j(),w(e)},j=function(){rt.removeMsgError("9")};return r.a.createElement(bn,{preTitle:"Customize your:",title:"Query",content:r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(f.a,{id:"editor"},r.a.createElement(wt.a,{title:"INPUT",titleTypographyProps:{variant:"body1"}}),r.a.createElement(kt.a,{onKeyDown:function(e){var t=e.key;e.ctrlKey&&"Enter"==t&&k()}},r.a.createElement(lt,{tag:"9"}),r.a.createElement(aa,{onChange:function(e){j(),w(""),i(e)},input:E})),r.a.createElement(Pe.a,null),r.a.createElement(Ot.a,null,r.a.createElement(x.a,{onClick:k,variant:"text",color:"primary",size:"large"},r.a.createElement(Vi.a,null))))),r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(Ct,{title:"OUTPUT",content:r.a.createElement(la,{output:l})}))),sideContent:r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(Hi,{scope:t.scope,onChangeScope:function(e){j(),y(e)}})),r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(Xi,{scope:g.hasOwnProperty("value")?g.value:"",onSetAsInput:T})),r.a.createElement(h.a,{item:!0,xs:12},r.a.createElement(nc,{scope:g.hasOwnProperty("value")?g.value:"",onSetAsInput:T})))})};rc.propTypes={match:dr.types.match.isRequired};var oc=ac(rc),ic=Object(z.a)(function(e){return{root:{width:"100%",maxWidth:360,backgroundColor:e.palette.background.paper},nested:{paddingLeft:e.spacing(4)},nestedAdd:{padding:0}}}),cc=function(){var e=ic();return r.a.createElement(g.a,{className:e.root,dense:!0,disablePadding:!0},r.a.createElement(y.a,{button:!0,onClick:function(){mr.navigate({path:"query",index:0,item:"",scope:""})}},r.a.createElement(b.a,null,r.a.createElement(Ka.a,null)),r.a.createElement(v.a,{primary:"EDITOR"})))},sc=Object(u.withVlow)([{store:Ln,keys:["watchThings"]}]),lc=Object(z.a)(function(e){return{grid:{maxHeight:"800px",overflowY:"auto",marginTop:e.spacing(2),marginBottom:e.spacing(2)}}}),uc=function(e){var t=e.watchThings,n=lc();return r.a.createElement(h.a,{container:!0,spacing:2,className:n.grid},Object.entries(t).map(function(e){var t=p()(e,2),n=t[0],a=t[1];return"#"===n?null:r.a.createElement(h.a,{item:!0,xs:12,key:n},r.a.createElement(la,{output:a}))}))};uc.propTypes={watchThings:Ln.types.watchThings.isRequired};var mc=sc(uc),dc=Object(u.withVlow)([{store:dr,keys:["match"]}]),pc=function(e){var t=e.match,n=r.a.useState(!1),a=p()(n,2),o=a[0],i=a[1],c=r.a.useState(0),s=p()(c,2),l=s[0],u=s[1],m={collection:r.a.createElement(Ir,null),user:r.a.createElement(Ro,null),query:r.a.createElement(oc,null)},d=function(e){return function(){u(e),i(!0)}};return r.a.createElement(We,{open:o,onClose:function(){i(!1)},topbar:r.a.createElement(zi,{additionals:r.a.createElement(kn,{menuIcon:r.a.createElement(w.a,null)},r.a.createElement(g.a,null,r.a.createElement(y.a,{button:!0,onClick:d(0)},r.a.createElement(b.a,null,r.a.createElement(j.a,null)),r.a.createElement(v.a,{primary:"WATCHER"})),r.a.createElement(y.a,{button:!0,onClick:d(1)},r.a.createElement(b.a,null,r.a.createElement(O.a,null)),r.a.createElement(v.a,{primary:"NODES"}))))}),mainContent:r.a.createElement(h.a,{container:!0,alignItems:"flex-start"},r.a.createElement(h.a,{container:!0,spacing:1,item:!0,xs:12,md:2,style:{paddingRight:8,paddingLeft:8,paddingBottom:8}},r.a.createElement(h.a,{item:!0,xs:4,md:12},r.a.createElement(f.a,null,r.a.createElement(Qr,null))),r.a.createElement(h.a,{item:!0,xs:4,md:12},r.a.createElement(f.a,null,r.a.createElement(Uo,null))),r.a.createElement(h.a,{item:!0,xs:4,md:12},r.a.createElement(f.a,null,r.a.createElement(cc,null)))),r.a.createElement(h.a,{container:!0,item:!0,xs:12,md:10,style:{paddingRight:8,paddingLeft:8,paddingBottom:8}},m[t.path])),bottomBar:r.a.createElement(R,null),drawerTitle:l?"NODES":"WATCHER",drawerContent:l?r.a.createElement(Ni,null):r.a.createElement(mc,null),toast:r.a.createElement(Et,null)})};pc.propTypes={match:dr.types.match.isRequired};var fc=dc(pc),hc=Object(z.a)(function(){return{root:{flexGrow:1,position:"absolute",margin:"auto",top:0,right:0,bottom:0,left:0,maxWidth:800,maxHeight:800},logo:{marginTop:20},wrapper:{width:500,height:250,textAlign:"center"}}}),gc=function(){var e=hc();return r.a.useEffect(function(){mr.connected()},[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(h.a,{alignItems:"center",className:e.root,container:!0,direction:"row",spacing:3,justify:"center"},r.a.createElement(h.a,{alignItems:"center",container:!0,direction:"column",spacing:3,justify:"center"},r.a.createElement(h.a,{className:e.wrapper,item:!0,xs:12},r.a.createElement(re.a,{variant:"h5"},"Loading...")),r.a.createElement(h.a,{className:e.wrapper,item:!0,xs:12},r.a.createElement("img",{className:e.logo,src:"/img/thingsdb.gif",alt:"loading...",draggable:"false",width:"100"})))))};function yc(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function bc(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?yc(n,!0).forEach(function(t){A()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):yc(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var vc=Object(u.withVlow)([{store:dr,keys:["loaded","connected"]}]),Ec={showPassword:!1,errors:{},switches:!1,form:{host:"localhost:9200",user:"",password:"",token:""}},wc={host:function(e){return e.host.length>0},user:function(e){return 0!=e.token.length||e.user.length>0},password:function(e){return 0!=e.token.length||e.password.length>0},token:function(e){return 0!=e.password.length||e.token.length>0}},kc=function(e){var t=e.loaded,n=e.connected,a=r.a.useState(Ec),o=p()(a,2),i=o[0],c=o[1],s=i.showPassword,l=i.errors,u=i.switches,m=i.form,d=function(e){var t=e.target,n=t.id,a=t.value;c(function(e){return bc({},e,{form:V()({},e.form,A()({},n,a)),errors:{}})})},f=function(){var e=Object.keys(wc).reduce(function(e,t){return e[t]=!wc[t](m),e},{});c(bc({},i,{errors:e})),Object.values(e).some(function(e){return e})||mr.connect(m,"0")};return r.a.createElement(Lt.a,{open:t&&!n,onClose:function(){return null},"aria-labelledby":"form-dialog-title",fullWidth:!0,maxWidth:"sm",onKeyDown:function(e){"Enter"==e.key&&f()}},r.a.createElement(Wt.a,{id:"form-dialog-title"},"Login"),r.a.createElement(Ft.a,null,r.a.createElement(lt,{tag:"0"}),r.a.createElement(M.a,{autoFocus:!0,margin:"dense",id:"host",label:"Host",type:"text",value:m.host,spellCheck:!1,onChange:d,fullWidth:!0,error:l.host}),r.a.createElement(ne.a,{in:!u,timeout:"auto",unmountOnExit:!0},r.a.createElement(M.a,{margin:"dense",id:"user",label:"User",type:"text",value:m.user,spellCheck:!1,onChange:d,fullWidth:!0,error:l.user}),r.a.createElement(M.a,{margin:"dense",id:"password",label:"Password",type:s?"text":"password",value:m.password,spellCheck:!1,onChange:d,fullWidth:!0,error:l.password,InputProps:{endAdornment:r.a.createElement(Yr.a,{position:"end"},r.a.createElement(Se.a,{onClick:function(){c(bc({},i,{showPassword:!s}))}},s?r.a.createElement(j.a,null):r.a.createElement(Xr.a,null)))}})),r.a.createElement(le.a,{control:r.a.createElement($r.a,{checked:u,color:"primary",id:"swicthToken",onChange:function(e){var t=e.target.checked;c(t?function(e){return bc({},e,{form:V()({},e.form,{user:"",password:""}),switches:t,errors:{}})}:function(e){return bc({},e,{form:V()({},e.form,{token:""}),switches:t,errors:{}})})}}),label:"Use token"}),r.a.createElement(ne.a,{in:u,timeout:"auto",unmountOnExit:!0},r.a.createElement(M.a,{margin:"dense",id:"token",label:"Token",type:"text",value:m.token,spellCheck:!1,onChange:d,fullWidth:!0,error:l.token}))),r.a.createElement(At.a,null,r.a.createElement(x.a,{onClick:f,color:"primary",disabled:Object.values(l).some(function(e){return e})},"Connect")))};kc.propTypes={loaded:dr.types.loaded.isRequired,connected:dr.types.connected.isRequired};var Oc=vc(kc),Tc=Object(s.a)({palette:{type:"dark",primary:{main:"rgba(85, 161, 255, 0.51)",red:"#ff0831",orange:"#ff7833",yellow:"#ecda45",green:"#4ca024",blue:"#3392ff",pink:"#c523a0",purple:"#9256bd",cyan:"#16c3b6",beige:"#ead0ae",white:"#fff"},secondary:{main:"rgba(0, 55, 123, 0.3)"},tertiary:{main:"#304765"},background:{default:"#2E3336",paper:"#1E2224"},typography:{useNextVariants:!0},text:{primary:"#eee",secondary:"#00000"}}}),jc=Object(u.withVlow)([{store:dr,keys:["loaded","connected"]}]),xc=function(e){var t=e.loaded,n=e.connected;return r.a.useEffect(function(){mr.logging()},[]),r.a.createElement(l.a,{theme:Tc},r.a.createElement(c.a,null),t?n?r.a.createElement(fc,null):r.a.createElement(Oc,null):r.a.createElement(gc,null))};xc.propTypes={loaded:dr.types.loaded.isRequired,connected:dr.types.connected.isRequired};var Cc=jc(xc);i.a.render(r.a.createElement(Cc,null),document.getElementById("app"))},812:function(e,t){}});")
